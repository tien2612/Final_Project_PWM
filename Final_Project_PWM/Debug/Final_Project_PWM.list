
Final_Project_PWM.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004fc0  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000068  080050d0  080050d0  000150d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005138  08005138  000200bc  2**0
                  CONTENTS
  4 .ARM          00000000  08005138  08005138  000200bc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005138  08005138  000200bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005138  08005138  00015138  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800513c  0800513c  0001513c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000bc  20000000  08005140  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004fc  200000bc  080051fc  000200bc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200005b8  080051fc  000205b8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200bc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001066a  00000000  00000000  000200e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002989  00000000  00000000  0003074f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e50  00000000  00000000  000330d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000d20  00000000  00000000  00033f28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019512  00000000  00000000  00034c48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000fb44  00000000  00000000  0004e15a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008bc61  00000000  00000000  0005dc9e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000e98ff  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003f18  00000000  00000000  000e9954  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200000bc 	.word	0x200000bc
 800012c:	00000000 	.word	0x00000000
 8000130:	080050b8 	.word	0x080050b8

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200000c0 	.word	0x200000c0
 800014c:	080050b8 	.word	0x080050b8

08000150 <__aeabi_fmul>:
 8000150:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000154:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000158:	bf1e      	ittt	ne
 800015a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800015e:	ea92 0f0c 	teqne	r2, ip
 8000162:	ea93 0f0c 	teqne	r3, ip
 8000166:	d06f      	beq.n	8000248 <__aeabi_fmul+0xf8>
 8000168:	441a      	add	r2, r3
 800016a:	ea80 0c01 	eor.w	ip, r0, r1
 800016e:	0240      	lsls	r0, r0, #9
 8000170:	bf18      	it	ne
 8000172:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000176:	d01e      	beq.n	80001b6 <__aeabi_fmul+0x66>
 8000178:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800017c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000180:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000184:	fba0 3101 	umull	r3, r1, r0, r1
 8000188:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800018c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000190:	bf3e      	ittt	cc
 8000192:	0049      	lslcc	r1, r1, #1
 8000194:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000198:	005b      	lslcc	r3, r3, #1
 800019a:	ea40 0001 	orr.w	r0, r0, r1
 800019e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80001a2:	2afd      	cmp	r2, #253	; 0xfd
 80001a4:	d81d      	bhi.n	80001e2 <__aeabi_fmul+0x92>
 80001a6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80001aa:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001ae:	bf08      	it	eq
 80001b0:	f020 0001 	biceq.w	r0, r0, #1
 80001b4:	4770      	bx	lr
 80001b6:	f090 0f00 	teq	r0, #0
 80001ba:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80001be:	bf08      	it	eq
 80001c0:	0249      	lsleq	r1, r1, #9
 80001c2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001c6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001ca:	3a7f      	subs	r2, #127	; 0x7f
 80001cc:	bfc2      	ittt	gt
 80001ce:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80001d2:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80001d6:	4770      	bxgt	lr
 80001d8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80001dc:	f04f 0300 	mov.w	r3, #0
 80001e0:	3a01      	subs	r2, #1
 80001e2:	dc5d      	bgt.n	80002a0 <__aeabi_fmul+0x150>
 80001e4:	f112 0f19 	cmn.w	r2, #25
 80001e8:	bfdc      	itt	le
 80001ea:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 80001ee:	4770      	bxle	lr
 80001f0:	f1c2 0200 	rsb	r2, r2, #0
 80001f4:	0041      	lsls	r1, r0, #1
 80001f6:	fa21 f102 	lsr.w	r1, r1, r2
 80001fa:	f1c2 0220 	rsb	r2, r2, #32
 80001fe:	fa00 fc02 	lsl.w	ip, r0, r2
 8000202:	ea5f 0031 	movs.w	r0, r1, rrx
 8000206:	f140 0000 	adc.w	r0, r0, #0
 800020a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800020e:	bf08      	it	eq
 8000210:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000214:	4770      	bx	lr
 8000216:	f092 0f00 	teq	r2, #0
 800021a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800021e:	bf02      	ittt	eq
 8000220:	0040      	lsleq	r0, r0, #1
 8000222:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000226:	3a01      	subeq	r2, #1
 8000228:	d0f9      	beq.n	800021e <__aeabi_fmul+0xce>
 800022a:	ea40 000c 	orr.w	r0, r0, ip
 800022e:	f093 0f00 	teq	r3, #0
 8000232:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000236:	bf02      	ittt	eq
 8000238:	0049      	lsleq	r1, r1, #1
 800023a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800023e:	3b01      	subeq	r3, #1
 8000240:	d0f9      	beq.n	8000236 <__aeabi_fmul+0xe6>
 8000242:	ea41 010c 	orr.w	r1, r1, ip
 8000246:	e78f      	b.n	8000168 <__aeabi_fmul+0x18>
 8000248:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800024c:	ea92 0f0c 	teq	r2, ip
 8000250:	bf18      	it	ne
 8000252:	ea93 0f0c 	teqne	r3, ip
 8000256:	d00a      	beq.n	800026e <__aeabi_fmul+0x11e>
 8000258:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 800025c:	bf18      	it	ne
 800025e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000262:	d1d8      	bne.n	8000216 <__aeabi_fmul+0xc6>
 8000264:	ea80 0001 	eor.w	r0, r0, r1
 8000268:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 800026c:	4770      	bx	lr
 800026e:	f090 0f00 	teq	r0, #0
 8000272:	bf17      	itett	ne
 8000274:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000278:	4608      	moveq	r0, r1
 800027a:	f091 0f00 	teqne	r1, #0
 800027e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000282:	d014      	beq.n	80002ae <__aeabi_fmul+0x15e>
 8000284:	ea92 0f0c 	teq	r2, ip
 8000288:	d101      	bne.n	800028e <__aeabi_fmul+0x13e>
 800028a:	0242      	lsls	r2, r0, #9
 800028c:	d10f      	bne.n	80002ae <__aeabi_fmul+0x15e>
 800028e:	ea93 0f0c 	teq	r3, ip
 8000292:	d103      	bne.n	800029c <__aeabi_fmul+0x14c>
 8000294:	024b      	lsls	r3, r1, #9
 8000296:	bf18      	it	ne
 8000298:	4608      	movne	r0, r1
 800029a:	d108      	bne.n	80002ae <__aeabi_fmul+0x15e>
 800029c:	ea80 0001 	eor.w	r0, r0, r1
 80002a0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80002a4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002a8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80002ac:	4770      	bx	lr
 80002ae:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80002b2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80002b6:	4770      	bx	lr

080002b8 <__aeabi_drsub>:
 80002b8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002bc:	e002      	b.n	80002c4 <__adddf3>
 80002be:	bf00      	nop

080002c0 <__aeabi_dsub>:
 80002c0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002c4 <__adddf3>:
 80002c4:	b530      	push	{r4, r5, lr}
 80002c6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002ca:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002ce:	ea94 0f05 	teq	r4, r5
 80002d2:	bf08      	it	eq
 80002d4:	ea90 0f02 	teqeq	r0, r2
 80002d8:	bf1f      	itttt	ne
 80002da:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002de:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002e2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002e6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002ea:	f000 80e2 	beq.w	80004b2 <__adddf3+0x1ee>
 80002ee:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002f2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002f6:	bfb8      	it	lt
 80002f8:	426d      	neglt	r5, r5
 80002fa:	dd0c      	ble.n	8000316 <__adddf3+0x52>
 80002fc:	442c      	add	r4, r5
 80002fe:	ea80 0202 	eor.w	r2, r0, r2
 8000302:	ea81 0303 	eor.w	r3, r1, r3
 8000306:	ea82 0000 	eor.w	r0, r2, r0
 800030a:	ea83 0101 	eor.w	r1, r3, r1
 800030e:	ea80 0202 	eor.w	r2, r0, r2
 8000312:	ea81 0303 	eor.w	r3, r1, r3
 8000316:	2d36      	cmp	r5, #54	; 0x36
 8000318:	bf88      	it	hi
 800031a:	bd30      	pophi	{r4, r5, pc}
 800031c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000320:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000324:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000328:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800032c:	d002      	beq.n	8000334 <__adddf3+0x70>
 800032e:	4240      	negs	r0, r0
 8000330:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000334:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000338:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800033c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000340:	d002      	beq.n	8000348 <__adddf3+0x84>
 8000342:	4252      	negs	r2, r2
 8000344:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000348:	ea94 0f05 	teq	r4, r5
 800034c:	f000 80a7 	beq.w	800049e <__adddf3+0x1da>
 8000350:	f1a4 0401 	sub.w	r4, r4, #1
 8000354:	f1d5 0e20 	rsbs	lr, r5, #32
 8000358:	db0d      	blt.n	8000376 <__adddf3+0xb2>
 800035a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800035e:	fa22 f205 	lsr.w	r2, r2, r5
 8000362:	1880      	adds	r0, r0, r2
 8000364:	f141 0100 	adc.w	r1, r1, #0
 8000368:	fa03 f20e 	lsl.w	r2, r3, lr
 800036c:	1880      	adds	r0, r0, r2
 800036e:	fa43 f305 	asr.w	r3, r3, r5
 8000372:	4159      	adcs	r1, r3
 8000374:	e00e      	b.n	8000394 <__adddf3+0xd0>
 8000376:	f1a5 0520 	sub.w	r5, r5, #32
 800037a:	f10e 0e20 	add.w	lr, lr, #32
 800037e:	2a01      	cmp	r2, #1
 8000380:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000384:	bf28      	it	cs
 8000386:	f04c 0c02 	orrcs.w	ip, ip, #2
 800038a:	fa43 f305 	asr.w	r3, r3, r5
 800038e:	18c0      	adds	r0, r0, r3
 8000390:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000394:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000398:	d507      	bpl.n	80003aa <__adddf3+0xe6>
 800039a:	f04f 0e00 	mov.w	lr, #0
 800039e:	f1dc 0c00 	rsbs	ip, ip, #0
 80003a2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003a6:	eb6e 0101 	sbc.w	r1, lr, r1
 80003aa:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003ae:	d31b      	bcc.n	80003e8 <__adddf3+0x124>
 80003b0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003b4:	d30c      	bcc.n	80003d0 <__adddf3+0x10c>
 80003b6:	0849      	lsrs	r1, r1, #1
 80003b8:	ea5f 0030 	movs.w	r0, r0, rrx
 80003bc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c0:	f104 0401 	add.w	r4, r4, #1
 80003c4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003cc:	f080 809a 	bcs.w	8000504 <__adddf3+0x240>
 80003d0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003d4:	bf08      	it	eq
 80003d6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003da:	f150 0000 	adcs.w	r0, r0, #0
 80003de:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003e2:	ea41 0105 	orr.w	r1, r1, r5
 80003e6:	bd30      	pop	{r4, r5, pc}
 80003e8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003ec:	4140      	adcs	r0, r0
 80003ee:	eb41 0101 	adc.w	r1, r1, r1
 80003f2:	3c01      	subs	r4, #1
 80003f4:	bf28      	it	cs
 80003f6:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003fa:	d2e9      	bcs.n	80003d0 <__adddf3+0x10c>
 80003fc:	f091 0f00 	teq	r1, #0
 8000400:	bf04      	itt	eq
 8000402:	4601      	moveq	r1, r0
 8000404:	2000      	moveq	r0, #0
 8000406:	fab1 f381 	clz	r3, r1
 800040a:	bf08      	it	eq
 800040c:	3320      	addeq	r3, #32
 800040e:	f1a3 030b 	sub.w	r3, r3, #11
 8000412:	f1b3 0220 	subs.w	r2, r3, #32
 8000416:	da0c      	bge.n	8000432 <__adddf3+0x16e>
 8000418:	320c      	adds	r2, #12
 800041a:	dd08      	ble.n	800042e <__adddf3+0x16a>
 800041c:	f102 0c14 	add.w	ip, r2, #20
 8000420:	f1c2 020c 	rsb	r2, r2, #12
 8000424:	fa01 f00c 	lsl.w	r0, r1, ip
 8000428:	fa21 f102 	lsr.w	r1, r1, r2
 800042c:	e00c      	b.n	8000448 <__adddf3+0x184>
 800042e:	f102 0214 	add.w	r2, r2, #20
 8000432:	bfd8      	it	le
 8000434:	f1c2 0c20 	rsble	ip, r2, #32
 8000438:	fa01 f102 	lsl.w	r1, r1, r2
 800043c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000440:	bfdc      	itt	le
 8000442:	ea41 010c 	orrle.w	r1, r1, ip
 8000446:	4090      	lslle	r0, r2
 8000448:	1ae4      	subs	r4, r4, r3
 800044a:	bfa2      	ittt	ge
 800044c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000450:	4329      	orrge	r1, r5
 8000452:	bd30      	popge	{r4, r5, pc}
 8000454:	ea6f 0404 	mvn.w	r4, r4
 8000458:	3c1f      	subs	r4, #31
 800045a:	da1c      	bge.n	8000496 <__adddf3+0x1d2>
 800045c:	340c      	adds	r4, #12
 800045e:	dc0e      	bgt.n	800047e <__adddf3+0x1ba>
 8000460:	f104 0414 	add.w	r4, r4, #20
 8000464:	f1c4 0220 	rsb	r2, r4, #32
 8000468:	fa20 f004 	lsr.w	r0, r0, r4
 800046c:	fa01 f302 	lsl.w	r3, r1, r2
 8000470:	ea40 0003 	orr.w	r0, r0, r3
 8000474:	fa21 f304 	lsr.w	r3, r1, r4
 8000478:	ea45 0103 	orr.w	r1, r5, r3
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	f1c4 040c 	rsb	r4, r4, #12
 8000482:	f1c4 0220 	rsb	r2, r4, #32
 8000486:	fa20 f002 	lsr.w	r0, r0, r2
 800048a:	fa01 f304 	lsl.w	r3, r1, r4
 800048e:	ea40 0003 	orr.w	r0, r0, r3
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	fa21 f004 	lsr.w	r0, r1, r4
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	f094 0f00 	teq	r4, #0
 80004a2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004a6:	bf06      	itte	eq
 80004a8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004ac:	3401      	addeq	r4, #1
 80004ae:	3d01      	subne	r5, #1
 80004b0:	e74e      	b.n	8000350 <__adddf3+0x8c>
 80004b2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004b6:	bf18      	it	ne
 80004b8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004bc:	d029      	beq.n	8000512 <__adddf3+0x24e>
 80004be:	ea94 0f05 	teq	r4, r5
 80004c2:	bf08      	it	eq
 80004c4:	ea90 0f02 	teqeq	r0, r2
 80004c8:	d005      	beq.n	80004d6 <__adddf3+0x212>
 80004ca:	ea54 0c00 	orrs.w	ip, r4, r0
 80004ce:	bf04      	itt	eq
 80004d0:	4619      	moveq	r1, r3
 80004d2:	4610      	moveq	r0, r2
 80004d4:	bd30      	pop	{r4, r5, pc}
 80004d6:	ea91 0f03 	teq	r1, r3
 80004da:	bf1e      	ittt	ne
 80004dc:	2100      	movne	r1, #0
 80004de:	2000      	movne	r0, #0
 80004e0:	bd30      	popne	{r4, r5, pc}
 80004e2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004e6:	d105      	bne.n	80004f4 <__adddf3+0x230>
 80004e8:	0040      	lsls	r0, r0, #1
 80004ea:	4149      	adcs	r1, r1
 80004ec:	bf28      	it	cs
 80004ee:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004f2:	bd30      	pop	{r4, r5, pc}
 80004f4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004f8:	bf3c      	itt	cc
 80004fa:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004fe:	bd30      	popcc	{r4, r5, pc}
 8000500:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000504:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000508:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800050c:	f04f 0000 	mov.w	r0, #0
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000516:	bf1a      	itte	ne
 8000518:	4619      	movne	r1, r3
 800051a:	4610      	movne	r0, r2
 800051c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000520:	bf1c      	itt	ne
 8000522:	460b      	movne	r3, r1
 8000524:	4602      	movne	r2, r0
 8000526:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800052a:	bf06      	itte	eq
 800052c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000530:	ea91 0f03 	teqeq	r1, r3
 8000534:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000538:	bd30      	pop	{r4, r5, pc}
 800053a:	bf00      	nop

0800053c <__aeabi_ui2d>:
 800053c:	f090 0f00 	teq	r0, #0
 8000540:	bf04      	itt	eq
 8000542:	2100      	moveq	r1, #0
 8000544:	4770      	bxeq	lr
 8000546:	b530      	push	{r4, r5, lr}
 8000548:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800054c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000550:	f04f 0500 	mov.w	r5, #0
 8000554:	f04f 0100 	mov.w	r1, #0
 8000558:	e750      	b.n	80003fc <__adddf3+0x138>
 800055a:	bf00      	nop

0800055c <__aeabi_i2d>:
 800055c:	f090 0f00 	teq	r0, #0
 8000560:	bf04      	itt	eq
 8000562:	2100      	moveq	r1, #0
 8000564:	4770      	bxeq	lr
 8000566:	b530      	push	{r4, r5, lr}
 8000568:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800056c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000570:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000574:	bf48      	it	mi
 8000576:	4240      	negmi	r0, r0
 8000578:	f04f 0100 	mov.w	r1, #0
 800057c:	e73e      	b.n	80003fc <__adddf3+0x138>
 800057e:	bf00      	nop

08000580 <__aeabi_f2d>:
 8000580:	0042      	lsls	r2, r0, #1
 8000582:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000586:	ea4f 0131 	mov.w	r1, r1, rrx
 800058a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800058e:	bf1f      	itttt	ne
 8000590:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000594:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000598:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 800059c:	4770      	bxne	lr
 800059e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005a2:	bf08      	it	eq
 80005a4:	4770      	bxeq	lr
 80005a6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005aa:	bf04      	itt	eq
 80005ac:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b0:	4770      	bxeq	lr
 80005b2:	b530      	push	{r4, r5, lr}
 80005b4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005b8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005bc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c0:	e71c      	b.n	80003fc <__adddf3+0x138>
 80005c2:	bf00      	nop

080005c4 <__aeabi_ul2d>:
 80005c4:	ea50 0201 	orrs.w	r2, r0, r1
 80005c8:	bf08      	it	eq
 80005ca:	4770      	bxeq	lr
 80005cc:	b530      	push	{r4, r5, lr}
 80005ce:	f04f 0500 	mov.w	r5, #0
 80005d2:	e00a      	b.n	80005ea <__aeabi_l2d+0x16>

080005d4 <__aeabi_l2d>:
 80005d4:	ea50 0201 	orrs.w	r2, r0, r1
 80005d8:	bf08      	it	eq
 80005da:	4770      	bxeq	lr
 80005dc:	b530      	push	{r4, r5, lr}
 80005de:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005e2:	d502      	bpl.n	80005ea <__aeabi_l2d+0x16>
 80005e4:	4240      	negs	r0, r0
 80005e6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005ea:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005ee:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005f2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005f6:	f43f aed8 	beq.w	80003aa <__adddf3+0xe6>
 80005fa:	f04f 0203 	mov.w	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000612:	f1c2 0320 	rsb	r3, r2, #32
 8000616:	fa00 fc03 	lsl.w	ip, r0, r3
 800061a:	fa20 f002 	lsr.w	r0, r0, r2
 800061e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000622:	ea40 000e 	orr.w	r0, r0, lr
 8000626:	fa21 f102 	lsr.w	r1, r1, r2
 800062a:	4414      	add	r4, r2
 800062c:	e6bd      	b.n	80003aa <__adddf3+0xe6>
 800062e:	bf00      	nop

08000630 <__aeabi_d2f>:
 8000630:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000634:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000638:	bf24      	itt	cs
 800063a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800063e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000642:	d90d      	bls.n	8000660 <__aeabi_d2f+0x30>
 8000644:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000648:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 800064c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000650:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000654:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000658:	bf08      	it	eq
 800065a:	f020 0001 	biceq.w	r0, r0, #1
 800065e:	4770      	bx	lr
 8000660:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000664:	d121      	bne.n	80006aa <__aeabi_d2f+0x7a>
 8000666:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 800066a:	bfbc      	itt	lt
 800066c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000670:	4770      	bxlt	lr
 8000672:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000676:	ea4f 5252 	mov.w	r2, r2, lsr #21
 800067a:	f1c2 0218 	rsb	r2, r2, #24
 800067e:	f1c2 0c20 	rsb	ip, r2, #32
 8000682:	fa10 f30c 	lsls.w	r3, r0, ip
 8000686:	fa20 f002 	lsr.w	r0, r0, r2
 800068a:	bf18      	it	ne
 800068c:	f040 0001 	orrne.w	r0, r0, #1
 8000690:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000694:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000698:	fa03 fc0c 	lsl.w	ip, r3, ip
 800069c:	ea40 000c 	orr.w	r0, r0, ip
 80006a0:	fa23 f302 	lsr.w	r3, r3, r2
 80006a4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80006a8:	e7cc      	b.n	8000644 <__aeabi_d2f+0x14>
 80006aa:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80006ae:	d107      	bne.n	80006c0 <__aeabi_d2f+0x90>
 80006b0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80006b4:	bf1e      	ittt	ne
 80006b6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80006ba:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80006be:	4770      	bxne	lr
 80006c0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80006c4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80006c8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80006cc:	4770      	bx	lr
 80006ce:	bf00      	nop

080006d0 <__aeabi_frsub>:
 80006d0:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 80006d4:	e002      	b.n	80006dc <__addsf3>
 80006d6:	bf00      	nop

080006d8 <__aeabi_fsub>:
 80006d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

080006dc <__addsf3>:
 80006dc:	0042      	lsls	r2, r0, #1
 80006de:	bf1f      	itttt	ne
 80006e0:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 80006e4:	ea92 0f03 	teqne	r2, r3
 80006e8:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 80006ec:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80006f0:	d06a      	beq.n	80007c8 <__addsf3+0xec>
 80006f2:	ea4f 6212 	mov.w	r2, r2, lsr #24
 80006f6:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 80006fa:	bfc1      	itttt	gt
 80006fc:	18d2      	addgt	r2, r2, r3
 80006fe:	4041      	eorgt	r1, r0
 8000700:	4048      	eorgt	r0, r1
 8000702:	4041      	eorgt	r1, r0
 8000704:	bfb8      	it	lt
 8000706:	425b      	neglt	r3, r3
 8000708:	2b19      	cmp	r3, #25
 800070a:	bf88      	it	hi
 800070c:	4770      	bxhi	lr
 800070e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000712:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000716:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800071a:	bf18      	it	ne
 800071c:	4240      	negne	r0, r0
 800071e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000722:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000726:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800072a:	bf18      	it	ne
 800072c:	4249      	negne	r1, r1
 800072e:	ea92 0f03 	teq	r2, r3
 8000732:	d03f      	beq.n	80007b4 <__addsf3+0xd8>
 8000734:	f1a2 0201 	sub.w	r2, r2, #1
 8000738:	fa41 fc03 	asr.w	ip, r1, r3
 800073c:	eb10 000c 	adds.w	r0, r0, ip
 8000740:	f1c3 0320 	rsb	r3, r3, #32
 8000744:	fa01 f103 	lsl.w	r1, r1, r3
 8000748:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800074c:	d502      	bpl.n	8000754 <__addsf3+0x78>
 800074e:	4249      	negs	r1, r1
 8000750:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000754:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000758:	d313      	bcc.n	8000782 <__addsf3+0xa6>
 800075a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800075e:	d306      	bcc.n	800076e <__addsf3+0x92>
 8000760:	0840      	lsrs	r0, r0, #1
 8000762:	ea4f 0131 	mov.w	r1, r1, rrx
 8000766:	f102 0201 	add.w	r2, r2, #1
 800076a:	2afe      	cmp	r2, #254	; 0xfe
 800076c:	d251      	bcs.n	8000812 <__addsf3+0x136>
 800076e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000772:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000776:	bf08      	it	eq
 8000778:	f020 0001 	biceq.w	r0, r0, #1
 800077c:	ea40 0003 	orr.w	r0, r0, r3
 8000780:	4770      	bx	lr
 8000782:	0049      	lsls	r1, r1, #1
 8000784:	eb40 0000 	adc.w	r0, r0, r0
 8000788:	3a01      	subs	r2, #1
 800078a:	bf28      	it	cs
 800078c:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000790:	d2ed      	bcs.n	800076e <__addsf3+0x92>
 8000792:	fab0 fc80 	clz	ip, r0
 8000796:	f1ac 0c08 	sub.w	ip, ip, #8
 800079a:	ebb2 020c 	subs.w	r2, r2, ip
 800079e:	fa00 f00c 	lsl.w	r0, r0, ip
 80007a2:	bfaa      	itet	ge
 80007a4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 80007a8:	4252      	neglt	r2, r2
 80007aa:	4318      	orrge	r0, r3
 80007ac:	bfbc      	itt	lt
 80007ae:	40d0      	lsrlt	r0, r2
 80007b0:	4318      	orrlt	r0, r3
 80007b2:	4770      	bx	lr
 80007b4:	f092 0f00 	teq	r2, #0
 80007b8:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 80007bc:	bf06      	itte	eq
 80007be:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 80007c2:	3201      	addeq	r2, #1
 80007c4:	3b01      	subne	r3, #1
 80007c6:	e7b5      	b.n	8000734 <__addsf3+0x58>
 80007c8:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80007cc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80007d0:	bf18      	it	ne
 80007d2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80007d6:	d021      	beq.n	800081c <__addsf3+0x140>
 80007d8:	ea92 0f03 	teq	r2, r3
 80007dc:	d004      	beq.n	80007e8 <__addsf3+0x10c>
 80007de:	f092 0f00 	teq	r2, #0
 80007e2:	bf08      	it	eq
 80007e4:	4608      	moveq	r0, r1
 80007e6:	4770      	bx	lr
 80007e8:	ea90 0f01 	teq	r0, r1
 80007ec:	bf1c      	itt	ne
 80007ee:	2000      	movne	r0, #0
 80007f0:	4770      	bxne	lr
 80007f2:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 80007f6:	d104      	bne.n	8000802 <__addsf3+0x126>
 80007f8:	0040      	lsls	r0, r0, #1
 80007fa:	bf28      	it	cs
 80007fc:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000800:	4770      	bx	lr
 8000802:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000806:	bf3c      	itt	cc
 8000808:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 800080c:	4770      	bxcc	lr
 800080e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000812:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000816:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800081a:	4770      	bx	lr
 800081c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000820:	bf16      	itet	ne
 8000822:	4608      	movne	r0, r1
 8000824:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000828:	4601      	movne	r1, r0
 800082a:	0242      	lsls	r2, r0, #9
 800082c:	bf06      	itte	eq
 800082e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000832:	ea90 0f01 	teqeq	r0, r1
 8000836:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 800083a:	4770      	bx	lr

0800083c <__aeabi_ui2f>:
 800083c:	f04f 0300 	mov.w	r3, #0
 8000840:	e004      	b.n	800084c <__aeabi_i2f+0x8>
 8000842:	bf00      	nop

08000844 <__aeabi_i2f>:
 8000844:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000848:	bf48      	it	mi
 800084a:	4240      	negmi	r0, r0
 800084c:	ea5f 0c00 	movs.w	ip, r0
 8000850:	bf08      	it	eq
 8000852:	4770      	bxeq	lr
 8000854:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000858:	4601      	mov	r1, r0
 800085a:	f04f 0000 	mov.w	r0, #0
 800085e:	e01c      	b.n	800089a <__aeabi_l2f+0x2a>

08000860 <__aeabi_ul2f>:
 8000860:	ea50 0201 	orrs.w	r2, r0, r1
 8000864:	bf08      	it	eq
 8000866:	4770      	bxeq	lr
 8000868:	f04f 0300 	mov.w	r3, #0
 800086c:	e00a      	b.n	8000884 <__aeabi_l2f+0x14>
 800086e:	bf00      	nop

08000870 <__aeabi_l2f>:
 8000870:	ea50 0201 	orrs.w	r2, r0, r1
 8000874:	bf08      	it	eq
 8000876:	4770      	bxeq	lr
 8000878:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 800087c:	d502      	bpl.n	8000884 <__aeabi_l2f+0x14>
 800087e:	4240      	negs	r0, r0
 8000880:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000884:	ea5f 0c01 	movs.w	ip, r1
 8000888:	bf02      	ittt	eq
 800088a:	4684      	moveq	ip, r0
 800088c:	4601      	moveq	r1, r0
 800088e:	2000      	moveq	r0, #0
 8000890:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000894:	bf08      	it	eq
 8000896:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 800089a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 800089e:	fabc f28c 	clz	r2, ip
 80008a2:	3a08      	subs	r2, #8
 80008a4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 80008a8:	db10      	blt.n	80008cc <__aeabi_l2f+0x5c>
 80008aa:	fa01 fc02 	lsl.w	ip, r1, r2
 80008ae:	4463      	add	r3, ip
 80008b0:	fa00 fc02 	lsl.w	ip, r0, r2
 80008b4:	f1c2 0220 	rsb	r2, r2, #32
 80008b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80008bc:	fa20 f202 	lsr.w	r2, r0, r2
 80008c0:	eb43 0002 	adc.w	r0, r3, r2
 80008c4:	bf08      	it	eq
 80008c6:	f020 0001 	biceq.w	r0, r0, #1
 80008ca:	4770      	bx	lr
 80008cc:	f102 0220 	add.w	r2, r2, #32
 80008d0:	fa01 fc02 	lsl.w	ip, r1, r2
 80008d4:	f1c2 0220 	rsb	r2, r2, #32
 80008d8:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 80008dc:	fa21 f202 	lsr.w	r2, r1, r2
 80008e0:	eb43 0002 	adc.w	r0, r3, r2
 80008e4:	bf08      	it	eq
 80008e6:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80008ea:	4770      	bx	lr

080008ec <__gesf2>:
 80008ec:	f04f 3cff 	mov.w	ip, #4294967295
 80008f0:	e006      	b.n	8000900 <__cmpsf2+0x4>
 80008f2:	bf00      	nop

080008f4 <__lesf2>:
 80008f4:	f04f 0c01 	mov.w	ip, #1
 80008f8:	e002      	b.n	8000900 <__cmpsf2+0x4>
 80008fa:	bf00      	nop

080008fc <__cmpsf2>:
 80008fc:	f04f 0c01 	mov.w	ip, #1
 8000900:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000904:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000908:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800090c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000910:	bf18      	it	ne
 8000912:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000916:	d011      	beq.n	800093c <__cmpsf2+0x40>
 8000918:	b001      	add	sp, #4
 800091a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800091e:	bf18      	it	ne
 8000920:	ea90 0f01 	teqne	r0, r1
 8000924:	bf58      	it	pl
 8000926:	ebb2 0003 	subspl.w	r0, r2, r3
 800092a:	bf88      	it	hi
 800092c:	17c8      	asrhi	r0, r1, #31
 800092e:	bf38      	it	cc
 8000930:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000934:	bf18      	it	ne
 8000936:	f040 0001 	orrne.w	r0, r0, #1
 800093a:	4770      	bx	lr
 800093c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000940:	d102      	bne.n	8000948 <__cmpsf2+0x4c>
 8000942:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000946:	d105      	bne.n	8000954 <__cmpsf2+0x58>
 8000948:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800094c:	d1e4      	bne.n	8000918 <__cmpsf2+0x1c>
 800094e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000952:	d0e1      	beq.n	8000918 <__cmpsf2+0x1c>
 8000954:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000958:	4770      	bx	lr
 800095a:	bf00      	nop

0800095c <__aeabi_cfrcmple>:
 800095c:	4684      	mov	ip, r0
 800095e:	4608      	mov	r0, r1
 8000960:	4661      	mov	r1, ip
 8000962:	e7ff      	b.n	8000964 <__aeabi_cfcmpeq>

08000964 <__aeabi_cfcmpeq>:
 8000964:	b50f      	push	{r0, r1, r2, r3, lr}
 8000966:	f7ff ffc9 	bl	80008fc <__cmpsf2>
 800096a:	2800      	cmp	r0, #0
 800096c:	bf48      	it	mi
 800096e:	f110 0f00 	cmnmi.w	r0, #0
 8000972:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000974 <__aeabi_fcmpeq>:
 8000974:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000978:	f7ff fff4 	bl	8000964 <__aeabi_cfcmpeq>
 800097c:	bf0c      	ite	eq
 800097e:	2001      	moveq	r0, #1
 8000980:	2000      	movne	r0, #0
 8000982:	f85d fb08 	ldr.w	pc, [sp], #8
 8000986:	bf00      	nop

08000988 <__aeabi_fcmplt>:
 8000988:	f84d ed08 	str.w	lr, [sp, #-8]!
 800098c:	f7ff ffea 	bl	8000964 <__aeabi_cfcmpeq>
 8000990:	bf34      	ite	cc
 8000992:	2001      	movcc	r0, #1
 8000994:	2000      	movcs	r0, #0
 8000996:	f85d fb08 	ldr.w	pc, [sp], #8
 800099a:	bf00      	nop

0800099c <__aeabi_fcmple>:
 800099c:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009a0:	f7ff ffe0 	bl	8000964 <__aeabi_cfcmpeq>
 80009a4:	bf94      	ite	ls
 80009a6:	2001      	movls	r0, #1
 80009a8:	2000      	movhi	r0, #0
 80009aa:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ae:	bf00      	nop

080009b0 <__aeabi_fcmpge>:
 80009b0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009b4:	f7ff ffd2 	bl	800095c <__aeabi_cfrcmple>
 80009b8:	bf94      	ite	ls
 80009ba:	2001      	movls	r0, #1
 80009bc:	2000      	movhi	r0, #0
 80009be:	f85d fb08 	ldr.w	pc, [sp], #8
 80009c2:	bf00      	nop

080009c4 <__aeabi_fcmpgt>:
 80009c4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c8:	f7ff ffc8 	bl	800095c <__aeabi_cfrcmple>
 80009cc:	bf34      	ite	cc
 80009ce:	2001      	movcc	r0, #1
 80009d0:	2000      	movcs	r0, #0
 80009d2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009d6:	bf00      	nop

080009d8 <__aeabi_f2iz>:
 80009d8:	ea4f 0240 	mov.w	r2, r0, lsl #1
 80009dc:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 80009e0:	d30f      	bcc.n	8000a02 <__aeabi_f2iz+0x2a>
 80009e2:	f04f 039e 	mov.w	r3, #158	; 0x9e
 80009e6:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 80009ea:	d90d      	bls.n	8000a08 <__aeabi_f2iz+0x30>
 80009ec:	ea4f 2300 	mov.w	r3, r0, lsl #8
 80009f0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80009f4:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 80009f8:	fa23 f002 	lsr.w	r0, r3, r2
 80009fc:	bf18      	it	ne
 80009fe:	4240      	negne	r0, r0
 8000a00:	4770      	bx	lr
 8000a02:	f04f 0000 	mov.w	r0, #0
 8000a06:	4770      	bx	lr
 8000a08:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000a0c:	d101      	bne.n	8000a12 <__aeabi_f2iz+0x3a>
 8000a0e:	0242      	lsls	r2, r0, #9
 8000a10:	d105      	bne.n	8000a1e <__aeabi_f2iz+0x46>
 8000a12:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8000a16:	bf08      	it	eq
 8000a18:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a1c:	4770      	bx	lr
 8000a1e:	f04f 0000 	mov.w	r0, #0
 8000a22:	4770      	bx	lr

08000a24 <updateDisplay>:
 8000a24:	b580      	push	{r7, lr}
 8000a26:	af00      	add	r7, sp, #0
 8000a28:	4b0b      	ldr	r3, [pc, #44]	; (8000a58 <updateDisplay+0x34>)
 8000a2a:	681b      	ldr	r3, [r3, #0]
 8000a2c:	4a0b      	ldr	r2, [pc, #44]	; (8000a5c <updateDisplay+0x38>)
 8000a2e:	fb82 1203 	smull	r1, r2, r2, r3
 8000a32:	1192      	asrs	r2, r2, #6
 8000a34:	17db      	asrs	r3, r3, #31
 8000a36:	1ad3      	subs	r3, r2, r3
 8000a38:	461a      	mov	r2, r3
 8000a3a:	4909      	ldr	r1, [pc, #36]	; (8000a60 <updateDisplay+0x3c>)
 8000a3c:	4809      	ldr	r0, [pc, #36]	; (8000a64 <updateDisplay+0x40>)
 8000a3e:	f003 ff01 	bl	8004844 <siprintf>
 8000a42:	4603      	mov	r3, r0
 8000a44:	b29a      	uxth	r2, r3
 8000a46:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000a4a:	4906      	ldr	r1, [pc, #24]	; (8000a64 <updateDisplay+0x40>)
 8000a4c:	4806      	ldr	r0, [pc, #24]	; (8000a68 <updateDisplay+0x44>)
 8000a4e:	f003 fd5c 	bl	800450a <HAL_UART_Transmit>
 8000a52:	bf00      	nop
 8000a54:	bd80      	pop	{r7, pc}
 8000a56:	bf00      	nop
 8000a58:	2000000c 	.word	0x2000000c
 8000a5c:	10624dd3 	.word	0x10624dd3
 8000a60:	080050d0 	.word	0x080050d0
 8000a64:	2000017c 	.word	0x2000017c
 8000a68:	20000240 	.word	0x20000240

08000a6c <WhichButtonIsPressed>:
enum ButtonState buttonState = BUTTON_RELEASED;

extern UART_HandleTypeDef huart2;
char str[50];
int flag_t = 0;
int WhichButtonIsPressed() {
 8000a6c:	b580      	push	{r7, lr}
 8000a6e:	af00      	add	r7, sp, #0

	if (flag_t == 0) {
 8000a70:	4b16      	ldr	r3, [pc, #88]	; (8000acc <WhichButtonIsPressed+0x60>)
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	d106      	bne.n	8000a86 <WhichButtonIsPressed+0x1a>
		flag_t++;
 8000a78:	4b14      	ldr	r3, [pc, #80]	; (8000acc <WhichButtonIsPressed+0x60>)
 8000a7a:	681b      	ldr	r3, [r3, #0]
 8000a7c:	3301      	adds	r3, #1
 8000a7e:	4a13      	ldr	r2, [pc, #76]	; (8000acc <WhichButtonIsPressed+0x60>)
 8000a80:	6013      	str	r3, [r2, #0]
		return 0;
 8000a82:	2300      	movs	r3, #0
 8000a84:	e020      	b.n	8000ac8 <WhichButtonIsPressed+0x5c>
	}

	if (is_button_pressed(2)) return 3;
 8000a86:	2002      	movs	r0, #2
 8000a88:	f000 fbaa 	bl	80011e0 <is_button_pressed>
 8000a8c:	4603      	mov	r3, r0
 8000a8e:	2b00      	cmp	r3, #0
 8000a90:	d001      	beq.n	8000a96 <WhichButtonIsPressed+0x2a>
 8000a92:	2303      	movs	r3, #3
 8000a94:	e018      	b.n	8000ac8 <WhichButtonIsPressed+0x5c>
	if (is_button_pressed(1)) return 2;
 8000a96:	2001      	movs	r0, #1
 8000a98:	f000 fba2 	bl	80011e0 <is_button_pressed>
 8000a9c:	4603      	mov	r3, r0
 8000a9e:	2b00      	cmp	r3, #0
 8000aa0:	d001      	beq.n	8000aa6 <WhichButtonIsPressed+0x3a>
 8000aa2:	2302      	movs	r3, #2
 8000aa4:	e010      	b.n	8000ac8 <WhichButtonIsPressed+0x5c>

	if (is_button_pressed(0)) return 1;
 8000aa6:	2000      	movs	r0, #0
 8000aa8:	f000 fb9a 	bl	80011e0 <is_button_pressed>
 8000aac:	4603      	mov	r3, r0
 8000aae:	2b00      	cmp	r3, #0
 8000ab0:	d001      	beq.n	8000ab6 <WhichButtonIsPressed+0x4a>
 8000ab2:	2301      	movs	r3, #1
 8000ab4:	e008      	b.n	8000ac8 <WhichButtonIsPressed+0x5c>
	if (is_button_pressed(3)) return 4;
 8000ab6:	2003      	movs	r0, #3
 8000ab8:	f000 fb92 	bl	80011e0 <is_button_pressed>
 8000abc:	4603      	mov	r3, r0
 8000abe:	2b00      	cmp	r3, #0
 8000ac0:	d001      	beq.n	8000ac6 <WhichButtonIsPressed+0x5a>
 8000ac2:	2304      	movs	r3, #4
 8000ac4:	e000      	b.n	8000ac8 <WhichButtonIsPressed+0x5c>

	return 0; // None of these buttons are pressed
 8000ac6:	2300      	movs	r3, #0
}
 8000ac8:	4618      	mov	r0, r3
 8000aca:	bd80      	pop	{r7, pc}
 8000acc:	200000fc 	.word	0x200000fc

08000ad0 <clear_vertical>:

void clear_vertical() {
 8000ad0:	b580      	push	{r7, lr}
 8000ad2:	af00      	add	r7, sp, #0
	clear_led(TRAFFIC_1_LED);
 8000ad4:	2028      	movs	r0, #40	; 0x28
 8000ad6:	f001 fd4b 	bl	8002570 <clear_led>
}
 8000ada:	bf00      	nop
 8000adc:	bd80      	pop	{r7, pc}

08000ade <clear_horizontal>:

void clear_horizontal() {
 8000ade:	b580      	push	{r7, lr}
 8000ae0:	af00      	add	r7, sp, #0
	clear_led(TRAFFIC_2_LED);
 8000ae2:	2029      	movs	r0, #41	; 0x29
 8000ae4:	f001 fd44 	bl	8002570 <clear_led>
}
 8000ae8:	bf00      	nop
 8000aea:	bd80      	pop	{r7, pc}

08000aec <vertical_processing>:

void vertical_processing() {
 8000aec:	b580      	push	{r7, lr}
 8000aee:	af00      	add	r7, sp, #0
	clear_vertical();
 8000af0:	f7ff ffee 	bl	8000ad0 <clear_vertical>
	switch (CURRENT_STATE[0]) {
 8000af4:	4b0e      	ldr	r3, [pc, #56]	; (8000b30 <vertical_processing+0x44>)
 8000af6:	681b      	ldr	r3, [r3, #0]
 8000af8:	2b02      	cmp	r3, #2
 8000afa:	d010      	beq.n	8000b1e <vertical_processing+0x32>
 8000afc:	2b02      	cmp	r3, #2
 8000afe:	dc13      	bgt.n	8000b28 <vertical_processing+0x3c>
 8000b00:	2b00      	cmp	r3, #0
 8000b02:	d002      	beq.n	8000b0a <vertical_processing+0x1e>
 8000b04:	2b01      	cmp	r3, #1
 8000b06:	d005      	beq.n	8000b14 <vertical_processing+0x28>
		break;
	case 2:
		set_led_color(TRAFFIC_1_LED, GREEN_COLOR);
		break;
	default:
		break;
 8000b08:	e00e      	b.n	8000b28 <vertical_processing+0x3c>
		set_led_color(TRAFFIC_1_LED, RED_COLOR);
 8000b0a:	211e      	movs	r1, #30
 8000b0c:	2028      	movs	r0, #40	; 0x28
 8000b0e:	f001 fc6b 	bl	80023e8 <set_led_color>
		break;
 8000b12:	e00a      	b.n	8000b2a <vertical_processing+0x3e>
		set_led_color(TRAFFIC_1_LED, AMBER_COLOR);
 8000b14:	211f      	movs	r1, #31
 8000b16:	2028      	movs	r0, #40	; 0x28
 8000b18:	f001 fc66 	bl	80023e8 <set_led_color>
		break;
 8000b1c:	e005      	b.n	8000b2a <vertical_processing+0x3e>
		set_led_color(TRAFFIC_1_LED, GREEN_COLOR);
 8000b1e:	2120      	movs	r1, #32
 8000b20:	2028      	movs	r0, #40	; 0x28
 8000b22:	f001 fc61 	bl	80023e8 <set_led_color>
		break;
 8000b26:	e000      	b.n	8000b2a <vertical_processing+0x3e>
		break;
 8000b28:	bf00      	nop
	}
}
 8000b2a:	bf00      	nop
 8000b2c:	bd80      	pop	{r7, pc}
 8000b2e:	bf00      	nop
 8000b30:	20000004 	.word	0x20000004

08000b34 <horizontal_processing>:

void horizontal_processing() {
 8000b34:	b580      	push	{r7, lr}
 8000b36:	af00      	add	r7, sp, #0
	clear_horizontal();
 8000b38:	f7ff ffd1 	bl	8000ade <clear_horizontal>
	switch (CURRENT_STATE[1]) {
 8000b3c:	4b0e      	ldr	r3, [pc, #56]	; (8000b78 <horizontal_processing+0x44>)
 8000b3e:	685b      	ldr	r3, [r3, #4]
 8000b40:	2b02      	cmp	r3, #2
 8000b42:	d010      	beq.n	8000b66 <horizontal_processing+0x32>
 8000b44:	2b02      	cmp	r3, #2
 8000b46:	dc13      	bgt.n	8000b70 <horizontal_processing+0x3c>
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	d002      	beq.n	8000b52 <horizontal_processing+0x1e>
 8000b4c:	2b01      	cmp	r3, #1
 8000b4e:	d005      	beq.n	8000b5c <horizontal_processing+0x28>
		break;
	case 2:
		set_led_color(TRAFFIC_2_LED, GREEN_COLOR);
		break;
	default:
		break;
 8000b50:	e00e      	b.n	8000b70 <horizontal_processing+0x3c>
		set_led_color(TRAFFIC_2_LED, RED_COLOR);
 8000b52:	211e      	movs	r1, #30
 8000b54:	2029      	movs	r0, #41	; 0x29
 8000b56:	f001 fc47 	bl	80023e8 <set_led_color>
		break;
 8000b5a:	e00a      	b.n	8000b72 <horizontal_processing+0x3e>
		set_led_color(TRAFFIC_2_LED, AMBER_COLOR);
 8000b5c:	211f      	movs	r1, #31
 8000b5e:	2029      	movs	r0, #41	; 0x29
 8000b60:	f001 fc42 	bl	80023e8 <set_led_color>
		break;
 8000b64:	e005      	b.n	8000b72 <horizontal_processing+0x3e>
		set_led_color(TRAFFIC_2_LED, GREEN_COLOR);
 8000b66:	2120      	movs	r1, #32
 8000b68:	2029      	movs	r0, #41	; 0x29
 8000b6a:	f001 fc3d 	bl	80023e8 <set_led_color>
		break;
 8000b6e:	e000      	b.n	8000b72 <horizontal_processing+0x3e>
		break;
 8000b70:	bf00      	nop
	}
}
 8000b72:	bf00      	nop
 8000b74:	bd80      	pop	{r7, pc}
 8000b76:	bf00      	nop
 8000b78:	20000004 	.word	0x20000004

08000b7c <state_update>:

void state_update(int idx) {
 8000b7c:	b480      	push	{r7}
 8000b7e:	b083      	sub	sp, #12
 8000b80:	af00      	add	r7, sp, #0
 8000b82:	6078      	str	r0, [r7, #4]
	if (idx == 0) {
 8000b84:	687b      	ldr	r3, [r7, #4]
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	d11e      	bne.n	8000bc8 <state_update+0x4c>
		switch (CURRENT_STATE[idx]) {
 8000b8a:	4a21      	ldr	r2, [pc, #132]	; (8000c10 <state_update+0x94>)
 8000b8c:	687b      	ldr	r3, [r7, #4]
 8000b8e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000b92:	2b02      	cmp	r3, #2
 8000b94:	d012      	beq.n	8000bbc <state_update+0x40>
 8000b96:	2b02      	cmp	r3, #2
 8000b98:	dc29      	bgt.n	8000bee <state_update+0x72>
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	d002      	beq.n	8000ba4 <state_update+0x28>
 8000b9e:	2b01      	cmp	r3, #1
 8000ba0:	d006      	beq.n	8000bb0 <state_update+0x34>
			break;
		case 2:
			CURRENT_STATE[idx] = 1;
			break;
		default:
			break;
 8000ba2:	e024      	b.n	8000bee <state_update+0x72>
			CURRENT_STATE[idx] = 2;
 8000ba4:	4a1a      	ldr	r2, [pc, #104]	; (8000c10 <state_update+0x94>)
 8000ba6:	687b      	ldr	r3, [r7, #4]
 8000ba8:	2102      	movs	r1, #2
 8000baa:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			break;
 8000bae:	e01f      	b.n	8000bf0 <state_update+0x74>
			CURRENT_STATE[idx] = 0;
 8000bb0:	4a17      	ldr	r2, [pc, #92]	; (8000c10 <state_update+0x94>)
 8000bb2:	687b      	ldr	r3, [r7, #4]
 8000bb4:	2100      	movs	r1, #0
 8000bb6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			break;
 8000bba:	e019      	b.n	8000bf0 <state_update+0x74>
			CURRENT_STATE[idx] = 1;
 8000bbc:	4a14      	ldr	r2, [pc, #80]	; (8000c10 <state_update+0x94>)
 8000bbe:	687b      	ldr	r3, [r7, #4]
 8000bc0:	2101      	movs	r1, #1
 8000bc2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			break;
 8000bc6:	e013      	b.n	8000bf0 <state_update+0x74>
		}
	} else {
		CURRENT_STATE[idx] = (CURRENT_STATE[idx] - 1 + 3) % 3;
 8000bc8:	4a11      	ldr	r2, [pc, #68]	; (8000c10 <state_update+0x94>)
 8000bca:	687b      	ldr	r3, [r7, #4]
 8000bcc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000bd0:	1c99      	adds	r1, r3, #2
 8000bd2:	4b10      	ldr	r3, [pc, #64]	; (8000c14 <state_update+0x98>)
 8000bd4:	fb83 3201 	smull	r3, r2, r3, r1
 8000bd8:	17cb      	asrs	r3, r1, #31
 8000bda:	1ad2      	subs	r2, r2, r3
 8000bdc:	4613      	mov	r3, r2
 8000bde:	005b      	lsls	r3, r3, #1
 8000be0:	4413      	add	r3, r2
 8000be2:	1aca      	subs	r2, r1, r3
 8000be4:	490a      	ldr	r1, [pc, #40]	; (8000c10 <state_update+0x94>)
 8000be6:	687b      	ldr	r3, [r7, #4]
 8000be8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000bec:	e000      	b.n	8000bf0 <state_update+0x74>
			break;
 8000bee:	bf00      	nop
	}
	SEG7_CLOCK[idx] = LED_TIME[CURRENT_STATE[idx]];
 8000bf0:	4a07      	ldr	r2, [pc, #28]	; (8000c10 <state_update+0x94>)
 8000bf2:	687b      	ldr	r3, [r7, #4]
 8000bf4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000bf8:	4a07      	ldr	r2, [pc, #28]	; (8000c18 <state_update+0x9c>)
 8000bfa:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000bfe:	4907      	ldr	r1, [pc, #28]	; (8000c1c <state_update+0xa0>)
 8000c00:	687b      	ldr	r3, [r7, #4]
 8000c02:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000c06:	bf00      	nop
 8000c08:	370c      	adds	r7, #12
 8000c0a:	46bd      	mov	sp, r7
 8000c0c:	bc80      	pop	{r7}
 8000c0e:	4770      	bx	lr
 8000c10:	20000004 	.word	0x20000004
 8000c14:	55555556 	.word	0x55555556
 8000c18:	20000014 	.word	0x20000014
 8000c1c:	2000000c 	.word	0x2000000c

08000c20 <check_state>:

void check_state() {
 8000c20:	b580      	push	{r7, lr}
 8000c22:	af00      	add	r7, sp, #0
	if (SEG7_CLOCK[VER_LED] <= 0) {
 8000c24:	4b09      	ldr	r3, [pc, #36]	; (8000c4c <check_state+0x2c>)
 8000c26:	681b      	ldr	r3, [r3, #0]
 8000c28:	2b00      	cmp	r3, #0
 8000c2a:	dc04      	bgt.n	8000c36 <check_state+0x16>
		state_update(VER_LED);
 8000c2c:	2000      	movs	r0, #0
 8000c2e:	f7ff ffa5 	bl	8000b7c <state_update>
		vertical_processing();
 8000c32:	f7ff ff5b 	bl	8000aec <vertical_processing>
	}

	if (SEG7_CLOCK[HOR_LED] <= 0) {
 8000c36:	4b05      	ldr	r3, [pc, #20]	; (8000c4c <check_state+0x2c>)
 8000c38:	685b      	ldr	r3, [r3, #4]
 8000c3a:	2b00      	cmp	r3, #0
 8000c3c:	dc04      	bgt.n	8000c48 <check_state+0x28>
		state_update(HOR_LED);
 8000c3e:	2001      	movs	r0, #1
 8000c40:	f7ff ff9c 	bl	8000b7c <state_update>
		horizontal_processing();
 8000c44:	f7ff ff76 	bl	8000b34 <horizontal_processing>
	}
}
 8000c48:	bf00      	nop
 8000c4a:	bd80      	pop	{r7, pc}
 8000c4c:	2000000c 	.word	0x2000000c

08000c50 <update_clock>:

void update_clock() {
 8000c50:	b580      	push	{r7, lr}
 8000c52:	af00      	add	r7, sp, #0
	if (timer2_flag == 1) {
 8000c54:	4b0c      	ldr	r3, [pc, #48]	; (8000c88 <update_clock+0x38>)
 8000c56:	681b      	ldr	r3, [r3, #0]
 8000c58:	2b01      	cmp	r3, #1
 8000c5a:	d113      	bne.n	8000c84 <update_clock+0x34>
		SEG7_CLOCK[VER_LED] = SEG7_CLOCK[VER_LED] - TIME_UNIT;
 8000c5c:	4b0b      	ldr	r3, [pc, #44]	; (8000c8c <update_clock+0x3c>)
 8000c5e:	681b      	ldr	r3, [r3, #0]
 8000c60:	f5a3 737a 	sub.w	r3, r3, #1000	; 0x3e8
 8000c64:	4a09      	ldr	r2, [pc, #36]	; (8000c8c <update_clock+0x3c>)
 8000c66:	6013      	str	r3, [r2, #0]
		SEG7_CLOCK[HOR_LED] = SEG7_CLOCK[HOR_LED] - TIME_UNIT;
 8000c68:	4b08      	ldr	r3, [pc, #32]	; (8000c8c <update_clock+0x3c>)
 8000c6a:	685b      	ldr	r3, [r3, #4]
 8000c6c:	f5a3 737a 	sub.w	r3, r3, #1000	; 0x3e8
 8000c70:	4a06      	ldr	r2, [pc, #24]	; (8000c8c <update_clock+0x3c>)
 8000c72:	6053      	str	r3, [r2, #4]
		check_state();
 8000c74:	f7ff ffd4 	bl	8000c20 <check_state>
		updateDisplay();
 8000c78:	f7ff fed4 	bl	8000a24 <updateDisplay>
		setTimer2(1000);
 8000c7c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000c80:	f001 f972 	bl	8001f68 <setTimer2>
	}
}
 8000c84:	bf00      	nop
 8000c86:	bd80      	pop	{r7, pc}
 8000c88:	2000014c 	.word	0x2000014c
 8000c8c:	2000000c 	.word	0x2000000c

08000c90 <reset>:

void reset() {
 8000c90:	b480      	push	{r7}
 8000c92:	af00      	add	r7, sp, #0
	LED_TIME[RED_STATUS] = NORMAL_RED ;
 8000c94:	4b11      	ldr	r3, [pc, #68]	; (8000cdc <reset+0x4c>)
 8000c96:	f242 7210 	movw	r2, #10000	; 0x2710
 8000c9a:	601a      	str	r2, [r3, #0]
	LED_TIME[YELLOW_STATUS] = NORMAL_YELLOW;
 8000c9c:	4b0f      	ldr	r3, [pc, #60]	; (8000cdc <reset+0x4c>)
 8000c9e:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8000ca2:	605a      	str	r2, [r3, #4]
	LED_TIME[GREEN_STATUS] = NORMAL_GREEN;
 8000ca4:	4b0d      	ldr	r3, [pc, #52]	; (8000cdc <reset+0x4c>)
 8000ca6:	f641 3258 	movw	r2, #7000	; 0x1b58
 8000caa:	609a      	str	r2, [r3, #8]
	CURRENT_STATE[VER_LED] = RED_STATUS;
 8000cac:	4b0c      	ldr	r3, [pc, #48]	; (8000ce0 <reset+0x50>)
 8000cae:	2200      	movs	r2, #0
 8000cb0:	601a      	str	r2, [r3, #0]
	CURRENT_STATE[HOR_LED] = GREEN_STATUS;
 8000cb2:	4b0b      	ldr	r3, [pc, #44]	; (8000ce0 <reset+0x50>)
 8000cb4:	2202      	movs	r2, #2
 8000cb6:	605a      	str	r2, [r3, #4]
	SEG7_CLOCK[VER_LED] = LED_TIME[CURRENT_STATE[VER_LED]];
 8000cb8:	4b09      	ldr	r3, [pc, #36]	; (8000ce0 <reset+0x50>)
 8000cba:	681b      	ldr	r3, [r3, #0]
 8000cbc:	4a07      	ldr	r2, [pc, #28]	; (8000cdc <reset+0x4c>)
 8000cbe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000cc2:	4a08      	ldr	r2, [pc, #32]	; (8000ce4 <reset+0x54>)
 8000cc4:	6013      	str	r3, [r2, #0]
	SEG7_CLOCK[HOR_LED] = LED_TIME[CURRENT_STATE[HOR_LED]];
 8000cc6:	4b06      	ldr	r3, [pc, #24]	; (8000ce0 <reset+0x50>)
 8000cc8:	685b      	ldr	r3, [r3, #4]
 8000cca:	4a04      	ldr	r2, [pc, #16]	; (8000cdc <reset+0x4c>)
 8000ccc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000cd0:	4a04      	ldr	r2, [pc, #16]	; (8000ce4 <reset+0x54>)
 8000cd2:	6053      	str	r3, [r2, #4]
}
 8000cd4:	bf00      	nop
 8000cd6:	46bd      	mov	sp, r7
 8000cd8:	bc80      	pop	{r7}
 8000cda:	4770      	bx	lr
 8000cdc:	20000014 	.word	0x20000014
 8000ce0:	20000004 	.word	0x20000004
 8000ce4:	2000000c 	.word	0x2000000c

08000ce8 <confirm_action>:


void confirm_action(int mode, int time_inc) {
 8000ce8:	b480      	push	{r7}
 8000cea:	b083      	sub	sp, #12
 8000cec:	af00      	add	r7, sp, #0
 8000cee:	6078      	str	r0, [r7, #4]
 8000cf0:	6039      	str	r1, [r7, #0]
//	HAL_UART_Transmit(&huart2, (uint8_t*)str, sprintf(str, "!7SEG:%d#\r\n",TIMES_INC), 1000);
	switch (mode) {
 8000cf2:	687b      	ldr	r3, [r7, #4]
 8000cf4:	2b02      	cmp	r3, #2
 8000cf6:	d01f      	beq.n	8000d38 <confirm_action+0x50>
 8000cf8:	687b      	ldr	r3, [r7, #4]
 8000cfa:	2b02      	cmp	r3, #2
 8000cfc:	dc27      	bgt.n	8000d4e <confirm_action+0x66>
 8000cfe:	687b      	ldr	r3, [r7, #4]
 8000d00:	2b00      	cmp	r3, #0
 8000d02:	d003      	beq.n	8000d0c <confirm_action+0x24>
 8000d04:	687b      	ldr	r3, [r7, #4]
 8000d06:	2b01      	cmp	r3, #1
 8000d08:	d00b      	beq.n	8000d22 <confirm_action+0x3a>
		break;
	case 2: // Inc green time
		LED_TIME [GREEN_STATUS] = LED_TIME[GREEN_STATUS] + (time_inc * TIME_UNIT);
		break;
	default:
		break;
 8000d0a:	e020      	b.n	8000d4e <confirm_action+0x66>
		LED_TIME[RED_STATUS] = LED_TIME[RED_STATUS] + (time_inc * TIME_UNIT);
 8000d0c:	4b13      	ldr	r3, [pc, #76]	; (8000d5c <confirm_action+0x74>)
 8000d0e:	681a      	ldr	r2, [r3, #0]
 8000d10:	683b      	ldr	r3, [r7, #0]
 8000d12:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000d16:	fb01 f303 	mul.w	r3, r1, r3
 8000d1a:	4413      	add	r3, r2
 8000d1c:	4a0f      	ldr	r2, [pc, #60]	; (8000d5c <confirm_action+0x74>)
 8000d1e:	6013      	str	r3, [r2, #0]
		break;
 8000d20:	e016      	b.n	8000d50 <confirm_action+0x68>
		LED_TIME[YELLOW_STATUS] = LED_TIME[YELLOW_STATUS] + (time_inc * TIME_UNIT);
 8000d22:	4b0e      	ldr	r3, [pc, #56]	; (8000d5c <confirm_action+0x74>)
 8000d24:	685a      	ldr	r2, [r3, #4]
 8000d26:	683b      	ldr	r3, [r7, #0]
 8000d28:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000d2c:	fb01 f303 	mul.w	r3, r1, r3
 8000d30:	4413      	add	r3, r2
 8000d32:	4a0a      	ldr	r2, [pc, #40]	; (8000d5c <confirm_action+0x74>)
 8000d34:	6053      	str	r3, [r2, #4]
		break;
 8000d36:	e00b      	b.n	8000d50 <confirm_action+0x68>
		LED_TIME [GREEN_STATUS] = LED_TIME[GREEN_STATUS] + (time_inc * TIME_UNIT);
 8000d38:	4b08      	ldr	r3, [pc, #32]	; (8000d5c <confirm_action+0x74>)
 8000d3a:	689a      	ldr	r2, [r3, #8]
 8000d3c:	683b      	ldr	r3, [r7, #0]
 8000d3e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000d42:	fb01 f303 	mul.w	r3, r1, r3
 8000d46:	4413      	add	r3, r2
 8000d48:	4a04      	ldr	r2, [pc, #16]	; (8000d5c <confirm_action+0x74>)
 8000d4a:	6093      	str	r3, [r2, #8]
		break;
 8000d4c:	e000      	b.n	8000d50 <confirm_action+0x68>
		break;
 8000d4e:	bf00      	nop
	}

}
 8000d50:	bf00      	nop
 8000d52:	370c      	adds	r7, #12
 8000d54:	46bd      	mov	sp, r7
 8000d56:	bc80      	pop	{r7}
 8000d58:	4770      	bx	lr
 8000d5a:	bf00      	nop
 8000d5c:	20000014 	.word	0x20000014

08000d60 <state_handle>:

void state_handle() {
 8000d60:	b580      	push	{r7, lr}
 8000d62:	af00      	add	r7, sp, #0
	switch (index_mode) {
 8000d64:	4b5b      	ldr	r3, [pc, #364]	; (8000ed4 <state_handle+0x174>)
 8000d66:	681b      	ldr	r3, [r3, #0]
 8000d68:	2b02      	cmp	r3, #2
 8000d6a:	d077      	beq.n	8000e5c <state_handle+0xfc>
 8000d6c:	2b02      	cmp	r3, #2
 8000d6e:	f300 80ae 	bgt.w	8000ece <state_handle+0x16e>
 8000d72:	2b00      	cmp	r3, #0
 8000d74:	d002      	beq.n	8000d7c <state_handle+0x1c>
 8000d76:	2b01      	cmp	r3, #1
 8000d78:	d039      	beq.n	8000dee <state_handle+0x8e>
		}
		SEG7_CLOCK[VER_LED] = LED_TIME[2] + TIMES_INC * TIME_UNIT;
		SEG7_CLOCK[HOR_LED] = 0;
		break;
	default:
		break;
 8000d7a:	e0a8      	b.n	8000ece <state_handle+0x16e>
		if (timer1_flag == 1) {
 8000d7c:	4b56      	ldr	r3, [pc, #344]	; (8000ed8 <state_handle+0x178>)
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	2b01      	cmp	r3, #1
 8000d82:	d116      	bne.n	8000db2 <state_handle+0x52>
			HAL_GPIO_WritePin(Traffic_1_2_GPIO_Port, Traffic_1_2_Pin, 0);
 8000d84:	2200      	movs	r2, #0
 8000d86:	2108      	movs	r1, #8
 8000d88:	4854      	ldr	r0, [pc, #336]	; (8000edc <state_handle+0x17c>)
 8000d8a:	f001 ff94 	bl	8002cb6 <HAL_GPIO_WritePin>
			HAL_GPIO_TogglePin(Traffic_1_1_GPIO_Port, Traffic_1_1_Pin);
 8000d8e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000d92:	4853      	ldr	r0, [pc, #332]	; (8000ee0 <state_handle+0x180>)
 8000d94:	f001 ffa7 	bl	8002ce6 <HAL_GPIO_TogglePin>
			HAL_GPIO_WritePin(Traffic_2_2_GPIO_Port, Traffic_2_2_Pin, 0);
 8000d98:	2200      	movs	r2, #0
 8000d9a:	2110      	movs	r1, #16
 8000d9c:	484f      	ldr	r0, [pc, #316]	; (8000edc <state_handle+0x17c>)
 8000d9e:	f001 ff8a 	bl	8002cb6 <HAL_GPIO_WritePin>
			HAL_GPIO_TogglePin(Traffic_2_1_GPIO_Port, Traffic_2_1_Pin);
 8000da2:	2120      	movs	r1, #32
 8000da4:	484d      	ldr	r0, [pc, #308]	; (8000edc <state_handle+0x17c>)
 8000da6:	f001 ff9e 	bl	8002ce6 <HAL_GPIO_TogglePin>
			setTimer1(500);
 8000daa:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000dae:	f001 f8c1 	bl	8001f34 <setTimer1>
		if (LED_TIME[0] + TIMES_INC * TIME_UNIT > 99000) {
 8000db2:	4b4c      	ldr	r3, [pc, #304]	; (8000ee4 <state_handle+0x184>)
 8000db4:	681a      	ldr	r2, [r3, #0]
 8000db6:	4b4c      	ldr	r3, [pc, #304]	; (8000ee8 <state_handle+0x188>)
 8000db8:	681b      	ldr	r3, [r3, #0]
 8000dba:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000dbe:	fb01 f303 	mul.w	r3, r1, r3
 8000dc2:	4413      	add	r3, r2
 8000dc4:	4a49      	ldr	r2, [pc, #292]	; (8000eec <state_handle+0x18c>)
 8000dc6:	4293      	cmp	r3, r2
 8000dc8:	dd02      	ble.n	8000dd0 <state_handle+0x70>
			TIMES_INC = 0;
 8000dca:	4b47      	ldr	r3, [pc, #284]	; (8000ee8 <state_handle+0x188>)
 8000dcc:	2200      	movs	r2, #0
 8000dce:	601a      	str	r2, [r3, #0]
		SEG7_CLOCK[VER_LED] = LED_TIME[0] + TIMES_INC * TIME_UNIT;
 8000dd0:	4b44      	ldr	r3, [pc, #272]	; (8000ee4 <state_handle+0x184>)
 8000dd2:	681a      	ldr	r2, [r3, #0]
 8000dd4:	4b44      	ldr	r3, [pc, #272]	; (8000ee8 <state_handle+0x188>)
 8000dd6:	681b      	ldr	r3, [r3, #0]
 8000dd8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000ddc:	fb01 f303 	mul.w	r3, r1, r3
 8000de0:	4413      	add	r3, r2
 8000de2:	4a43      	ldr	r2, [pc, #268]	; (8000ef0 <state_handle+0x190>)
 8000de4:	6013      	str	r3, [r2, #0]
		SEG7_CLOCK[HOR_LED] = 0;
 8000de6:	4b42      	ldr	r3, [pc, #264]	; (8000ef0 <state_handle+0x190>)
 8000de8:	2200      	movs	r2, #0
 8000dea:	605a      	str	r2, [r3, #4]
		break;
 8000dec:	e070      	b.n	8000ed0 <state_handle+0x170>
		if (timer1_flag == 1) {
 8000dee:	4b3a      	ldr	r3, [pc, #232]	; (8000ed8 <state_handle+0x178>)
 8000df0:	681b      	ldr	r3, [r3, #0]
 8000df2:	2b01      	cmp	r3, #1
 8000df4:	d114      	bne.n	8000e20 <state_handle+0xc0>
			HAL_GPIO_TogglePin(Traffic_1_1_GPIO_Port, Traffic_1_1_Pin);
 8000df6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000dfa:	4839      	ldr	r0, [pc, #228]	; (8000ee0 <state_handle+0x180>)
 8000dfc:	f001 ff73 	bl	8002ce6 <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(Traffic_1_2_GPIO_Port, Traffic_1_2_Pin);
 8000e00:	2108      	movs	r1, #8
 8000e02:	4836      	ldr	r0, [pc, #216]	; (8000edc <state_handle+0x17c>)
 8000e04:	f001 ff6f 	bl	8002ce6 <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(Traffic_2_1_GPIO_Port, Traffic_2_1_Pin);
 8000e08:	2120      	movs	r1, #32
 8000e0a:	4834      	ldr	r0, [pc, #208]	; (8000edc <state_handle+0x17c>)
 8000e0c:	f001 ff6b 	bl	8002ce6 <HAL_GPIO_TogglePin>
			HAL_GPIO_TogglePin(Traffic_2_2_GPIO_Port, Traffic_2_2_Pin);
 8000e10:	2110      	movs	r1, #16
 8000e12:	4832      	ldr	r0, [pc, #200]	; (8000edc <state_handle+0x17c>)
 8000e14:	f001 ff67 	bl	8002ce6 <HAL_GPIO_TogglePin>
			setTimer1(500);
 8000e18:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e1c:	f001 f88a 	bl	8001f34 <setTimer1>
		if (LED_TIME[1] + TIMES_INC * TIME_UNIT > 99000) {
 8000e20:	4b30      	ldr	r3, [pc, #192]	; (8000ee4 <state_handle+0x184>)
 8000e22:	685a      	ldr	r2, [r3, #4]
 8000e24:	4b30      	ldr	r3, [pc, #192]	; (8000ee8 <state_handle+0x188>)
 8000e26:	681b      	ldr	r3, [r3, #0]
 8000e28:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000e2c:	fb01 f303 	mul.w	r3, r1, r3
 8000e30:	4413      	add	r3, r2
 8000e32:	4a2e      	ldr	r2, [pc, #184]	; (8000eec <state_handle+0x18c>)
 8000e34:	4293      	cmp	r3, r2
 8000e36:	dd02      	ble.n	8000e3e <state_handle+0xde>
			TIMES_INC = 0;
 8000e38:	4b2b      	ldr	r3, [pc, #172]	; (8000ee8 <state_handle+0x188>)
 8000e3a:	2200      	movs	r2, #0
 8000e3c:	601a      	str	r2, [r3, #0]
		SEG7_CLOCK[VER_LED] = LED_TIME[1] + TIMES_INC * TIME_UNIT;
 8000e3e:	4b29      	ldr	r3, [pc, #164]	; (8000ee4 <state_handle+0x184>)
 8000e40:	685a      	ldr	r2, [r3, #4]
 8000e42:	4b29      	ldr	r3, [pc, #164]	; (8000ee8 <state_handle+0x188>)
 8000e44:	681b      	ldr	r3, [r3, #0]
 8000e46:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000e4a:	fb01 f303 	mul.w	r3, r1, r3
 8000e4e:	4413      	add	r3, r2
 8000e50:	4a27      	ldr	r2, [pc, #156]	; (8000ef0 <state_handle+0x190>)
 8000e52:	6013      	str	r3, [r2, #0]
		SEG7_CLOCK[HOR_LED] = 0;
 8000e54:	4b26      	ldr	r3, [pc, #152]	; (8000ef0 <state_handle+0x190>)
 8000e56:	2200      	movs	r2, #0
 8000e58:	605a      	str	r2, [r3, #4]
		break;
 8000e5a:	e039      	b.n	8000ed0 <state_handle+0x170>
		if (timer1_flag == 1) {
 8000e5c:	4b1e      	ldr	r3, [pc, #120]	; (8000ed8 <state_handle+0x178>)
 8000e5e:	681b      	ldr	r3, [r3, #0]
 8000e60:	2b01      	cmp	r3, #1
 8000e62:	d116      	bne.n	8000e92 <state_handle+0x132>
			HAL_GPIO_WritePin(Traffic_1_1_GPIO_Port, Traffic_1_1_Pin, 0);
 8000e64:	2200      	movs	r2, #0
 8000e66:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000e6a:	481d      	ldr	r0, [pc, #116]	; (8000ee0 <state_handle+0x180>)
 8000e6c:	f001 ff23 	bl	8002cb6 <HAL_GPIO_WritePin>
			HAL_GPIO_TogglePin(Traffic_1_2_GPIO_Port, Traffic_1_2_Pin);
 8000e70:	2108      	movs	r1, #8
 8000e72:	481a      	ldr	r0, [pc, #104]	; (8000edc <state_handle+0x17c>)
 8000e74:	f001 ff37 	bl	8002ce6 <HAL_GPIO_TogglePin>
			HAL_GPIO_WritePin(Traffic_2_1_GPIO_Port, Traffic_2_1_Pin, 0);
 8000e78:	2200      	movs	r2, #0
 8000e7a:	2120      	movs	r1, #32
 8000e7c:	4817      	ldr	r0, [pc, #92]	; (8000edc <state_handle+0x17c>)
 8000e7e:	f001 ff1a 	bl	8002cb6 <HAL_GPIO_WritePin>
			HAL_GPIO_TogglePin(Traffic_2_2_GPIO_Port, Traffic_2_2_Pin);
 8000e82:	2110      	movs	r1, #16
 8000e84:	4815      	ldr	r0, [pc, #84]	; (8000edc <state_handle+0x17c>)
 8000e86:	f001 ff2e 	bl	8002ce6 <HAL_GPIO_TogglePin>
			setTimer1(500);
 8000e8a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e8e:	f001 f851 	bl	8001f34 <setTimer1>
		if (LED_TIME[2] + TIMES_INC * TIME_UNIT > 99000) {
 8000e92:	4b14      	ldr	r3, [pc, #80]	; (8000ee4 <state_handle+0x184>)
 8000e94:	689a      	ldr	r2, [r3, #8]
 8000e96:	4b14      	ldr	r3, [pc, #80]	; (8000ee8 <state_handle+0x188>)
 8000e98:	681b      	ldr	r3, [r3, #0]
 8000e9a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000e9e:	fb01 f303 	mul.w	r3, r1, r3
 8000ea2:	4413      	add	r3, r2
 8000ea4:	4a11      	ldr	r2, [pc, #68]	; (8000eec <state_handle+0x18c>)
 8000ea6:	4293      	cmp	r3, r2
 8000ea8:	dd02      	ble.n	8000eb0 <state_handle+0x150>
			TIMES_INC = 0;
 8000eaa:	4b0f      	ldr	r3, [pc, #60]	; (8000ee8 <state_handle+0x188>)
 8000eac:	2200      	movs	r2, #0
 8000eae:	601a      	str	r2, [r3, #0]
		SEG7_CLOCK[VER_LED] = LED_TIME[2] + TIMES_INC * TIME_UNIT;
 8000eb0:	4b0c      	ldr	r3, [pc, #48]	; (8000ee4 <state_handle+0x184>)
 8000eb2:	689a      	ldr	r2, [r3, #8]
 8000eb4:	4b0c      	ldr	r3, [pc, #48]	; (8000ee8 <state_handle+0x188>)
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8000ebc:	fb01 f303 	mul.w	r3, r1, r3
 8000ec0:	4413      	add	r3, r2
 8000ec2:	4a0b      	ldr	r2, [pc, #44]	; (8000ef0 <state_handle+0x190>)
 8000ec4:	6013      	str	r3, [r2, #0]
		SEG7_CLOCK[HOR_LED] = 0;
 8000ec6:	4b0a      	ldr	r3, [pc, #40]	; (8000ef0 <state_handle+0x190>)
 8000ec8:	2200      	movs	r2, #0
 8000eca:	605a      	str	r2, [r3, #4]
		break;
 8000ecc:	e000      	b.n	8000ed0 <state_handle+0x170>
		break;
 8000ece:	bf00      	nop
	}
}
 8000ed0:	bf00      	nop
 8000ed2:	bd80      	pop	{r7, pc}
 8000ed4:	20000000 	.word	0x20000000
 8000ed8:	20000148 	.word	0x20000148
 8000edc:	40010c00 	.word	0x40010c00
 8000ee0:	40010800 	.word	0x40010800
 8000ee4:	20000014 	.word	0x20000014
 8000ee8:	200000e0 	.word	0x200000e0
 8000eec:	000182b8 	.word	0x000182b8
 8000ef0:	2000000c 	.word	0x2000000c

08000ef4 <traffic_processing>:

void traffic_processing() {
 8000ef4:	b580      	push	{r7, lr}
 8000ef6:	af00      	add	r7, sp, #0
	switch (status) {
 8000ef8:	4b1a      	ldr	r3, [pc, #104]	; (8000f64 <traffic_processing+0x70>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	2b02      	cmp	r3, #2
 8000efe:	d02b      	beq.n	8000f58 <traffic_processing+0x64>
 8000f00:	2b02      	cmp	r3, #2
 8000f02:	dc2c      	bgt.n	8000f5e <traffic_processing+0x6a>
 8000f04:	2b00      	cmp	r3, #0
 8000f06:	d002      	beq.n	8000f0e <traffic_processing+0x1a>
 8000f08:	2b01      	cmp	r3, #1
 8000f0a:	d022      	beq.n	8000f52 <traffic_processing+0x5e>
		break;
	case 2: // Modify state
		state_handle();
		break;
	default:
		break;
 8000f0c:	e027      	b.n	8000f5e <traffic_processing+0x6a>
		CURRENT_STATE[VER_LED] = RED_STATUS;
 8000f0e:	4b16      	ldr	r3, [pc, #88]	; (8000f68 <traffic_processing+0x74>)
 8000f10:	2200      	movs	r2, #0
 8000f12:	601a      	str	r2, [r3, #0]
		CURRENT_STATE[HOR_LED] = GREEN_STATUS;
 8000f14:	4b14      	ldr	r3, [pc, #80]	; (8000f68 <traffic_processing+0x74>)
 8000f16:	2202      	movs	r2, #2
 8000f18:	605a      	str	r2, [r3, #4]
		SEG7_CLOCK[VER_LED] = LED_TIME[CURRENT_STATE[VER_LED]];
 8000f1a:	4b13      	ldr	r3, [pc, #76]	; (8000f68 <traffic_processing+0x74>)
 8000f1c:	681b      	ldr	r3, [r3, #0]
 8000f1e:	4a13      	ldr	r2, [pc, #76]	; (8000f6c <traffic_processing+0x78>)
 8000f20:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000f24:	4a12      	ldr	r2, [pc, #72]	; (8000f70 <traffic_processing+0x7c>)
 8000f26:	6013      	str	r3, [r2, #0]
		SEG7_CLOCK[HOR_LED] = LED_TIME[CURRENT_STATE[HOR_LED]];
 8000f28:	4b0f      	ldr	r3, [pc, #60]	; (8000f68 <traffic_processing+0x74>)
 8000f2a:	685b      	ldr	r3, [r3, #4]
 8000f2c:	4a0f      	ldr	r2, [pc, #60]	; (8000f6c <traffic_processing+0x78>)
 8000f2e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000f32:	4a0f      	ldr	r2, [pc, #60]	; (8000f70 <traffic_processing+0x7c>)
 8000f34:	6053      	str	r3, [r2, #4]
		updateDisplay();
 8000f36:	f7ff fd75 	bl	8000a24 <updateDisplay>
		vertical_processing();
 8000f3a:	f7ff fdd7 	bl	8000aec <vertical_processing>
		horizontal_processing();
 8000f3e:	f7ff fdf9 	bl	8000b34 <horizontal_processing>
		status = 1;
 8000f42:	4b08      	ldr	r3, [pc, #32]	; (8000f64 <traffic_processing+0x70>)
 8000f44:	2201      	movs	r2, #1
 8000f46:	601a      	str	r2, [r3, #0]
	    setTimer2(1000);
 8000f48:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000f4c:	f001 f80c 	bl	8001f68 <setTimer2>
		break;
 8000f50:	e006      	b.n	8000f60 <traffic_processing+0x6c>
		update_clock();
 8000f52:	f7ff fe7d 	bl	8000c50 <update_clock>
		break;
 8000f56:	e003      	b.n	8000f60 <traffic_processing+0x6c>
		state_handle();
 8000f58:	f7ff ff02 	bl	8000d60 <state_handle>
		break;
 8000f5c:	e000      	b.n	8000f60 <traffic_processing+0x6c>
		break;
 8000f5e:	bf00      	nop
	}
}
 8000f60:	bf00      	nop
 8000f62:	bd80      	pop	{r7, pc}
 8000f64:	200000d8 	.word	0x200000d8
 8000f68:	20000004 	.word	0x20000004
 8000f6c:	20000014 	.word	0x20000014
 8000f70:	2000000c 	.word	0x2000000c

08000f74 <input_processing>:

void input_processing() {
 8000f74:	b580      	push	{r7, lr}
 8000f76:	af00      	add	r7, sp, #0
	// Switch button
	if (WhichButtonIsPressed() == 1) {
 8000f78:	f7ff fd78 	bl	8000a6c <WhichButtonIsPressed>
 8000f7c:	4603      	mov	r3, r0
 8000f7e:	2b01      	cmp	r3, #1
 8000f80:	d11d      	bne.n	8000fbe <input_processing+0x4a>
		clear_vertical();
 8000f82:	f7ff fda5 	bl	8000ad0 <clear_vertical>
		clear_horizontal();
 8000f86:	f7ff fdaa 	bl	8000ade <clear_horizontal>
		status = 2;
 8000f8a:	4b2e      	ldr	r3, [pc, #184]	; (8001044 <input_processing+0xd0>)
 8000f8c:	2202      	movs	r2, #2
 8000f8e:	601a      	str	r2, [r3, #0]
		index_mode = (index_mode + 1);
 8000f90:	4b2d      	ldr	r3, [pc, #180]	; (8001048 <input_processing+0xd4>)
 8000f92:	681b      	ldr	r3, [r3, #0]
 8000f94:	3301      	adds	r3, #1
 8000f96:	4a2c      	ldr	r2, [pc, #176]	; (8001048 <input_processing+0xd4>)
 8000f98:	6013      	str	r3, [r2, #0]
		TIMES_INC = 0;
 8000f9a:	4b2c      	ldr	r3, [pc, #176]	; (800104c <input_processing+0xd8>)
 8000f9c:	2200      	movs	r2, #0
 8000f9e:	601a      	str	r2, [r3, #0]
		if (index_mode >= 3) {
 8000fa0:	4b29      	ldr	r3, [pc, #164]	; (8001048 <input_processing+0xd4>)
 8000fa2:	681b      	ldr	r3, [r3, #0]
 8000fa4:	2b02      	cmp	r3, #2
 8000fa6:	dd06      	ble.n	8000fb6 <input_processing+0x42>
			status = 0;
 8000fa8:	4b26      	ldr	r3, [pc, #152]	; (8001044 <input_processing+0xd0>)
 8000faa:	2200      	movs	r2, #0
 8000fac:	601a      	str	r2, [r3, #0]
			index_mode = -1;
 8000fae:	4b26      	ldr	r3, [pc, #152]	; (8001048 <input_processing+0xd4>)
 8000fb0:	f04f 32ff 	mov.w	r2, #4294967295
 8000fb4:	601a      	str	r2, [r3, #0]
		}
		state_handle();
 8000fb6:	f7ff fed3 	bl	8000d60 <state_handle>
		updateDisplay();
 8000fba:	f7ff fd33 	bl	8000a24 <updateDisplay>
	}

	// Add button
	if (WhichButtonIsPressed() == 2 && index_mode != -1) {
 8000fbe:	f7ff fd55 	bl	8000a6c <WhichButtonIsPressed>
 8000fc2:	4603      	mov	r3, r0
 8000fc4:	2b02      	cmp	r3, #2
 8000fc6:	d111      	bne.n	8000fec <input_processing+0x78>
 8000fc8:	4b1f      	ldr	r3, [pc, #124]	; (8001048 <input_processing+0xd4>)
 8000fca:	681b      	ldr	r3, [r3, #0]
 8000fcc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000fd0:	d00c      	beq.n	8000fec <input_processing+0x78>
		TIMES_INC = TIMES_INC + 1;
 8000fd2:	4b1e      	ldr	r3, [pc, #120]	; (800104c <input_processing+0xd8>)
 8000fd4:	681b      	ldr	r3, [r3, #0]
 8000fd6:	3301      	adds	r3, #1
 8000fd8:	4a1c      	ldr	r2, [pc, #112]	; (800104c <input_processing+0xd8>)
 8000fda:	6013      	str	r3, [r2, #0]
		if (start != 0) {
 8000fdc:	4b1c      	ldr	r3, [pc, #112]	; (8001050 <input_processing+0xdc>)
 8000fde:	681b      	ldr	r3, [r3, #0]
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	d003      	beq.n	8000fec <input_processing+0x78>
			state_handle();
 8000fe4:	f7ff febc 	bl	8000d60 <state_handle>
			updateDisplay();
 8000fe8:	f7ff fd1c 	bl	8000a24 <updateDisplay>
		}
	}

	// Confirm button
	if (is_button_pressed(2) && index_mode != -1) {
 8000fec:	2002      	movs	r0, #2
 8000fee:	f000 f8f7 	bl	80011e0 <is_button_pressed>
 8000ff2:	4603      	mov	r3, r0
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d01a      	beq.n	800102e <input_processing+0xba>
 8000ff8:	4b13      	ldr	r3, [pc, #76]	; (8001048 <input_processing+0xd4>)
 8000ffa:	681b      	ldr	r3, [r3, #0]
 8000ffc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001000:	d015      	beq.n	800102e <input_processing+0xba>
		if (TIMES_INC != 0) {
 8001002:	4b12      	ldr	r3, [pc, #72]	; (800104c <input_processing+0xd8>)
 8001004:	681b      	ldr	r3, [r3, #0]
 8001006:	2b00      	cmp	r3, #0
 8001008:	d007      	beq.n	800101a <input_processing+0xa6>
			confirm_action(index_mode, TIMES_INC);
 800100a:	4b0f      	ldr	r3, [pc, #60]	; (8001048 <input_processing+0xd4>)
 800100c:	681b      	ldr	r3, [r3, #0]
 800100e:	4a0f      	ldr	r2, [pc, #60]	; (800104c <input_processing+0xd8>)
 8001010:	6812      	ldr	r2, [r2, #0]
 8001012:	4611      	mov	r1, r2
 8001014:	4618      	mov	r0, r3
 8001016:	f7ff fe67 	bl	8000ce8 <confirm_action>
		}
		TIMES_INC = 0;
 800101a:	4b0c      	ldr	r3, [pc, #48]	; (800104c <input_processing+0xd8>)
 800101c:	2200      	movs	r2, #0
 800101e:	601a      	str	r2, [r3, #0]
		index_mode = -1;
 8001020:	4b09      	ldr	r3, [pc, #36]	; (8001048 <input_processing+0xd4>)
 8001022:	f04f 32ff 	mov.w	r2, #4294967295
 8001026:	601a      	str	r2, [r3, #0]
		status = 0;
 8001028:	4b06      	ldr	r3, [pc, #24]	; (8001044 <input_processing+0xd0>)
 800102a:	2200      	movs	r2, #0
 800102c:	601a      	str	r2, [r3, #0]
	}

	// RESET when start
	if (start == 0) {
 800102e:	4b08      	ldr	r3, [pc, #32]	; (8001050 <input_processing+0xdc>)
 8001030:	681b      	ldr	r3, [r3, #0]
 8001032:	2b00      	cmp	r3, #0
 8001034:	d104      	bne.n	8001040 <input_processing+0xcc>
		reset();
 8001036:	f7ff fe2b 	bl	8000c90 <reset>
		start = 1;
 800103a:	4b05      	ldr	r3, [pc, #20]	; (8001050 <input_processing+0xdc>)
 800103c:	2201      	movs	r2, #1
 800103e:	601a      	str	r2, [r3, #0]
	}
}
 8001040:	bf00      	nop
 8001042:	bd80      	pop	{r7, pc}
 8001044:	200000d8 	.word	0x200000d8
 8001048:	20000000 	.word	0x20000000
 800104c:	200000e0 	.word	0x200000e0
 8001050:	200000dc 	.word	0x200000dc

08001054 <fsm_simple_button_run>:

void fsm_simple_button_run() {
 8001054:	b580      	push	{r7, lr}
 8001056:	af00      	add	r7, sp, #0
	switch (buttonState) {
 8001058:	4b0d      	ldr	r3, [pc, #52]	; (8001090 <fsm_simple_button_run+0x3c>)
 800105a:	781b      	ldrb	r3, [r3, #0]
 800105c:	2b00      	cmp	r3, #0
 800105e:	d002      	beq.n	8001066 <fsm_simple_button_run+0x12>
 8001060:	2b01      	cmp	r3, #1
 8001062:	d00a      	beq.n	800107a <fsm_simple_button_run+0x26>
	case BUTTON_PRESSED:
		if (!WhichButtonIsPressed()) {
			buttonState = BUTTON_RELEASED;
		}
	default:
		break;
 8001064:	e011      	b.n	800108a <fsm_simple_button_run+0x36>
		if (WhichButtonIsPressed()) {
 8001066:	f7ff fd01 	bl	8000a6c <WhichButtonIsPressed>
 800106a:	4603      	mov	r3, r0
 800106c:	2b00      	cmp	r3, #0
 800106e:	d004      	beq.n	800107a <fsm_simple_button_run+0x26>
			buttonState = BUTTON_PRESSED;
 8001070:	4b07      	ldr	r3, [pc, #28]	; (8001090 <fsm_simple_button_run+0x3c>)
 8001072:	2201      	movs	r2, #1
 8001074:	701a      	strb	r2, [r3, #0]
			input_processing();
 8001076:	f7ff ff7d 	bl	8000f74 <input_processing>
		if (!WhichButtonIsPressed()) {
 800107a:	f7ff fcf7 	bl	8000a6c <WhichButtonIsPressed>
 800107e:	4603      	mov	r3, r0
 8001080:	2b00      	cmp	r3, #0
 8001082:	d102      	bne.n	800108a <fsm_simple_button_run+0x36>
			buttonState = BUTTON_RELEASED;
 8001084:	4b02      	ldr	r3, [pc, #8]	; (8001090 <fsm_simple_button_run+0x3c>)
 8001086:	2200      	movs	r2, #0
 8001088:	701a      	strb	r2, [r3, #0]
		break;
 800108a:	bf00      	nop
	}
}
 800108c:	bf00      	nop
 800108e:	bd80      	pop	{r7, pc}
 8001090:	200000f8 	.word	0x200000f8

08001094 <button_reading>:
 8001094:	b580      	push	{r7, lr}
 8001096:	b082      	sub	sp, #8
 8001098:	af00      	add	r7, sp, #0
 800109a:	2300      	movs	r3, #0
 800109c:	607b      	str	r3, [r7, #4]
 800109e:	e081      	b.n	80011a4 <button_reading+0x110>
 80010a0:	4a45      	ldr	r2, [pc, #276]	; (80011b8 <button_reading+0x124>)
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	4413      	add	r3, r2
 80010a6:	7819      	ldrb	r1, [r3, #0]
 80010a8:	4a44      	ldr	r2, [pc, #272]	; (80011bc <button_reading+0x128>)
 80010aa:	687b      	ldr	r3, [r7, #4]
 80010ac:	4413      	add	r3, r2
 80010ae:	460a      	mov	r2, r1
 80010b0:	701a      	strb	r2, [r3, #0]
 80010b2:	4a43      	ldr	r2, [pc, #268]	; (80011c0 <button_reading+0x12c>)
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80010ba:	4942      	ldr	r1, [pc, #264]	; (80011c4 <button_reading+0x130>)
 80010bc:	687b      	ldr	r3, [r7, #4]
 80010be:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80010c2:	4619      	mov	r1, r3
 80010c4:	4610      	mov	r0, r2
 80010c6:	f001 fddf 	bl	8002c88 <HAL_GPIO_ReadPin>
 80010ca:	4603      	mov	r3, r0
 80010cc:	4619      	mov	r1, r3
 80010ce:	4a3a      	ldr	r2, [pc, #232]	; (80011b8 <button_reading+0x124>)
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	4413      	add	r3, r2
 80010d4:	460a      	mov	r2, r1
 80010d6:	701a      	strb	r2, [r3, #0]
 80010d8:	4a37      	ldr	r2, [pc, #220]	; (80011b8 <button_reading+0x124>)
 80010da:	687b      	ldr	r3, [r7, #4]
 80010dc:	4413      	add	r3, r2
 80010de:	781a      	ldrb	r2, [r3, #0]
 80010e0:	4936      	ldr	r1, [pc, #216]	; (80011bc <button_reading+0x128>)
 80010e2:	687b      	ldr	r3, [r7, #4]
 80010e4:	440b      	add	r3, r1
 80010e6:	781b      	ldrb	r3, [r3, #0]
 80010e8:	429a      	cmp	r2, r3
 80010ea:	d158      	bne.n	800119e <button_reading+0x10a>
 80010ec:	4a32      	ldr	r2, [pc, #200]	; (80011b8 <button_reading+0x124>)
 80010ee:	687b      	ldr	r3, [r7, #4]
 80010f0:	4413      	add	r3, r2
 80010f2:	7819      	ldrb	r1, [r3, #0]
 80010f4:	4a34      	ldr	r2, [pc, #208]	; (80011c8 <button_reading+0x134>)
 80010f6:	687b      	ldr	r3, [r7, #4]
 80010f8:	4413      	add	r3, r2
 80010fa:	460a      	mov	r2, r1
 80010fc:	701a      	strb	r2, [r3, #0]
 80010fe:	4a32      	ldr	r2, [pc, #200]	; (80011c8 <button_reading+0x134>)
 8001100:	687b      	ldr	r3, [r7, #4]
 8001102:	4413      	add	r3, r2
 8001104:	781b      	ldrb	r3, [r3, #0]
 8001106:	2b00      	cmp	r3, #0
 8001108:	d135      	bne.n	8001176 <button_reading+0xe2>
 800110a:	4a30      	ldr	r2, [pc, #192]	; (80011cc <button_reading+0x138>)
 800110c:	687b      	ldr	r3, [r7, #4]
 800110e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001112:	2b18      	cmp	r3, #24
 8001114:	d80e      	bhi.n	8001134 <button_reading+0xa0>
 8001116:	4b2e      	ldr	r3, [pc, #184]	; (80011d0 <button_reading+0x13c>)
 8001118:	681b      	ldr	r3, [r3, #0]
 800111a:	2b00      	cmp	r3, #0
 800111c:	d00a      	beq.n	8001134 <button_reading+0xa0>
 800111e:	4a2b      	ldr	r2, [pc, #172]	; (80011cc <button_reading+0x138>)
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001126:	3301      	adds	r3, #1
 8001128:	b299      	uxth	r1, r3
 800112a:	4a28      	ldr	r2, [pc, #160]	; (80011cc <button_reading+0x138>)
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8001132:	e009      	b.n	8001148 <button_reading+0xb4>
 8001134:	4a25      	ldr	r2, [pc, #148]	; (80011cc <button_reading+0x138>)
 8001136:	687b      	ldr	r3, [r7, #4]
 8001138:	2100      	movs	r1, #0
 800113a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800113e:	4a25      	ldr	r2, [pc, #148]	; (80011d4 <button_reading+0x140>)
 8001140:	687b      	ldr	r3, [r7, #4]
 8001142:	2101      	movs	r1, #1
 8001144:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8001148:	4a23      	ldr	r2, [pc, #140]	; (80011d8 <button_reading+0x144>)
 800114a:	687b      	ldr	r3, [r7, #4]
 800114c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001150:	2b63      	cmp	r3, #99	; 0x63
 8001152:	d80a      	bhi.n	800116a <button_reading+0xd6>
 8001154:	4a20      	ldr	r2, [pc, #128]	; (80011d8 <button_reading+0x144>)
 8001156:	687b      	ldr	r3, [r7, #4]
 8001158:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800115c:	3301      	adds	r3, #1
 800115e:	b299      	uxth	r1, r3
 8001160:	4a1d      	ldr	r2, [pc, #116]	; (80011d8 <button_reading+0x144>)
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8001168:	e019      	b.n	800119e <button_reading+0x10a>
 800116a:	4a1c      	ldr	r2, [pc, #112]	; (80011dc <button_reading+0x148>)
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	4413      	add	r3, r2
 8001170:	2201      	movs	r2, #1
 8001172:	701a      	strb	r2, [r3, #0]
 8001174:	e013      	b.n	800119e <button_reading+0x10a>
 8001176:	4a18      	ldr	r2, [pc, #96]	; (80011d8 <button_reading+0x144>)
 8001178:	687b      	ldr	r3, [r7, #4]
 800117a:	2100      	movs	r1, #0
 800117c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8001180:	4a12      	ldr	r2, [pc, #72]	; (80011cc <button_reading+0x138>)
 8001182:	687b      	ldr	r3, [r7, #4]
 8001184:	2100      	movs	r1, #0
 8001186:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800118a:	4a14      	ldr	r2, [pc, #80]	; (80011dc <button_reading+0x148>)
 800118c:	687b      	ldr	r3, [r7, #4]
 800118e:	4413      	add	r3, r2
 8001190:	2200      	movs	r2, #0
 8001192:	701a      	strb	r2, [r3, #0]
 8001194:	4a0f      	ldr	r2, [pc, #60]	; (80011d4 <button_reading+0x140>)
 8001196:	687b      	ldr	r3, [r7, #4]
 8001198:	2100      	movs	r1, #0
 800119a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	3301      	adds	r3, #1
 80011a2:	607b      	str	r3, [r7, #4]
 80011a4:	687b      	ldr	r3, [r7, #4]
 80011a6:	2b03      	cmp	r3, #3
 80011a8:	f77f af7a 	ble.w	80010a0 <button_reading+0xc>
 80011ac:	bf00      	nop
 80011ae:	bf00      	nop
 80011b0:	3708      	adds	r7, #8
 80011b2:	46bd      	mov	sp, r7
 80011b4:	bd80      	pop	{r7, pc}
 80011b6:	bf00      	nop
 80011b8:	20000104 	.word	0x20000104
 80011bc:	20000108 	.word	0x20000108
 80011c0:	20000020 	.word	0x20000020
 80011c4:	20000030 	.word	0x20000030
 80011c8:	20000100 	.word	0x20000100
 80011cc:	20000118 	.word	0x20000118
 80011d0:	200000e4 	.word	0x200000e4
 80011d4:	200000e8 	.word	0x200000e8
 80011d8:	20000110 	.word	0x20000110
 80011dc:	2000010c 	.word	0x2000010c

080011e0 <is_button_pressed>:
 80011e0:	b480      	push	{r7}
 80011e2:	b083      	sub	sp, #12
 80011e4:	af00      	add	r7, sp, #0
 80011e6:	4603      	mov	r3, r0
 80011e8:	71fb      	strb	r3, [r7, #7]
 80011ea:	79fb      	ldrb	r3, [r7, #7]
 80011ec:	2b03      	cmp	r3, #3
 80011ee:	d901      	bls.n	80011f4 <is_button_pressed+0x14>
 80011f0:	2300      	movs	r3, #0
 80011f2:	e007      	b.n	8001204 <is_button_pressed+0x24>
 80011f4:	79fb      	ldrb	r3, [r7, #7]
 80011f6:	4a06      	ldr	r2, [pc, #24]	; (8001210 <is_button_pressed+0x30>)
 80011f8:	5cd3      	ldrb	r3, [r2, r3]
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	bf0c      	ite	eq
 80011fe:	2301      	moveq	r3, #1
 8001200:	2300      	movne	r3, #0
 8001202:	b2db      	uxtb	r3, r3
 8001204:	4618      	mov	r0, r3
 8001206:	370c      	adds	r7, #12
 8001208:	46bd      	mov	sp, r7
 800120a:	bc80      	pop	{r7}
 800120c:	4770      	bx	lr
 800120e:	bf00      	nop
 8001210:	20000100 	.word	0x20000100

08001214 <SCH_Go_To_Sleep>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void SCH_Go_To_Sleep() {
 8001214:	b580      	push	{r7, lr}
 8001216:	af00      	add	r7, sp, #0
	HAL_SuspendTick();
 8001218:	f001 fa88 	bl	800272c <HAL_SuspendTick>
	//HAL_GPIO_WritePin(LED_SLEEP_GPIO_Port, LED_SLEEP_Pin, 0); // Just to indicate sleep mode is active
	HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_SLEEPENTRY_WFI);
 800121c:	2101      	movs	r1, #1
 800121e:	2000      	movs	r0, #0
 8001220:	f001 fd92 	bl	8002d48 <HAL_PWR_EnterSLEEPMode>
	HAL_ResumeTick();
 8001224:	f001 fa90 	bl	8002748 <HAL_ResumeTick>
}
 8001228:	bf00      	nop
 800122a:	bd80      	pop	{r7, pc}

0800122c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800122c:	b580      	push	{r7, lr}
 800122e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001230:	f001 f9f6 	bl	8002620 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001234:	f000 f846 	bl	80012c4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001238:	f000 f972 	bl	8001520 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 800123c:	f000 f946 	bl	80014cc <MX_USART2_UART_Init>
  MX_TIM2_Init();
 8001240:	f000 f882 	bl	8001348 <MX_TIM2_Init>
  MX_TIM3_Init();
 8001244:	f000 f8cc 	bl	80013e0 <MX_TIM3_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8001248:	2100      	movs	r1, #0
 800124a:	4818      	ldr	r0, [pc, #96]	; (80012ac <main+0x80>)
 800124c:	f002 faac 	bl	80037a8 <HAL_TIM_PWM_Start>
  HAL_TIM_Base_Start_IT(&htim2);
 8001250:	4817      	ldr	r0, [pc, #92]	; (80012b0 <main+0x84>)
 8001252:	f002 f9ff 	bl	8003654 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim3);
 8001256:	4815      	ldr	r0, [pc, #84]	; (80012ac <main+0x80>)
 8001258:	f002 f9fc 	bl	8003654 <HAL_TIM_Base_Start_IT>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  SCH_Init();
 800125c:	f000 fbf6 	bl	8001a4c <SCH_Init>
  SCH_Add_Task(button_reading, 0, 10);
 8001260:	220a      	movs	r2, #10
 8001262:	2100      	movs	r1, #0
 8001264:	4813      	ldr	r0, [pc, #76]	; (80012b4 <main+0x88>)
 8001266:	f000 fc0b 	bl	8001a80 <SCH_Add_Task>
  SCH_Add_Task(fsm_simple_button_run, 10, 10);
 800126a:	220a      	movs	r2, #10
 800126c:	210a      	movs	r1, #10
 800126e:	4812      	ldr	r0, [pc, #72]	; (80012b8 <main+0x8c>)
 8001270:	f000 fc06 	bl	8001a80 <SCH_Add_Task>
  SCH_Add_Task(traffic_processing, 20, 10);
 8001274:	220a      	movs	r2, #10
 8001276:	2114      	movs	r1, #20
 8001278:	4810      	ldr	r0, [pc, #64]	; (80012bc <main+0x90>)
 800127a:	f000 fc01 	bl	8001a80 <SCH_Add_Task>
  SCH_Add_Task(pedestrian_scramble, 30, 10);
 800127e:	220a      	movs	r2, #10
 8001280:	211e      	movs	r1, #30
 8001282:	480f      	ldr	r0, [pc, #60]	; (80012c0 <main+0x94>)
 8001284:	f000 fbfc 	bl	8001a80 <SCH_Add_Task>

  find_new_min_task();
 8001288:	f000 fe04 	bl	8001e94 <find_new_min_task>
  setTimer1(500);
 800128c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001290:	f000 fe50 	bl	8001f34 <setTimer1>
  setTimer2(1000);
 8001294:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001298:	f000 fe66 	bl	8001f68 <setTimer2>
  setTimer3(10);
 800129c:	200a      	movs	r0, #10
 800129e:	f000 fe7d 	bl	8001f9c <setTimer3>
  //TIM3->CCR1 = 700;
  while (1)
  {

	  SCH_Dispatch_Tasks();
 80012a2:	f000 fc55 	bl	8001b50 <SCH_Dispatch_Tasks>
	  // turn on LED for indicate when not in sleep mode
	  // SCH go to sleep, wait for any interrupt.
	  SCH_Go_To_Sleep();
 80012a6:	f7ff ffb5 	bl	8001214 <SCH_Go_To_Sleep>
	  SCH_Dispatch_Tasks();
 80012aa:	e7fa      	b.n	80012a2 <main+0x76>
 80012ac:	200001b0 	.word	0x200001b0
 80012b0:	200001f8 	.word	0x200001f8
 80012b4:	08001095 	.word	0x08001095
 80012b8:	08001055 	.word	0x08001055
 80012bc:	08000ef5 	.word	0x08000ef5
 80012c0:	080016a9 	.word	0x080016a9

080012c4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80012c4:	b580      	push	{r7, lr}
 80012c6:	b090      	sub	sp, #64	; 0x40
 80012c8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80012ca:	f107 0318 	add.w	r3, r7, #24
 80012ce:	2228      	movs	r2, #40	; 0x28
 80012d0:	2100      	movs	r1, #0
 80012d2:	4618      	mov	r0, r3
 80012d4:	f003 faae 	bl	8004834 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80012d8:	1d3b      	adds	r3, r7, #4
 80012da:	2200      	movs	r2, #0
 80012dc:	601a      	str	r2, [r3, #0]
 80012de:	605a      	str	r2, [r3, #4]
 80012e0:	609a      	str	r2, [r3, #8]
 80012e2:	60da      	str	r2, [r3, #12]
 80012e4:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80012e6:	2302      	movs	r3, #2
 80012e8:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80012ea:	2301      	movs	r3, #1
 80012ec:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80012ee:	2310      	movs	r3, #16
 80012f0:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80012f2:	2302      	movs	r3, #2
 80012f4:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 80012f6:	2300      	movs	r3, #0
 80012f8:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 80012fa:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 80012fe:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001300:	f107 0318 	add.w	r3, r7, #24
 8001304:	4618      	mov	r0, r3
 8001306:	f001 fd3b 	bl	8002d80 <HAL_RCC_OscConfig>
 800130a:	4603      	mov	r3, r0
 800130c:	2b00      	cmp	r3, #0
 800130e:	d001      	beq.n	8001314 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8001310:	f000 f9c3 	bl	800169a <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001314:	230f      	movs	r3, #15
 8001316:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001318:	2302      	movs	r3, #2
 800131a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800131c:	2300      	movs	r3, #0
 800131e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001320:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001324:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001326:	2300      	movs	r3, #0
 8001328:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800132a:	1d3b      	adds	r3, r7, #4
 800132c:	2102      	movs	r1, #2
 800132e:	4618      	mov	r0, r3
 8001330:	f001 ffa6 	bl	8003280 <HAL_RCC_ClockConfig>
 8001334:	4603      	mov	r3, r0
 8001336:	2b00      	cmp	r3, #0
 8001338:	d001      	beq.n	800133e <SystemClock_Config+0x7a>
  {
    Error_Handler();
 800133a:	f000 f9ae 	bl	800169a <Error_Handler>
  }
}
 800133e:	bf00      	nop
 8001340:	3740      	adds	r7, #64	; 0x40
 8001342:	46bd      	mov	sp, r7
 8001344:	bd80      	pop	{r7, pc}
	...

08001348 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001348:	b580      	push	{r7, lr}
 800134a:	b086      	sub	sp, #24
 800134c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800134e:	f107 0308 	add.w	r3, r7, #8
 8001352:	2200      	movs	r2, #0
 8001354:	601a      	str	r2, [r3, #0]
 8001356:	605a      	str	r2, [r3, #4]
 8001358:	609a      	str	r2, [r3, #8]
 800135a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800135c:	463b      	mov	r3, r7
 800135e:	2200      	movs	r2, #0
 8001360:	601a      	str	r2, [r3, #0]
 8001362:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001364:	4b1d      	ldr	r3, [pc, #116]	; (80013dc <MX_TIM2_Init+0x94>)
 8001366:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800136a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 31999;
 800136c:	4b1b      	ldr	r3, [pc, #108]	; (80013dc <MX_TIM2_Init+0x94>)
 800136e:	f647 42ff 	movw	r2, #31999	; 0x7cff
 8001372:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001374:	4b19      	ldr	r3, [pc, #100]	; (80013dc <MX_TIM2_Init+0x94>)
 8001376:	2200      	movs	r2, #0
 8001378:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 19;
 800137a:	4b18      	ldr	r3, [pc, #96]	; (80013dc <MX_TIM2_Init+0x94>)
 800137c:	2213      	movs	r2, #19
 800137e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001380:	4b16      	ldr	r3, [pc, #88]	; (80013dc <MX_TIM2_Init+0x94>)
 8001382:	2200      	movs	r2, #0
 8001384:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001386:	4b15      	ldr	r3, [pc, #84]	; (80013dc <MX_TIM2_Init+0x94>)
 8001388:	2200      	movs	r2, #0
 800138a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800138c:	4813      	ldr	r0, [pc, #76]	; (80013dc <MX_TIM2_Init+0x94>)
 800138e:	f002 f911 	bl	80035b4 <HAL_TIM_Base_Init>
 8001392:	4603      	mov	r3, r0
 8001394:	2b00      	cmp	r3, #0
 8001396:	d001      	beq.n	800139c <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001398:	f000 f97f 	bl	800169a <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800139c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80013a0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80013a2:	f107 0308 	add.w	r3, r7, #8
 80013a6:	4619      	mov	r1, r3
 80013a8:	480c      	ldr	r0, [pc, #48]	; (80013dc <MX_TIM2_Init+0x94>)
 80013aa:	f002 fc65 	bl	8003c78 <HAL_TIM_ConfigClockSource>
 80013ae:	4603      	mov	r3, r0
 80013b0:	2b00      	cmp	r3, #0
 80013b2:	d001      	beq.n	80013b8 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 80013b4:	f000 f971 	bl	800169a <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80013b8:	2300      	movs	r3, #0
 80013ba:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80013bc:	2300      	movs	r3, #0
 80013be:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80013c0:	463b      	mov	r3, r7
 80013c2:	4619      	mov	r1, r3
 80013c4:	4805      	ldr	r0, [pc, #20]	; (80013dc <MX_TIM2_Init+0x94>)
 80013c6:	f002 ffe3 	bl	8004390 <HAL_TIMEx_MasterConfigSynchronization>
 80013ca:	4603      	mov	r3, r0
 80013cc:	2b00      	cmp	r3, #0
 80013ce:	d001      	beq.n	80013d4 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80013d0:	f000 f963 	bl	800169a <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80013d4:	bf00      	nop
 80013d6:	3718      	adds	r7, #24
 80013d8:	46bd      	mov	sp, r7
 80013da:	bd80      	pop	{r7, pc}
 80013dc:	200001f8 	.word	0x200001f8

080013e0 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 80013e0:	b580      	push	{r7, lr}
 80013e2:	b08e      	sub	sp, #56	; 0x38
 80013e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80013e6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80013ea:	2200      	movs	r2, #0
 80013ec:	601a      	str	r2, [r3, #0]
 80013ee:	605a      	str	r2, [r3, #4]
 80013f0:	609a      	str	r2, [r3, #8]
 80013f2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013f4:	f107 0320 	add.w	r3, r7, #32
 80013f8:	2200      	movs	r2, #0
 80013fa:	601a      	str	r2, [r3, #0]
 80013fc:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80013fe:	1d3b      	adds	r3, r7, #4
 8001400:	2200      	movs	r2, #0
 8001402:	601a      	str	r2, [r3, #0]
 8001404:	605a      	str	r2, [r3, #4]
 8001406:	609a      	str	r2, [r3, #8]
 8001408:	60da      	str	r2, [r3, #12]
 800140a:	611a      	str	r2, [r3, #16]
 800140c:	615a      	str	r2, [r3, #20]
 800140e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001410:	4b2c      	ldr	r3, [pc, #176]	; (80014c4 <MX_TIM3_Init+0xe4>)
 8001412:	4a2d      	ldr	r2, [pc, #180]	; (80014c8 <MX_TIM3_Init+0xe8>)
 8001414:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 63;
 8001416:	4b2b      	ldr	r3, [pc, #172]	; (80014c4 <MX_TIM3_Init+0xe4>)
 8001418:	223f      	movs	r2, #63	; 0x3f
 800141a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800141c:	4b29      	ldr	r3, [pc, #164]	; (80014c4 <MX_TIM3_Init+0xe4>)
 800141e:	2200      	movs	r2, #0
 8001420:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 999;
 8001422:	4b28      	ldr	r3, [pc, #160]	; (80014c4 <MX_TIM3_Init+0xe4>)
 8001424:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001428:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800142a:	4b26      	ldr	r3, [pc, #152]	; (80014c4 <MX_TIM3_Init+0xe4>)
 800142c:	2200      	movs	r2, #0
 800142e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001430:	4b24      	ldr	r3, [pc, #144]	; (80014c4 <MX_TIM3_Init+0xe4>)
 8001432:	2200      	movs	r2, #0
 8001434:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001436:	4823      	ldr	r0, [pc, #140]	; (80014c4 <MX_TIM3_Init+0xe4>)
 8001438:	f002 f8bc 	bl	80035b4 <HAL_TIM_Base_Init>
 800143c:	4603      	mov	r3, r0
 800143e:	2b00      	cmp	r3, #0
 8001440:	d001      	beq.n	8001446 <MX_TIM3_Init+0x66>
  {
    Error_Handler();
 8001442:	f000 f92a 	bl	800169a <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001446:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800144a:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 800144c:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001450:	4619      	mov	r1, r3
 8001452:	481c      	ldr	r0, [pc, #112]	; (80014c4 <MX_TIM3_Init+0xe4>)
 8001454:	f002 fc10 	bl	8003c78 <HAL_TIM_ConfigClockSource>
 8001458:	4603      	mov	r3, r0
 800145a:	2b00      	cmp	r3, #0
 800145c:	d001      	beq.n	8001462 <MX_TIM3_Init+0x82>
  {
    Error_Handler();
 800145e:	f000 f91c 	bl	800169a <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8001462:	4818      	ldr	r0, [pc, #96]	; (80014c4 <MX_TIM3_Init+0xe4>)
 8001464:	f002 f948 	bl	80036f8 <HAL_TIM_PWM_Init>
 8001468:	4603      	mov	r3, r0
 800146a:	2b00      	cmp	r3, #0
 800146c:	d001      	beq.n	8001472 <MX_TIM3_Init+0x92>
  {
    Error_Handler();
 800146e:	f000 f914 	bl	800169a <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001472:	2300      	movs	r3, #0
 8001474:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001476:	2300      	movs	r3, #0
 8001478:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800147a:	f107 0320 	add.w	r3, r7, #32
 800147e:	4619      	mov	r1, r3
 8001480:	4810      	ldr	r0, [pc, #64]	; (80014c4 <MX_TIM3_Init+0xe4>)
 8001482:	f002 ff85 	bl	8004390 <HAL_TIMEx_MasterConfigSynchronization>
 8001486:	4603      	mov	r3, r0
 8001488:	2b00      	cmp	r3, #0
 800148a:	d001      	beq.n	8001490 <MX_TIM3_Init+0xb0>
  {
    Error_Handler();
 800148c:	f000 f905 	bl	800169a <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001490:	2360      	movs	r3, #96	; 0x60
 8001492:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001494:	2300      	movs	r3, #0
 8001496:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001498:	2300      	movs	r3, #0
 800149a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800149c:	2300      	movs	r3, #0
 800149e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80014a0:	1d3b      	adds	r3, r7, #4
 80014a2:	2200      	movs	r2, #0
 80014a4:	4619      	mov	r1, r3
 80014a6:	4807      	ldr	r0, [pc, #28]	; (80014c4 <MX_TIM3_Init+0xe4>)
 80014a8:	f002 fb28 	bl	8003afc <HAL_TIM_PWM_ConfigChannel>
 80014ac:	4603      	mov	r3, r0
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d001      	beq.n	80014b6 <MX_TIM3_Init+0xd6>
  {
    Error_Handler();
 80014b2:	f000 f8f2 	bl	800169a <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 80014b6:	4803      	ldr	r0, [pc, #12]	; (80014c4 <MX_TIM3_Init+0xe4>)
 80014b8:	f000 fe66 	bl	8002188 <HAL_TIM_MspPostInit>

}
 80014bc:	bf00      	nop
 80014be:	3738      	adds	r7, #56	; 0x38
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bd80      	pop	{r7, pc}
 80014c4:	200001b0 	.word	0x200001b0
 80014c8:	40000400 	.word	0x40000400

080014cc <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80014cc:	b580      	push	{r7, lr}
 80014ce:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80014d0:	4b11      	ldr	r3, [pc, #68]	; (8001518 <MX_USART2_UART_Init+0x4c>)
 80014d2:	4a12      	ldr	r2, [pc, #72]	; (800151c <MX_USART2_UART_Init+0x50>)
 80014d4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 80014d6:	4b10      	ldr	r3, [pc, #64]	; (8001518 <MX_USART2_UART_Init+0x4c>)
 80014d8:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80014dc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80014de:	4b0e      	ldr	r3, [pc, #56]	; (8001518 <MX_USART2_UART_Init+0x4c>)
 80014e0:	2200      	movs	r2, #0
 80014e2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80014e4:	4b0c      	ldr	r3, [pc, #48]	; (8001518 <MX_USART2_UART_Init+0x4c>)
 80014e6:	2200      	movs	r2, #0
 80014e8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80014ea:	4b0b      	ldr	r3, [pc, #44]	; (8001518 <MX_USART2_UART_Init+0x4c>)
 80014ec:	2200      	movs	r2, #0
 80014ee:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80014f0:	4b09      	ldr	r3, [pc, #36]	; (8001518 <MX_USART2_UART_Init+0x4c>)
 80014f2:	220c      	movs	r2, #12
 80014f4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80014f6:	4b08      	ldr	r3, [pc, #32]	; (8001518 <MX_USART2_UART_Init+0x4c>)
 80014f8:	2200      	movs	r2, #0
 80014fa:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80014fc:	4b06      	ldr	r3, [pc, #24]	; (8001518 <MX_USART2_UART_Init+0x4c>)
 80014fe:	2200      	movs	r2, #0
 8001500:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001502:	4805      	ldr	r0, [pc, #20]	; (8001518 <MX_USART2_UART_Init+0x4c>)
 8001504:	f002 ffb4 	bl	8004470 <HAL_UART_Init>
 8001508:	4603      	mov	r3, r0
 800150a:	2b00      	cmp	r3, #0
 800150c:	d001      	beq.n	8001512 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800150e:	f000 f8c4 	bl	800169a <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001512:	bf00      	nop
 8001514:	bd80      	pop	{r7, pc}
 8001516:	bf00      	nop
 8001518:	20000240 	.word	0x20000240
 800151c:	40004400 	.word	0x40004400

08001520 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001520:	b580      	push	{r7, lr}
 8001522:	b088      	sub	sp, #32
 8001524:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001526:	f107 0310 	add.w	r3, r7, #16
 800152a:	2200      	movs	r2, #0
 800152c:	601a      	str	r2, [r3, #0]
 800152e:	605a      	str	r2, [r3, #4]
 8001530:	609a      	str	r2, [r3, #8]
 8001532:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001534:	4b45      	ldr	r3, [pc, #276]	; (800164c <MX_GPIO_Init+0x12c>)
 8001536:	699b      	ldr	r3, [r3, #24]
 8001538:	4a44      	ldr	r2, [pc, #272]	; (800164c <MX_GPIO_Init+0x12c>)
 800153a:	f043 0310 	orr.w	r3, r3, #16
 800153e:	6193      	str	r3, [r2, #24]
 8001540:	4b42      	ldr	r3, [pc, #264]	; (800164c <MX_GPIO_Init+0x12c>)
 8001542:	699b      	ldr	r3, [r3, #24]
 8001544:	f003 0310 	and.w	r3, r3, #16
 8001548:	60fb      	str	r3, [r7, #12]
 800154a:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800154c:	4b3f      	ldr	r3, [pc, #252]	; (800164c <MX_GPIO_Init+0x12c>)
 800154e:	699b      	ldr	r3, [r3, #24]
 8001550:	4a3e      	ldr	r2, [pc, #248]	; (800164c <MX_GPIO_Init+0x12c>)
 8001552:	f043 0320 	orr.w	r3, r3, #32
 8001556:	6193      	str	r3, [r2, #24]
 8001558:	4b3c      	ldr	r3, [pc, #240]	; (800164c <MX_GPIO_Init+0x12c>)
 800155a:	699b      	ldr	r3, [r3, #24]
 800155c:	f003 0320 	and.w	r3, r3, #32
 8001560:	60bb      	str	r3, [r7, #8]
 8001562:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001564:	4b39      	ldr	r3, [pc, #228]	; (800164c <MX_GPIO_Init+0x12c>)
 8001566:	699b      	ldr	r3, [r3, #24]
 8001568:	4a38      	ldr	r2, [pc, #224]	; (800164c <MX_GPIO_Init+0x12c>)
 800156a:	f043 0304 	orr.w	r3, r3, #4
 800156e:	6193      	str	r3, [r2, #24]
 8001570:	4b36      	ldr	r3, [pc, #216]	; (800164c <MX_GPIO_Init+0x12c>)
 8001572:	699b      	ldr	r3, [r3, #24]
 8001574:	f003 0304 	and.w	r3, r3, #4
 8001578:	607b      	str	r3, [r7, #4]
 800157a:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800157c:	4b33      	ldr	r3, [pc, #204]	; (800164c <MX_GPIO_Init+0x12c>)
 800157e:	699b      	ldr	r3, [r3, #24]
 8001580:	4a32      	ldr	r2, [pc, #200]	; (800164c <MX_GPIO_Init+0x12c>)
 8001582:	f043 0308 	orr.w	r3, r3, #8
 8001586:	6193      	str	r3, [r2, #24]
 8001588:	4b30      	ldr	r3, [pc, #192]	; (800164c <MX_GPIO_Init+0x12c>)
 800158a:	699b      	ldr	r3, [r3, #24]
 800158c:	f003 0308 	and.w	r3, r3, #8
 8001590:	603b      	str	r3, [r7, #0]
 8001592:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|Traffic_Pedes_2_Pin|Traffic_1_1_Pin, GPIO_PIN_RESET);
 8001594:	2200      	movs	r2, #0
 8001596:	f44f 61a4 	mov.w	r1, #1312	; 0x520
 800159a:	482d      	ldr	r0, [pc, #180]	; (8001650 <MX_GPIO_Init+0x130>)
 800159c:	f001 fb8b 	bl	8002cb6 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Traffic_Pedes_1_Pin|Traffic_1_2_Pin|Traffic_2_2_Pin|Traffic_2_1_Pin, GPIO_PIN_RESET);
 80015a0:	2200      	movs	r2, #0
 80015a2:	f44f 6187 	mov.w	r1, #1080	; 0x438
 80015a6:	482b      	ldr	r0, [pc, #172]	; (8001654 <MX_GPIO_Init+0x134>)
 80015a8:	f001 fb85 	bl	8002cb6 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80015ac:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80015b0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80015b2:	4b29      	ldr	r3, [pc, #164]	; (8001658 <MX_GPIO_Init+0x138>)
 80015b4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015b6:	2300      	movs	r3, #0
 80015b8:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80015ba:	f107 0310 	add.w	r3, r7, #16
 80015be:	4619      	mov	r1, r3
 80015c0:	4826      	ldr	r0, [pc, #152]	; (800165c <MX_GPIO_Init+0x13c>)
 80015c2:	f001 f9dd 	bl	8002980 <HAL_GPIO_Init>

  /*Configure GPIO pins : B_Pedes_Pin B_1_Pin B_2_Pin */
  GPIO_InitStruct.Pin = B_Pedes_Pin|B_1_Pin|B_2_Pin;
 80015c6:	2313      	movs	r3, #19
 80015c8:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80015ca:	2300      	movs	r3, #0
 80015cc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80015ce:	2301      	movs	r3, #1
 80015d0:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015d2:	f107 0310 	add.w	r3, r7, #16
 80015d6:	4619      	mov	r1, r3
 80015d8:	481d      	ldr	r0, [pc, #116]	; (8001650 <MX_GPIO_Init+0x130>)
 80015da:	f001 f9d1 	bl	8002980 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin Traffic_Pedes_2_Pin Traffic_1_1_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|Traffic_Pedes_2_Pin|Traffic_1_1_Pin;
 80015de:	f44f 63a4 	mov.w	r3, #1312	; 0x520
 80015e2:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015e4:	2301      	movs	r3, #1
 80015e6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e8:	2300      	movs	r3, #0
 80015ea:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015ec:	2302      	movs	r3, #2
 80015ee:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015f0:	f107 0310 	add.w	r3, r7, #16
 80015f4:	4619      	mov	r1, r3
 80015f6:	4816      	ldr	r0, [pc, #88]	; (8001650 <MX_GPIO_Init+0x130>)
 80015f8:	f001 f9c2 	bl	8002980 <HAL_GPIO_Init>

  /*Configure GPIO pin : B_3_Pin */
  GPIO_InitStruct.Pin = B_3_Pin;
 80015fc:	2301      	movs	r3, #1
 80015fe:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001600:	2300      	movs	r3, #0
 8001602:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001604:	2301      	movs	r3, #1
 8001606:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(B_3_GPIO_Port, &GPIO_InitStruct);
 8001608:	f107 0310 	add.w	r3, r7, #16
 800160c:	4619      	mov	r1, r3
 800160e:	4811      	ldr	r0, [pc, #68]	; (8001654 <MX_GPIO_Init+0x134>)
 8001610:	f001 f9b6 	bl	8002980 <HAL_GPIO_Init>

  /*Configure GPIO pins : Traffic_Pedes_1_Pin Traffic_1_2_Pin Traffic_2_2_Pin Traffic_2_1_Pin */
  GPIO_InitStruct.Pin = Traffic_Pedes_1_Pin|Traffic_1_2_Pin|Traffic_2_2_Pin|Traffic_2_1_Pin;
 8001614:	f44f 6387 	mov.w	r3, #1080	; 0x438
 8001618:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800161a:	2301      	movs	r3, #1
 800161c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800161e:	2300      	movs	r3, #0
 8001620:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001622:	2302      	movs	r3, #2
 8001624:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001626:	f107 0310 	add.w	r3, r7, #16
 800162a:	4619      	mov	r1, r3
 800162c:	4809      	ldr	r0, [pc, #36]	; (8001654 <MX_GPIO_Init+0x134>)
 800162e:	f001 f9a7 	bl	8002980 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001632:	2200      	movs	r2, #0
 8001634:	2100      	movs	r1, #0
 8001636:	2028      	movs	r0, #40	; 0x28
 8001638:	f001 f96b 	bl	8002912 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 800163c:	2028      	movs	r0, #40	; 0x28
 800163e:	f001 f984 	bl	800294a <HAL_NVIC_EnableIRQ>

}
 8001642:	bf00      	nop
 8001644:	3720      	adds	r7, #32
 8001646:	46bd      	mov	sp, r7
 8001648:	bd80      	pop	{r7, pc}
 800164a:	bf00      	nop
 800164c:	40021000 	.word	0x40021000
 8001650:	40010800 	.word	0x40010800
 8001654:	40010c00 	.word	0x40010c00
 8001658:	10110000 	.word	0x10110000
 800165c:	40011000 	.word	0x40011000

08001660 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
int counter = 0;
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 8001660:	b580      	push	{r7, lr}
 8001662:	b082      	sub	sp, #8
 8001664:	af00      	add	r7, sp, #0
 8001666:	6078      	str	r0, [r7, #4]
	// timerRun()
	if (htim->Instance == TIM2) {
 8001668:	687b      	ldr	r3, [r7, #4]
 800166a:	681b      	ldr	r3, [r3, #0]
 800166c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001670:	d105      	bne.n	800167e <HAL_TIM_PeriodElapsedCallback+0x1e>
		//timestamp++; // increase timestamp by 10ms
		timerRun();
 8001672:	f000 fcad 	bl	8001fd0 <timerRun>
		SCH_Update();
 8001676:	f000 fab7 	bl	8001be8 <SCH_Update>
		button_reading();
 800167a:	f7ff fd0b 	bl	8001094 <button_reading>
	}

	if (htim->Instance == TIM3) {
		// do something
	}
}
 800167e:	bf00      	nop
 8001680:	3708      	adds	r7, #8
 8001682:	46bd      	mov	sp, r7
 8001684:	bd80      	pop	{r7, pc}

08001686 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8001686:	b480      	push	{r7}
 8001688:	b083      	sub	sp, #12
 800168a:	af00      	add	r7, sp, #0
 800168c:	4603      	mov	r3, r0
 800168e:	80fb      	strh	r3, [r7, #6]

}
 8001690:	bf00      	nop
 8001692:	370c      	adds	r7, #12
 8001694:	46bd      	mov	sp, r7
 8001696:	bc80      	pop	{r7}
 8001698:	4770      	bx	lr

0800169a <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800169a:	b480      	push	{r7}
 800169c:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800169e:	b672      	cpsid	i
}
 80016a0:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80016a2:	e7fe      	b.n	80016a2 <Error_Handler+0x8>
 80016a4:	0000      	movs	r0, r0
	...

080016a8 <pedestrian_scramble>:
int pedestrian_wanna_go = 0;
extern TIM_HandleTypeDef htim3;

float extra_step = 1;

void pedestrian_scramble() {
 80016a8:	b598      	push	{r3, r4, r7, lr}
 80016aa:	af00      	add	r7, sp, #0
		//if (status != 0) return;

		if (WhichButtonIsPressed() == 4) {
 80016ac:	f7ff f9de 	bl	8000a6c <WhichButtonIsPressed>
 80016b0:	4603      	mov	r3, r0
 80016b2:	2b04      	cmp	r3, #4
 80016b4:	d10e      	bne.n	80016d4 <pedestrian_scramble+0x2c>
			pedestrian_wanna_go = 1;
 80016b6:	4ba6      	ldr	r3, [pc, #664]	; (8001950 <pedestrian_scramble+0x2a8>)
 80016b8:	2201      	movs	r2, #1
 80016ba:	601a      	str	r2, [r3, #0]
			if (get_led_color(TRAFFIC_1_LED) == RED_COLOR) {
 80016bc:	2028      	movs	r0, #40	; 0x28
 80016be:	f000 ff09 	bl	80024d4 <get_led_color>
 80016c2:	4603      	mov	r3, r0
 80016c4:	2b1e      	cmp	r3, #30
 80016c6:	d105      	bne.n	80016d4 <pedestrian_scramble+0x2c>
				pedestrian_active = 1;
 80016c8:	4ba2      	ldr	r3, [pc, #648]	; (8001954 <pedestrian_scramble+0x2ac>)
 80016ca:	2201      	movs	r2, #1
 80016cc:	601a      	str	r2, [r3, #0]
				flag_button = 1;
 80016ce:	4ba2      	ldr	r3, [pc, #648]	; (8001958 <pedestrian_scramble+0x2b0>)
 80016d0:	2201      	movs	r2, #1
 80016d2:	601a      	str	r2, [r3, #0]
			}
		}

		if ( get_led_color(TRAFFIC_1_LED) == RED_COLOR && (flag_button || pedestrian_wanna_go) ) {
 80016d4:	2028      	movs	r0, #40	; 0x28
 80016d6:	f000 fefd 	bl	80024d4 <get_led_color>
 80016da:	4603      	mov	r3, r0
 80016dc:	2b1e      	cmp	r3, #30
 80016de:	d12a      	bne.n	8001736 <pedestrian_scramble+0x8e>
 80016e0:	4b9d      	ldr	r3, [pc, #628]	; (8001958 <pedestrian_scramble+0x2b0>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d103      	bne.n	80016f0 <pedestrian_scramble+0x48>
 80016e8:	4b99      	ldr	r3, [pc, #612]	; (8001950 <pedestrian_scramble+0x2a8>)
 80016ea:	681b      	ldr	r3, [r3, #0]
 80016ec:	2b00      	cmp	r3, #0
 80016ee:	d022      	beq.n	8001736 <pedestrian_scramble+0x8e>
			pedestrian_active = 1;
 80016f0:	4b98      	ldr	r3, [pc, #608]	; (8001954 <pedestrian_scramble+0x2ac>)
 80016f2:	2201      	movs	r2, #1
 80016f4:	601a      	str	r2, [r3, #0]
			/* Calculate number of step for increase frequency and decrease delay time */
			FREQ_STEP = 120 / (SEG7_CLOCK[0] / TIME_UNIT);
 80016f6:	4b99      	ldr	r3, [pc, #612]	; (800195c <pedestrian_scramble+0x2b4>)
 80016f8:	681b      	ldr	r3, [r3, #0]
 80016fa:	4a99      	ldr	r2, [pc, #612]	; (8001960 <pedestrian_scramble+0x2b8>)
 80016fc:	fb82 1203 	smull	r1, r2, r2, r3
 8001700:	1192      	asrs	r2, r2, #6
 8001702:	17db      	asrs	r3, r3, #31
 8001704:	1ad3      	subs	r3, r2, r3
 8001706:	2278      	movs	r2, #120	; 0x78
 8001708:	fb92 f3f3 	sdiv	r3, r2, r3
 800170c:	4a95      	ldr	r2, [pc, #596]	; (8001964 <pedestrian_scramble+0x2bc>)
 800170e:	6013      	str	r3, [r2, #0]
			DELAY_STEP = 400 / (SEG7_CLOCK[0] / TIME_UNIT);
 8001710:	4b92      	ldr	r3, [pc, #584]	; (800195c <pedestrian_scramble+0x2b4>)
 8001712:	681b      	ldr	r3, [r3, #0]
 8001714:	4a92      	ldr	r2, [pc, #584]	; (8001960 <pedestrian_scramble+0x2b8>)
 8001716:	fb82 1203 	smull	r1, r2, r2, r3
 800171a:	1192      	asrs	r2, r2, #6
 800171c:	17db      	asrs	r3, r3, #31
 800171e:	1ad3      	subs	r3, r2, r3
 8001720:	f44f 72c8 	mov.w	r2, #400	; 0x190
 8001724:	fb92 f3f3 	sdiv	r3, r2, r3
 8001728:	4a8f      	ldr	r2, [pc, #572]	; (8001968 <pedestrian_scramble+0x2c0>)
 800172a:	6013      	str	r3, [r2, #0]
			time_allow_pedestrian = SEG7_CLOCK[0];
 800172c:	4b8b      	ldr	r3, [pc, #556]	; (800195c <pedestrian_scramble+0x2b4>)
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	4a8e      	ldr	r2, [pc, #568]	; (800196c <pedestrian_scramble+0x2c4>)
 8001732:	6013      	str	r3, [r2, #0]
 8001734:	e011      	b.n	800175a <pedestrian_scramble+0xb2>
		}
		else if (pedestrian_wanna_go) {
 8001736:	4b86      	ldr	r3, [pc, #536]	; (8001950 <pedestrian_scramble+0x2a8>)
 8001738:	681b      	ldr	r3, [r3, #0]
 800173a:	2b00      	cmp	r3, #0
 800173c:	d007      	beq.n	800174e <pedestrian_scramble+0xa6>
			pedestrian_active = 0;
 800173e:	4b85      	ldr	r3, [pc, #532]	; (8001954 <pedestrian_scramble+0x2ac>)
 8001740:	2200      	movs	r2, #0
 8001742:	601a      	str	r2, [r3, #0]
			set_led_color(PEDESTRIAN_LED, RED_COLOR);
 8001744:	211e      	movs	r1, #30
 8001746:	202a      	movs	r0, #42	; 0x2a
 8001748:	f000 fe4e 	bl	80023e8 <set_led_color>
 800174c:	e005      	b.n	800175a <pedestrian_scramble+0xb2>

		} else {
			pedestrian_active = 0;
 800174e:	4b81      	ldr	r3, [pc, #516]	; (8001954 <pedestrian_scramble+0x2ac>)
 8001750:	2200      	movs	r2, #0
 8001752:	601a      	str	r2, [r3, #0]
			clear_led(PEDESTRIAN_LED);
 8001754:	202a      	movs	r0, #42	; 0x2a
 8001756:	f000 ff0b 	bl	8002570 <clear_led>
		}

		if (pedestrian_active) {
 800175a:	4b7e      	ldr	r3, [pc, #504]	; (8001954 <pedestrian_scramble+0x2ac>)
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	2b00      	cmp	r3, #0
 8001760:	f000 8144 	beq.w	80019ec <pedestrian_scramble+0x344>
			set_led_color(PEDESTRIAN_LED, GREEN_COLOR);
 8001764:	2120      	movs	r1, #32
 8001766:	202a      	movs	r0, #42	; 0x2a
 8001768:	f000 fe3e 	bl	80023e8 <set_led_color>
			/* Buzzer frequency */
			__HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1, 0);
 800176c:	4b80      	ldr	r3, [pc, #512]	; (8001970 <pedestrian_scramble+0x2c8>)
 800176e:	681b      	ldr	r3, [r3, #0]
 8001770:	2200      	movs	r2, #0
 8001772:	635a      	str	r2, [r3, #52]	; 0x34
			HAL_Delay(delay);
 8001774:	4b7f      	ldr	r3, [pc, #508]	; (8001974 <pedestrian_scramble+0x2cc>)
 8001776:	681b      	ldr	r3, [r3, #0]
 8001778:	4618      	mov	r0, r3
 800177a:	f000 ffb3 	bl	80026e4 <HAL_Delay>

			/* If 2/3 time has passed, need more extra step*/
			if (SEG7_CLOCK[0] >= 2 * time_allow_pedestrian / 3) {
 800177e:	4b77      	ldr	r3, [pc, #476]	; (800195c <pedestrian_scramble+0x2b4>)
 8001780:	681a      	ldr	r2, [r3, #0]
 8001782:	4b7a      	ldr	r3, [pc, #488]	; (800196c <pedestrian_scramble+0x2c4>)
 8001784:	681b      	ldr	r3, [r3, #0]
 8001786:	005b      	lsls	r3, r3, #1
 8001788:	497b      	ldr	r1, [pc, #492]	; (8001978 <pedestrian_scramble+0x2d0>)
 800178a:	fb81 0103 	smull	r0, r1, r1, r3
 800178e:	17db      	asrs	r3, r3, #31
 8001790:	1acb      	subs	r3, r1, r3
 8001792:	429a      	cmp	r2, r3
 8001794:	db61      	blt.n	800185a <pedestrian_scramble+0x1b2>
				extra_step += 0.09;
 8001796:	4b79      	ldr	r3, [pc, #484]	; (800197c <pedestrian_scramble+0x2d4>)
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	4618      	mov	r0, r3
 800179c:	f7fe fef0 	bl	8000580 <__aeabi_f2d>
 80017a0:	a367      	add	r3, pc, #412	; (adr r3, 8001940 <pedestrian_scramble+0x298>)
 80017a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017a6:	f7fe fd8d 	bl	80002c4 <__adddf3>
 80017aa:	4602      	mov	r2, r0
 80017ac:	460b      	mov	r3, r1
 80017ae:	4610      	mov	r0, r2
 80017b0:	4619      	mov	r1, r3
 80017b2:	f7fe ff3d 	bl	8000630 <__aeabi_d2f>
 80017b6:	4603      	mov	r3, r0
 80017b8:	4a70      	ldr	r2, [pc, #448]	; (800197c <pedestrian_scramble+0x2d4>)
 80017ba:	6013      	str	r3, [r2, #0]
//				__HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1, FREQ += FREQ_STEP);
				FREQ += FREQ_STEP;
 80017bc:	4b70      	ldr	r3, [pc, #448]	; (8001980 <pedestrian_scramble+0x2d8>)
 80017be:	681a      	ldr	r2, [r3, #0]
 80017c0:	4b68      	ldr	r3, [pc, #416]	; (8001964 <pedestrian_scramble+0x2bc>)
 80017c2:	681b      	ldr	r3, [r3, #0]
 80017c4:	4413      	add	r3, r2
 80017c6:	4a6e      	ldr	r2, [pc, #440]	; (8001980 <pedestrian_scramble+0x2d8>)
 80017c8:	6013      	str	r3, [r2, #0]
				TIM3->CCR1 = FREQ;
 80017ca:	4b6d      	ldr	r3, [pc, #436]	; (8001980 <pedestrian_scramble+0x2d8>)
 80017cc:	681a      	ldr	r2, [r3, #0]
 80017ce:	4b6d      	ldr	r3, [pc, #436]	; (8001984 <pedestrian_scramble+0x2dc>)
 80017d0:	635a      	str	r2, [r3, #52]	; 0x34
				if (delay > extra_step * DELAY_STEP) HAL_Delay(delay -= extra_step * DELAY_STEP);
 80017d2:	4b68      	ldr	r3, [pc, #416]	; (8001974 <pedestrian_scramble+0x2cc>)
 80017d4:	681b      	ldr	r3, [r3, #0]
 80017d6:	4618      	mov	r0, r3
 80017d8:	f7ff f834 	bl	8000844 <__aeabi_i2f>
 80017dc:	4604      	mov	r4, r0
 80017de:	4b62      	ldr	r3, [pc, #392]	; (8001968 <pedestrian_scramble+0x2c0>)
 80017e0:	681b      	ldr	r3, [r3, #0]
 80017e2:	4618      	mov	r0, r3
 80017e4:	f7ff f82e 	bl	8000844 <__aeabi_i2f>
 80017e8:	4602      	mov	r2, r0
 80017ea:	4b64      	ldr	r3, [pc, #400]	; (800197c <pedestrian_scramble+0x2d4>)
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	4619      	mov	r1, r3
 80017f0:	4610      	mov	r0, r2
 80017f2:	f7fe fcad 	bl	8000150 <__aeabi_fmul>
 80017f6:	4603      	mov	r3, r0
 80017f8:	4619      	mov	r1, r3
 80017fa:	4620      	mov	r0, r4
 80017fc:	f7ff f8e2 	bl	80009c4 <__aeabi_fcmpgt>
 8001800:	4603      	mov	r3, r0
 8001802:	2b00      	cmp	r3, #0
 8001804:	d023      	beq.n	800184e <pedestrian_scramble+0x1a6>
 8001806:	4b5b      	ldr	r3, [pc, #364]	; (8001974 <pedestrian_scramble+0x2cc>)
 8001808:	681b      	ldr	r3, [r3, #0]
 800180a:	4618      	mov	r0, r3
 800180c:	f7ff f81a 	bl	8000844 <__aeabi_i2f>
 8001810:	4604      	mov	r4, r0
 8001812:	4b55      	ldr	r3, [pc, #340]	; (8001968 <pedestrian_scramble+0x2c0>)
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	4618      	mov	r0, r3
 8001818:	f7ff f814 	bl	8000844 <__aeabi_i2f>
 800181c:	4602      	mov	r2, r0
 800181e:	4b57      	ldr	r3, [pc, #348]	; (800197c <pedestrian_scramble+0x2d4>)
 8001820:	681b      	ldr	r3, [r3, #0]
 8001822:	4619      	mov	r1, r3
 8001824:	4610      	mov	r0, r2
 8001826:	f7fe fc93 	bl	8000150 <__aeabi_fmul>
 800182a:	4603      	mov	r3, r0
 800182c:	4619      	mov	r1, r3
 800182e:	4620      	mov	r0, r4
 8001830:	f7fe ff52 	bl	80006d8 <__aeabi_fsub>
 8001834:	4603      	mov	r3, r0
 8001836:	4618      	mov	r0, r3
 8001838:	f7ff f8ce 	bl	80009d8 <__aeabi_f2iz>
 800183c:	4603      	mov	r3, r0
 800183e:	4a4d      	ldr	r2, [pc, #308]	; (8001974 <pedestrian_scramble+0x2cc>)
 8001840:	6013      	str	r3, [r2, #0]
 8001842:	4b4c      	ldr	r3, [pc, #304]	; (8001974 <pedestrian_scramble+0x2cc>)
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	4618      	mov	r0, r3
 8001848:	f000 ff4c 	bl	80026e4 <HAL_Delay>
 800184c:	e0ca      	b.n	80019e4 <pedestrian_scramble+0x33c>
				else HAL_Delay(delay);
 800184e:	4b49      	ldr	r3, [pc, #292]	; (8001974 <pedestrian_scramble+0x2cc>)
 8001850:	681b      	ldr	r3, [r3, #0]
 8001852:	4618      	mov	r0, r3
 8001854:	f000 ff46 	bl	80026e4 <HAL_Delay>
 8001858:	e0c4      	b.n	80019e4 <pedestrian_scramble+0x33c>
			} else {
				extra_step += 0.3;
 800185a:	4b48      	ldr	r3, [pc, #288]	; (800197c <pedestrian_scramble+0x2d4>)
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	4618      	mov	r0, r3
 8001860:	f7fe fe8e 	bl	8000580 <__aeabi_f2d>
 8001864:	a338      	add	r3, pc, #224	; (adr r3, 8001948 <pedestrian_scramble+0x2a0>)
 8001866:	e9d3 2300 	ldrd	r2, r3, [r3]
 800186a:	f7fe fd2b 	bl	80002c4 <__adddf3>
 800186e:	4602      	mov	r2, r0
 8001870:	460b      	mov	r3, r1
 8001872:	4610      	mov	r0, r2
 8001874:	4619      	mov	r1, r3
 8001876:	f7fe fedb 	bl	8000630 <__aeabi_d2f>
 800187a:	4603      	mov	r3, r0
 800187c:	4a3f      	ldr	r2, [pc, #252]	; (800197c <pedestrian_scramble+0x2d4>)
 800187e:	6013      	str	r3, [r2, #0]
//				__HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1, FREQ += extra_step * FREQ_STEP);
				FREQ += extra_step * FREQ_STEP;
 8001880:	4b3f      	ldr	r3, [pc, #252]	; (8001980 <pedestrian_scramble+0x2d8>)
 8001882:	681b      	ldr	r3, [r3, #0]
 8001884:	4618      	mov	r0, r3
 8001886:	f7fe ffdd 	bl	8000844 <__aeabi_i2f>
 800188a:	4604      	mov	r4, r0
 800188c:	4b35      	ldr	r3, [pc, #212]	; (8001964 <pedestrian_scramble+0x2bc>)
 800188e:	681b      	ldr	r3, [r3, #0]
 8001890:	4618      	mov	r0, r3
 8001892:	f7fe ffd7 	bl	8000844 <__aeabi_i2f>
 8001896:	4602      	mov	r2, r0
 8001898:	4b38      	ldr	r3, [pc, #224]	; (800197c <pedestrian_scramble+0x2d4>)
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	4619      	mov	r1, r3
 800189e:	4610      	mov	r0, r2
 80018a0:	f7fe fc56 	bl	8000150 <__aeabi_fmul>
 80018a4:	4603      	mov	r3, r0
 80018a6:	4619      	mov	r1, r3
 80018a8:	4620      	mov	r0, r4
 80018aa:	f7fe ff17 	bl	80006dc <__addsf3>
 80018ae:	4603      	mov	r3, r0
 80018b0:	4618      	mov	r0, r3
 80018b2:	f7ff f891 	bl	80009d8 <__aeabi_f2iz>
 80018b6:	4603      	mov	r3, r0
 80018b8:	4a31      	ldr	r2, [pc, #196]	; (8001980 <pedestrian_scramble+0x2d8>)
 80018ba:	6013      	str	r3, [r2, #0]
				TIM3->CCR1 = FREQ;
 80018bc:	4b30      	ldr	r3, [pc, #192]	; (8001980 <pedestrian_scramble+0x2d8>)
 80018be:	681a      	ldr	r2, [r3, #0]
 80018c0:	4b30      	ldr	r3, [pc, #192]	; (8001984 <pedestrian_scramble+0x2dc>)
 80018c2:	635a      	str	r2, [r3, #52]	; 0x34
				if (delay > extra_step * DELAY_STEP) HAL_Delay(delay -= extra_step * DELAY_STEP);
 80018c4:	4b2b      	ldr	r3, [pc, #172]	; (8001974 <pedestrian_scramble+0x2cc>)
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	4618      	mov	r0, r3
 80018ca:	f7fe ffbb 	bl	8000844 <__aeabi_i2f>
 80018ce:	4604      	mov	r4, r0
 80018d0:	4b25      	ldr	r3, [pc, #148]	; (8001968 <pedestrian_scramble+0x2c0>)
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	4618      	mov	r0, r3
 80018d6:	f7fe ffb5 	bl	8000844 <__aeabi_i2f>
 80018da:	4602      	mov	r2, r0
 80018dc:	4b27      	ldr	r3, [pc, #156]	; (800197c <pedestrian_scramble+0x2d4>)
 80018de:	681b      	ldr	r3, [r3, #0]
 80018e0:	4619      	mov	r1, r3
 80018e2:	4610      	mov	r0, r2
 80018e4:	f7fe fc34 	bl	8000150 <__aeabi_fmul>
 80018e8:	4603      	mov	r3, r0
 80018ea:	4619      	mov	r1, r3
 80018ec:	4620      	mov	r0, r4
 80018ee:	f7ff f869 	bl	80009c4 <__aeabi_fcmpgt>
 80018f2:	4603      	mov	r3, r0
 80018f4:	2b00      	cmp	r3, #0
 80018f6:	d047      	beq.n	8001988 <pedestrian_scramble+0x2e0>
 80018f8:	4b1e      	ldr	r3, [pc, #120]	; (8001974 <pedestrian_scramble+0x2cc>)
 80018fa:	681b      	ldr	r3, [r3, #0]
 80018fc:	4618      	mov	r0, r3
 80018fe:	f7fe ffa1 	bl	8000844 <__aeabi_i2f>
 8001902:	4604      	mov	r4, r0
 8001904:	4b18      	ldr	r3, [pc, #96]	; (8001968 <pedestrian_scramble+0x2c0>)
 8001906:	681b      	ldr	r3, [r3, #0]
 8001908:	4618      	mov	r0, r3
 800190a:	f7fe ff9b 	bl	8000844 <__aeabi_i2f>
 800190e:	4602      	mov	r2, r0
 8001910:	4b1a      	ldr	r3, [pc, #104]	; (800197c <pedestrian_scramble+0x2d4>)
 8001912:	681b      	ldr	r3, [r3, #0]
 8001914:	4619      	mov	r1, r3
 8001916:	4610      	mov	r0, r2
 8001918:	f7fe fc1a 	bl	8000150 <__aeabi_fmul>
 800191c:	4603      	mov	r3, r0
 800191e:	4619      	mov	r1, r3
 8001920:	4620      	mov	r0, r4
 8001922:	f7fe fed9 	bl	80006d8 <__aeabi_fsub>
 8001926:	4603      	mov	r3, r0
 8001928:	4618      	mov	r0, r3
 800192a:	f7ff f855 	bl	80009d8 <__aeabi_f2iz>
 800192e:	4603      	mov	r3, r0
 8001930:	4a10      	ldr	r2, [pc, #64]	; (8001974 <pedestrian_scramble+0x2cc>)
 8001932:	6013      	str	r3, [r2, #0]
 8001934:	4b0f      	ldr	r3, [pc, #60]	; (8001974 <pedestrian_scramble+0x2cc>)
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	4618      	mov	r0, r3
 800193a:	f000 fed3 	bl	80026e4 <HAL_Delay>
 800193e:	e051      	b.n	80019e4 <pedestrian_scramble+0x33c>
 8001940:	70a3d70a 	.word	0x70a3d70a
 8001944:	3fb70a3d 	.word	0x3fb70a3d
 8001948:	33333333 	.word	0x33333333
 800194c:	3fd33333 	.word	0x3fd33333
 8001950:	20000134 	.word	0x20000134
 8001954:	20000120 	.word	0x20000120
 8001958:	2000012c 	.word	0x2000012c
 800195c:	2000000c 	.word	0x2000000c
 8001960:	10624dd3 	.word	0x10624dd3
 8001964:	20000124 	.word	0x20000124
 8001968:	20000040 	.word	0x20000040
 800196c:	20000128 	.word	0x20000128
 8001970:	200001b0 	.word	0x200001b0
 8001974:	20000038 	.word	0x20000038
 8001978:	55555556 	.word	0x55555556
 800197c:	20000044 	.word	0x20000044
 8001980:	2000003c 	.word	0x2000003c
 8001984:	40000400 	.word	0x40000400
				else if (delay > extra_step * 10) HAL_Delay(delay = - extra_step * 20);
 8001988:	4b27      	ldr	r3, [pc, #156]	; (8001a28 <pedestrian_scramble+0x380>)
 800198a:	681b      	ldr	r3, [r3, #0]
 800198c:	4618      	mov	r0, r3
 800198e:	f7fe ff59 	bl	8000844 <__aeabi_i2f>
 8001992:	4604      	mov	r4, r0
 8001994:	4b25      	ldr	r3, [pc, #148]	; (8001a2c <pedestrian_scramble+0x384>)
 8001996:	681b      	ldr	r3, [r3, #0]
 8001998:	4925      	ldr	r1, [pc, #148]	; (8001a30 <pedestrian_scramble+0x388>)
 800199a:	4618      	mov	r0, r3
 800199c:	f7fe fbd8 	bl	8000150 <__aeabi_fmul>
 80019a0:	4603      	mov	r3, r0
 80019a2:	4619      	mov	r1, r3
 80019a4:	4620      	mov	r0, r4
 80019a6:	f7ff f80d 	bl	80009c4 <__aeabi_fcmpgt>
 80019aa:	4603      	mov	r3, r0
 80019ac:	2b00      	cmp	r3, #0
 80019ae:	d014      	beq.n	80019da <pedestrian_scramble+0x332>
 80019b0:	4b1e      	ldr	r3, [pc, #120]	; (8001a2c <pedestrian_scramble+0x384>)
 80019b2:	681b      	ldr	r3, [r3, #0]
 80019b4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000
 80019b8:	491e      	ldr	r1, [pc, #120]	; (8001a34 <pedestrian_scramble+0x38c>)
 80019ba:	4618      	mov	r0, r3
 80019bc:	f7fe fbc8 	bl	8000150 <__aeabi_fmul>
 80019c0:	4603      	mov	r3, r0
 80019c2:	4618      	mov	r0, r3
 80019c4:	f7ff f808 	bl	80009d8 <__aeabi_f2iz>
 80019c8:	4603      	mov	r3, r0
 80019ca:	4a17      	ldr	r2, [pc, #92]	; (8001a28 <pedestrian_scramble+0x380>)
 80019cc:	6013      	str	r3, [r2, #0]
 80019ce:	4b16      	ldr	r3, [pc, #88]	; (8001a28 <pedestrian_scramble+0x380>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	4618      	mov	r0, r3
 80019d4:	f000 fe86 	bl	80026e4 <HAL_Delay>
 80019d8:	e004      	b.n	80019e4 <pedestrian_scramble+0x33c>
				else HAL_Delay(delay);
 80019da:	4b13      	ldr	r3, [pc, #76]	; (8001a28 <pedestrian_scramble+0x380>)
 80019dc:	681b      	ldr	r3, [r3, #0]
 80019de:	4618      	mov	r0, r3
 80019e0:	f000 fe80 	bl	80026e4 <HAL_Delay>
			}
			trigger_pedestrian_func = 1;
 80019e4:	4b14      	ldr	r3, [pc, #80]	; (8001a38 <pedestrian_scramble+0x390>)
 80019e6:	2201      	movs	r2, #1
 80019e8:	601a      	str	r2, [r3, #0]
			if (trigger_pedestrian_func) {
				pedestrian_wanna_go = 0;
				trigger_pedestrian_func = 0;
			}
		}
}
 80019ea:	e01b      	b.n	8001a24 <pedestrian_scramble+0x37c>
			__HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1, 0);
 80019ec:	4b13      	ldr	r3, [pc, #76]	; (8001a3c <pedestrian_scramble+0x394>)
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	2200      	movs	r2, #0
 80019f2:	635a      	str	r2, [r3, #52]	; 0x34
			delay = TIME_UNIT;
 80019f4:	4b0c      	ldr	r3, [pc, #48]	; (8001a28 <pedestrian_scramble+0x380>)
 80019f6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80019fa:	601a      	str	r2, [r3, #0]
			FREQ = 10;
 80019fc:	4b10      	ldr	r3, [pc, #64]	; (8001a40 <pedestrian_scramble+0x398>)
 80019fe:	220a      	movs	r2, #10
 8001a00:	601a      	str	r2, [r3, #0]
			extra_step = 1;
 8001a02:	4b0a      	ldr	r3, [pc, #40]	; (8001a2c <pedestrian_scramble+0x384>)
 8001a04:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8001a08:	601a      	str	r2, [r3, #0]
			flag_button = 0;
 8001a0a:	4b0e      	ldr	r3, [pc, #56]	; (8001a44 <pedestrian_scramble+0x39c>)
 8001a0c:	2200      	movs	r2, #0
 8001a0e:	601a      	str	r2, [r3, #0]
			if (trigger_pedestrian_func) {
 8001a10:	4b09      	ldr	r3, [pc, #36]	; (8001a38 <pedestrian_scramble+0x390>)
 8001a12:	681b      	ldr	r3, [r3, #0]
 8001a14:	2b00      	cmp	r3, #0
 8001a16:	d005      	beq.n	8001a24 <pedestrian_scramble+0x37c>
				pedestrian_wanna_go = 0;
 8001a18:	4b0b      	ldr	r3, [pc, #44]	; (8001a48 <pedestrian_scramble+0x3a0>)
 8001a1a:	2200      	movs	r2, #0
 8001a1c:	601a      	str	r2, [r3, #0]
				trigger_pedestrian_func = 0;
 8001a1e:	4b06      	ldr	r3, [pc, #24]	; (8001a38 <pedestrian_scramble+0x390>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	601a      	str	r2, [r3, #0]
}
 8001a24:	bf00      	nop
 8001a26:	bd98      	pop	{r3, r4, r7, pc}
 8001a28:	20000038 	.word	0x20000038
 8001a2c:	20000044 	.word	0x20000044
 8001a30:	41200000 	.word	0x41200000
 8001a34:	41a00000 	.word	0x41a00000
 8001a38:	20000130 	.word	0x20000130
 8001a3c:	200001b0 	.word	0x200001b0
 8001a40:	2000003c 	.word	0x2000003c
 8001a44:	2000012c 	.word	0x2000012c
 8001a48:	20000134 	.word	0x20000134

08001a4c <SCH_Init>:
 8001a4c:	b580      	push	{r7, lr}
 8001a4e:	b082      	sub	sp, #8
 8001a50:	af00      	add	r7, sp, #0
 8001a52:	2300      	movs	r3, #0
 8001a54:	607b      	str	r3, [r7, #4]
 8001a56:	e007      	b.n	8001a68 <SCH_Init+0x1c>
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	b29b      	uxth	r3, r3
 8001a5c:	4618      	mov	r0, r3
 8001a5e:	f000 f97f 	bl	8001d60 <SCH_Delete_Task>
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	3301      	adds	r3, #1
 8001a66:	607b      	str	r3, [r7, #4]
 8001a68:	687b      	ldr	r3, [r7, #4]
 8001a6a:	2b27      	cmp	r3, #39	; 0x27
 8001a6c:	ddf4      	ble.n	8001a58 <SCH_Init+0xc>
 8001a6e:	4b03      	ldr	r3, [pc, #12]	; (8001a7c <SCH_Init+0x30>)
 8001a70:	2200      	movs	r2, #0
 8001a72:	601a      	str	r2, [r3, #0]
 8001a74:	bf00      	nop
 8001a76:	3708      	adds	r7, #8
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	bd80      	pop	{r7, pc}
 8001a7c:	2000013c 	.word	0x2000013c

08001a80 <SCH_Add_Task>:
 8001a80:	b480      	push	{r7}
 8001a82:	b087      	sub	sp, #28
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	60f8      	str	r0, [r7, #12]
 8001a88:	60b9      	str	r1, [r7, #8]
 8001a8a:	607a      	str	r2, [r7, #4]
 8001a8c:	4b2c      	ldr	r3, [pc, #176]	; (8001b40 <SCH_Add_Task+0xc0>)
 8001a8e:	681b      	ldr	r3, [r3, #0]
 8001a90:	2b27      	cmp	r3, #39	; 0x27
 8001a92:	dc49      	bgt.n	8001b28 <SCH_Add_Task+0xa8>
 8001a94:	4b2a      	ldr	r3, [pc, #168]	; (8001b40 <SCH_Add_Task+0xc0>)
 8001a96:	681a      	ldr	r2, [r3, #0]
 8001a98:	492a      	ldr	r1, [pc, #168]	; (8001b44 <SCH_Add_Task+0xc4>)
 8001a9a:	4613      	mov	r3, r2
 8001a9c:	009b      	lsls	r3, r3, #2
 8001a9e:	4413      	add	r3, r2
 8001aa0:	009b      	lsls	r3, r3, #2
 8001aa2:	440b      	add	r3, r1
 8001aa4:	68fa      	ldr	r2, [r7, #12]
 8001aa6:	601a      	str	r2, [r3, #0]
 8001aa8:	4b27      	ldr	r3, [pc, #156]	; (8001b48 <SCH_Add_Task+0xc8>)
 8001aaa:	681b      	ldr	r3, [r3, #0]
 8001aac:	4619      	mov	r1, r3
 8001aae:	4b24      	ldr	r3, [pc, #144]	; (8001b40 <SCH_Add_Task+0xc0>)
 8001ab0:	681a      	ldr	r2, [r3, #0]
 8001ab2:	68bb      	ldr	r3, [r7, #8]
 8001ab4:	fbb3 f1f1 	udiv	r1, r3, r1
 8001ab8:	4822      	ldr	r0, [pc, #136]	; (8001b44 <SCH_Add_Task+0xc4>)
 8001aba:	4613      	mov	r3, r2
 8001abc:	009b      	lsls	r3, r3, #2
 8001abe:	4413      	add	r3, r2
 8001ac0:	009b      	lsls	r3, r3, #2
 8001ac2:	4403      	add	r3, r0
 8001ac4:	3304      	adds	r3, #4
 8001ac6:	6019      	str	r1, [r3, #0]
 8001ac8:	4b1f      	ldr	r3, [pc, #124]	; (8001b48 <SCH_Add_Task+0xc8>)
 8001aca:	681b      	ldr	r3, [r3, #0]
 8001acc:	4619      	mov	r1, r3
 8001ace:	4b1c      	ldr	r3, [pc, #112]	; (8001b40 <SCH_Add_Task+0xc0>)
 8001ad0:	681a      	ldr	r2, [r3, #0]
 8001ad2:	687b      	ldr	r3, [r7, #4]
 8001ad4:	fbb3 f1f1 	udiv	r1, r3, r1
 8001ad8:	481a      	ldr	r0, [pc, #104]	; (8001b44 <SCH_Add_Task+0xc4>)
 8001ada:	4613      	mov	r3, r2
 8001adc:	009b      	lsls	r3, r3, #2
 8001ade:	4413      	add	r3, r2
 8001ae0:	009b      	lsls	r3, r3, #2
 8001ae2:	4403      	add	r3, r0
 8001ae4:	3308      	adds	r3, #8
 8001ae6:	6019      	str	r1, [r3, #0]
 8001ae8:	4b15      	ldr	r3, [pc, #84]	; (8001b40 <SCH_Add_Task+0xc0>)
 8001aea:	681a      	ldr	r2, [r3, #0]
 8001aec:	4915      	ldr	r1, [pc, #84]	; (8001b44 <SCH_Add_Task+0xc4>)
 8001aee:	4613      	mov	r3, r2
 8001af0:	009b      	lsls	r3, r3, #2
 8001af2:	4413      	add	r3, r2
 8001af4:	009b      	lsls	r3, r3, #2
 8001af6:	440b      	add	r3, r1
 8001af8:	330c      	adds	r3, #12
 8001afa:	2200      	movs	r2, #0
 8001afc:	701a      	strb	r2, [r3, #0]
 8001afe:	4b10      	ldr	r3, [pc, #64]	; (8001b40 <SCH_Add_Task+0xc0>)
 8001b00:	6819      	ldr	r1, [r3, #0]
 8001b02:	4b0f      	ldr	r3, [pc, #60]	; (8001b40 <SCH_Add_Task+0xc0>)
 8001b04:	681a      	ldr	r2, [r3, #0]
 8001b06:	4608      	mov	r0, r1
 8001b08:	490e      	ldr	r1, [pc, #56]	; (8001b44 <SCH_Add_Task+0xc4>)
 8001b0a:	4613      	mov	r3, r2
 8001b0c:	009b      	lsls	r3, r3, #2
 8001b0e:	4413      	add	r3, r2
 8001b10:	009b      	lsls	r3, r3, #2
 8001b12:	440b      	add	r3, r1
 8001b14:	3310      	adds	r3, #16
 8001b16:	6018      	str	r0, [r3, #0]
 8001b18:	4b09      	ldr	r3, [pc, #36]	; (8001b40 <SCH_Add_Task+0xc0>)
 8001b1a:	681b      	ldr	r3, [r3, #0]
 8001b1c:	3301      	adds	r3, #1
 8001b1e:	4a08      	ldr	r2, [pc, #32]	; (8001b40 <SCH_Add_Task+0xc0>)
 8001b20:	6013      	str	r3, [r2, #0]
 8001b22:	2303      	movs	r3, #3
 8001b24:	75fb      	strb	r3, [r7, #23]
 8001b26:	e004      	b.n	8001b32 <SCH_Add_Task+0xb2>
 8001b28:	4b08      	ldr	r3, [pc, #32]	; (8001b4c <SCH_Add_Task+0xcc>)
 8001b2a:	2200      	movs	r2, #0
 8001b2c:	601a      	str	r2, [r3, #0]
 8001b2e:	2302      	movs	r3, #2
 8001b30:	75fb      	strb	r3, [r7, #23]
 8001b32:	7dfb      	ldrb	r3, [r7, #23]
 8001b34:	4618      	mov	r0, r3
 8001b36:	371c      	adds	r7, #28
 8001b38:	46bd      	mov	sp, r7
 8001b3a:	bc80      	pop	{r7}
 8001b3c:	4770      	bx	lr
 8001b3e:	bf00      	nop
 8001b40:	20000138 	.word	0x20000138
 8001b44:	20000284 	.word	0x20000284
 8001b48:	20000048 	.word	0x20000048
 8001b4c:	2000013c 	.word	0x2000013c

08001b50 <SCH_Dispatch_Tasks>:
 8001b50:	b580      	push	{r7, lr}
 8001b52:	b082      	sub	sp, #8
 8001b54:	af00      	add	r7, sp, #0
 8001b56:	4b22      	ldr	r3, [pc, #136]	; (8001be0 <SCH_Dispatch_Tasks+0x90>)
 8001b58:	681b      	ldr	r3, [r3, #0]
 8001b5a:	607b      	str	r3, [r7, #4]
 8001b5c:	4921      	ldr	r1, [pc, #132]	; (8001be4 <SCH_Dispatch_Tasks+0x94>)
 8001b5e:	687a      	ldr	r2, [r7, #4]
 8001b60:	4613      	mov	r3, r2
 8001b62:	009b      	lsls	r3, r3, #2
 8001b64:	4413      	add	r3, r2
 8001b66:	009b      	lsls	r3, r3, #2
 8001b68:	440b      	add	r3, r1
 8001b6a:	330c      	adds	r3, #12
 8001b6c:	781b      	ldrb	r3, [r3, #0]
 8001b6e:	2b00      	cmp	r3, #0
 8001b70:	d02f      	beq.n	8001bd2 <SCH_Dispatch_Tasks+0x82>
 8001b72:	f000 f957 	bl	8001e24 <update_other_tasks>
 8001b76:	491b      	ldr	r1, [pc, #108]	; (8001be4 <SCH_Dispatch_Tasks+0x94>)
 8001b78:	687a      	ldr	r2, [r7, #4]
 8001b7a:	4613      	mov	r3, r2
 8001b7c:	009b      	lsls	r3, r3, #2
 8001b7e:	4413      	add	r3, r2
 8001b80:	009b      	lsls	r3, r3, #2
 8001b82:	440b      	add	r3, r1
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	4798      	blx	r3
 8001b88:	4916      	ldr	r1, [pc, #88]	; (8001be4 <SCH_Dispatch_Tasks+0x94>)
 8001b8a:	687a      	ldr	r2, [r7, #4]
 8001b8c:	4613      	mov	r3, r2
 8001b8e:	009b      	lsls	r3, r3, #2
 8001b90:	4413      	add	r3, r2
 8001b92:	009b      	lsls	r3, r3, #2
 8001b94:	440b      	add	r3, r1
 8001b96:	330c      	adds	r3, #12
 8001b98:	781b      	ldrb	r3, [r3, #0]
 8001b9a:	3b01      	subs	r3, #1
 8001b9c:	b2d8      	uxtb	r0, r3
 8001b9e:	4911      	ldr	r1, [pc, #68]	; (8001be4 <SCH_Dispatch_Tasks+0x94>)
 8001ba0:	687a      	ldr	r2, [r7, #4]
 8001ba2:	4613      	mov	r3, r2
 8001ba4:	009b      	lsls	r3, r3, #2
 8001ba6:	4413      	add	r3, r2
 8001ba8:	009b      	lsls	r3, r3, #2
 8001baa:	440b      	add	r3, r1
 8001bac:	330c      	adds	r3, #12
 8001bae:	4602      	mov	r2, r0
 8001bb0:	701a      	strb	r2, [r3, #0]
 8001bb2:	490c      	ldr	r1, [pc, #48]	; (8001be4 <SCH_Dispatch_Tasks+0x94>)
 8001bb4:	687a      	ldr	r2, [r7, #4]
 8001bb6:	4613      	mov	r3, r2
 8001bb8:	009b      	lsls	r3, r3, #2
 8001bba:	4413      	add	r3, r2
 8001bbc:	009b      	lsls	r3, r3, #2
 8001bbe:	440b      	add	r3, r1
 8001bc0:	3308      	adds	r3, #8
 8001bc2:	681b      	ldr	r3, [r3, #0]
 8001bc4:	2b00      	cmp	r3, #0
 8001bc6:	d104      	bne.n	8001bd2 <SCH_Dispatch_Tasks+0x82>
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	b29b      	uxth	r3, r3
 8001bcc:	4618      	mov	r0, r3
 8001bce:	f000 f8c7 	bl	8001d60 <SCH_Delete_Task>
 8001bd2:	f000 f9a9 	bl	8001f28 <SCH_Report_Status>
 8001bd6:	bf00      	nop
 8001bd8:	3708      	adds	r7, #8
 8001bda:	46bd      	mov	sp, r7
 8001bdc:	bd80      	pop	{r7, pc}
 8001bde:	bf00      	nop
 8001be0:	20000140 	.word	0x20000140
 8001be4:	20000284 	.word	0x20000284

08001be8 <SCH_Update>:
 8001be8:	b480      	push	{r7}
 8001bea:	af00      	add	r7, sp, #0
 8001bec:	4b27      	ldr	r3, [pc, #156]	; (8001c8c <SCH_Update+0xa4>)
 8001bee:	681a      	ldr	r2, [r3, #0]
 8001bf0:	4927      	ldr	r1, [pc, #156]	; (8001c90 <SCH_Update+0xa8>)
 8001bf2:	4613      	mov	r3, r2
 8001bf4:	009b      	lsls	r3, r3, #2
 8001bf6:	4413      	add	r3, r2
 8001bf8:	009b      	lsls	r3, r3, #2
 8001bfa:	440b      	add	r3, r1
 8001bfc:	3304      	adds	r3, #4
 8001bfe:	681b      	ldr	r3, [r3, #0]
 8001c00:	2b00      	cmp	r3, #0
 8001c02:	d013      	beq.n	8001c2c <SCH_Update+0x44>
 8001c04:	4b21      	ldr	r3, [pc, #132]	; (8001c8c <SCH_Update+0xa4>)
 8001c06:	681a      	ldr	r2, [r3, #0]
 8001c08:	4921      	ldr	r1, [pc, #132]	; (8001c90 <SCH_Update+0xa8>)
 8001c0a:	4613      	mov	r3, r2
 8001c0c:	009b      	lsls	r3, r3, #2
 8001c0e:	4413      	add	r3, r2
 8001c10:	009b      	lsls	r3, r3, #2
 8001c12:	440b      	add	r3, r1
 8001c14:	3304      	adds	r3, #4
 8001c16:	681b      	ldr	r3, [r3, #0]
 8001c18:	1e59      	subs	r1, r3, #1
 8001c1a:	481d      	ldr	r0, [pc, #116]	; (8001c90 <SCH_Update+0xa8>)
 8001c1c:	4613      	mov	r3, r2
 8001c1e:	009b      	lsls	r3, r3, #2
 8001c20:	4413      	add	r3, r2
 8001c22:	009b      	lsls	r3, r3, #2
 8001c24:	4403      	add	r3, r0
 8001c26:	3304      	adds	r3, #4
 8001c28:	6019      	str	r1, [r3, #0]
 8001c2a:	e02a      	b.n	8001c82 <SCH_Update+0x9a>
 8001c2c:	4b17      	ldr	r3, [pc, #92]	; (8001c8c <SCH_Update+0xa4>)
 8001c2e:	6819      	ldr	r1, [r3, #0]
 8001c30:	4b16      	ldr	r3, [pc, #88]	; (8001c8c <SCH_Update+0xa4>)
 8001c32:	681a      	ldr	r2, [r3, #0]
 8001c34:	4816      	ldr	r0, [pc, #88]	; (8001c90 <SCH_Update+0xa8>)
 8001c36:	460b      	mov	r3, r1
 8001c38:	009b      	lsls	r3, r3, #2
 8001c3a:	440b      	add	r3, r1
 8001c3c:	009b      	lsls	r3, r3, #2
 8001c3e:	4403      	add	r3, r0
 8001c40:	3308      	adds	r3, #8
 8001c42:	6819      	ldr	r1, [r3, #0]
 8001c44:	4812      	ldr	r0, [pc, #72]	; (8001c90 <SCH_Update+0xa8>)
 8001c46:	4613      	mov	r3, r2
 8001c48:	009b      	lsls	r3, r3, #2
 8001c4a:	4413      	add	r3, r2
 8001c4c:	009b      	lsls	r3, r3, #2
 8001c4e:	4403      	add	r3, r0
 8001c50:	3304      	adds	r3, #4
 8001c52:	6019      	str	r1, [r3, #0]
 8001c54:	4b0d      	ldr	r3, [pc, #52]	; (8001c8c <SCH_Update+0xa4>)
 8001c56:	681a      	ldr	r2, [r3, #0]
 8001c58:	490d      	ldr	r1, [pc, #52]	; (8001c90 <SCH_Update+0xa8>)
 8001c5a:	4613      	mov	r3, r2
 8001c5c:	009b      	lsls	r3, r3, #2
 8001c5e:	4413      	add	r3, r2
 8001c60:	009b      	lsls	r3, r3, #2
 8001c62:	440b      	add	r3, r1
 8001c64:	330c      	adds	r3, #12
 8001c66:	781b      	ldrb	r3, [r3, #0]
 8001c68:	4a08      	ldr	r2, [pc, #32]	; (8001c8c <SCH_Update+0xa4>)
 8001c6a:	6812      	ldr	r2, [r2, #0]
 8001c6c:	3301      	adds	r3, #1
 8001c6e:	b2d8      	uxtb	r0, r3
 8001c70:	4907      	ldr	r1, [pc, #28]	; (8001c90 <SCH_Update+0xa8>)
 8001c72:	4613      	mov	r3, r2
 8001c74:	009b      	lsls	r3, r3, #2
 8001c76:	4413      	add	r3, r2
 8001c78:	009b      	lsls	r3, r3, #2
 8001c7a:	440b      	add	r3, r1
 8001c7c:	330c      	adds	r3, #12
 8001c7e:	4602      	mov	r2, r0
 8001c80:	701a      	strb	r2, [r3, #0]
 8001c82:	bf00      	nop
 8001c84:	46bd      	mov	sp, r7
 8001c86:	bc80      	pop	{r7}
 8001c88:	4770      	bx	lr
 8001c8a:	bf00      	nop
 8001c8c:	20000140 	.word	0x20000140
 8001c90:	20000284 	.word	0x20000284

08001c94 <Shift_Task_To_Left>:
 8001c94:	b480      	push	{r7}
 8001c96:	b083      	sub	sp, #12
 8001c98:	af00      	add	r7, sp, #0
 8001c9a:	6078      	str	r0, [r7, #4]
 8001c9c:	6039      	str	r1, [r7, #0]
 8001c9e:	492f      	ldr	r1, [pc, #188]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001ca0:	683a      	ldr	r2, [r7, #0]
 8001ca2:	4613      	mov	r3, r2
 8001ca4:	009b      	lsls	r3, r3, #2
 8001ca6:	4413      	add	r3, r2
 8001ca8:	009b      	lsls	r3, r3, #2
 8001caa:	440b      	add	r3, r1
 8001cac:	6819      	ldr	r1, [r3, #0]
 8001cae:	482b      	ldr	r0, [pc, #172]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001cb0:	687a      	ldr	r2, [r7, #4]
 8001cb2:	4613      	mov	r3, r2
 8001cb4:	009b      	lsls	r3, r3, #2
 8001cb6:	4413      	add	r3, r2
 8001cb8:	009b      	lsls	r3, r3, #2
 8001cba:	4403      	add	r3, r0
 8001cbc:	6019      	str	r1, [r3, #0]
 8001cbe:	4927      	ldr	r1, [pc, #156]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001cc0:	683a      	ldr	r2, [r7, #0]
 8001cc2:	4613      	mov	r3, r2
 8001cc4:	009b      	lsls	r3, r3, #2
 8001cc6:	4413      	add	r3, r2
 8001cc8:	009b      	lsls	r3, r3, #2
 8001cca:	440b      	add	r3, r1
 8001ccc:	3304      	adds	r3, #4
 8001cce:	6819      	ldr	r1, [r3, #0]
 8001cd0:	4822      	ldr	r0, [pc, #136]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001cd2:	687a      	ldr	r2, [r7, #4]
 8001cd4:	4613      	mov	r3, r2
 8001cd6:	009b      	lsls	r3, r3, #2
 8001cd8:	4413      	add	r3, r2
 8001cda:	009b      	lsls	r3, r3, #2
 8001cdc:	4403      	add	r3, r0
 8001cde:	3304      	adds	r3, #4
 8001ce0:	6019      	str	r1, [r3, #0]
 8001ce2:	491e      	ldr	r1, [pc, #120]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001ce4:	683a      	ldr	r2, [r7, #0]
 8001ce6:	4613      	mov	r3, r2
 8001ce8:	009b      	lsls	r3, r3, #2
 8001cea:	4413      	add	r3, r2
 8001cec:	009b      	lsls	r3, r3, #2
 8001cee:	440b      	add	r3, r1
 8001cf0:	3308      	adds	r3, #8
 8001cf2:	6819      	ldr	r1, [r3, #0]
 8001cf4:	4819      	ldr	r0, [pc, #100]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001cf6:	687a      	ldr	r2, [r7, #4]
 8001cf8:	4613      	mov	r3, r2
 8001cfa:	009b      	lsls	r3, r3, #2
 8001cfc:	4413      	add	r3, r2
 8001cfe:	009b      	lsls	r3, r3, #2
 8001d00:	4403      	add	r3, r0
 8001d02:	3308      	adds	r3, #8
 8001d04:	6019      	str	r1, [r3, #0]
 8001d06:	4915      	ldr	r1, [pc, #84]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001d08:	683a      	ldr	r2, [r7, #0]
 8001d0a:	4613      	mov	r3, r2
 8001d0c:	009b      	lsls	r3, r3, #2
 8001d0e:	4413      	add	r3, r2
 8001d10:	009b      	lsls	r3, r3, #2
 8001d12:	440b      	add	r3, r1
 8001d14:	330c      	adds	r3, #12
 8001d16:	7818      	ldrb	r0, [r3, #0]
 8001d18:	4910      	ldr	r1, [pc, #64]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001d1a:	687a      	ldr	r2, [r7, #4]
 8001d1c:	4613      	mov	r3, r2
 8001d1e:	009b      	lsls	r3, r3, #2
 8001d20:	4413      	add	r3, r2
 8001d22:	009b      	lsls	r3, r3, #2
 8001d24:	440b      	add	r3, r1
 8001d26:	330c      	adds	r3, #12
 8001d28:	4602      	mov	r2, r0
 8001d2a:	701a      	strb	r2, [r3, #0]
 8001d2c:	490b      	ldr	r1, [pc, #44]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001d2e:	683a      	ldr	r2, [r7, #0]
 8001d30:	4613      	mov	r3, r2
 8001d32:	009b      	lsls	r3, r3, #2
 8001d34:	4413      	add	r3, r2
 8001d36:	009b      	lsls	r3, r3, #2
 8001d38:	440b      	add	r3, r1
 8001d3a:	3310      	adds	r3, #16
 8001d3c:	6819      	ldr	r1, [r3, #0]
 8001d3e:	4807      	ldr	r0, [pc, #28]	; (8001d5c <Shift_Task_To_Left+0xc8>)
 8001d40:	687a      	ldr	r2, [r7, #4]
 8001d42:	4613      	mov	r3, r2
 8001d44:	009b      	lsls	r3, r3, #2
 8001d46:	4413      	add	r3, r2
 8001d48:	009b      	lsls	r3, r3, #2
 8001d4a:	4403      	add	r3, r0
 8001d4c:	3310      	adds	r3, #16
 8001d4e:	6019      	str	r1, [r3, #0]
 8001d50:	bf00      	nop
 8001d52:	370c      	adds	r7, #12
 8001d54:	46bd      	mov	sp, r7
 8001d56:	bc80      	pop	{r7}
 8001d58:	4770      	bx	lr
 8001d5a:	bf00      	nop
 8001d5c:	20000284 	.word	0x20000284

08001d60 <SCH_Delete_Task>:
 8001d60:	b580      	push	{r7, lr}
 8001d62:	b084      	sub	sp, #16
 8001d64:	af00      	add	r7, sp, #0
 8001d66:	4603      	mov	r3, r0
 8001d68:	80fb      	strh	r3, [r7, #6]
 8001d6a:	4b2b      	ldr	r3, [pc, #172]	; (8001e18 <SCH_Delete_Task+0xb8>)
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	2b00      	cmp	r3, #0
 8001d70:	db03      	blt.n	8001d7a <SCH_Delete_Task+0x1a>
 8001d72:	4b29      	ldr	r3, [pc, #164]	; (8001e18 <SCH_Delete_Task+0xb8>)
 8001d74:	681b      	ldr	r3, [r3, #0]
 8001d76:	2b27      	cmp	r3, #39	; 0x27
 8001d78:	dd06      	ble.n	8001d88 <SCH_Delete_Task+0x28>
 8001d7a:	4b28      	ldr	r3, [pc, #160]	; (8001e1c <SCH_Delete_Task+0xbc>)
 8001d7c:	2201      	movs	r2, #1
 8001d7e:	601a      	str	r2, [r3, #0]
 8001d80:	2302      	movs	r3, #2
 8001d82:	72fb      	strb	r3, [r7, #11]
 8001d84:	7afb      	ldrb	r3, [r7, #11]
 8001d86:	e043      	b.n	8001e10 <SCH_Delete_Task+0xb0>
 8001d88:	2303      	movs	r3, #3
 8001d8a:	72fb      	strb	r3, [r7, #11]
 8001d8c:	88fb      	ldrh	r3, [r7, #6]
 8001d8e:	60fb      	str	r3, [r7, #12]
 8001d90:	e008      	b.n	8001da4 <SCH_Delete_Task+0x44>
 8001d92:	68fb      	ldr	r3, [r7, #12]
 8001d94:	3301      	adds	r3, #1
 8001d96:	4619      	mov	r1, r3
 8001d98:	68f8      	ldr	r0, [r7, #12]
 8001d9a:	f7ff ff7b 	bl	8001c94 <Shift_Task_To_Left>
 8001d9e:	68fb      	ldr	r3, [r7, #12]
 8001da0:	3301      	adds	r3, #1
 8001da2:	60fb      	str	r3, [r7, #12]
 8001da4:	4b1c      	ldr	r3, [pc, #112]	; (8001e18 <SCH_Delete_Task+0xb8>)
 8001da6:	681b      	ldr	r3, [r3, #0]
 8001da8:	68fa      	ldr	r2, [r7, #12]
 8001daa:	429a      	cmp	r2, r3
 8001dac:	dbf1      	blt.n	8001d92 <SCH_Delete_Task+0x32>
 8001dae:	4b1a      	ldr	r3, [pc, #104]	; (8001e18 <SCH_Delete_Task+0xb8>)
 8001db0:	681a      	ldr	r2, [r3, #0]
 8001db2:	491b      	ldr	r1, [pc, #108]	; (8001e20 <SCH_Delete_Task+0xc0>)
 8001db4:	4613      	mov	r3, r2
 8001db6:	009b      	lsls	r3, r3, #2
 8001db8:	4413      	add	r3, r2
 8001dba:	009b      	lsls	r3, r3, #2
 8001dbc:	440b      	add	r3, r1
 8001dbe:	2200      	movs	r2, #0
 8001dc0:	601a      	str	r2, [r3, #0]
 8001dc2:	4b15      	ldr	r3, [pc, #84]	; (8001e18 <SCH_Delete_Task+0xb8>)
 8001dc4:	681a      	ldr	r2, [r3, #0]
 8001dc6:	4916      	ldr	r1, [pc, #88]	; (8001e20 <SCH_Delete_Task+0xc0>)
 8001dc8:	4613      	mov	r3, r2
 8001dca:	009b      	lsls	r3, r3, #2
 8001dcc:	4413      	add	r3, r2
 8001dce:	009b      	lsls	r3, r3, #2
 8001dd0:	440b      	add	r3, r1
 8001dd2:	3304      	adds	r3, #4
 8001dd4:	2200      	movs	r2, #0
 8001dd6:	601a      	str	r2, [r3, #0]
 8001dd8:	4b0f      	ldr	r3, [pc, #60]	; (8001e18 <SCH_Delete_Task+0xb8>)
 8001dda:	681a      	ldr	r2, [r3, #0]
 8001ddc:	4910      	ldr	r1, [pc, #64]	; (8001e20 <SCH_Delete_Task+0xc0>)
 8001dde:	4613      	mov	r3, r2
 8001de0:	009b      	lsls	r3, r3, #2
 8001de2:	4413      	add	r3, r2
 8001de4:	009b      	lsls	r3, r3, #2
 8001de6:	440b      	add	r3, r1
 8001de8:	3308      	adds	r3, #8
 8001dea:	2200      	movs	r2, #0
 8001dec:	601a      	str	r2, [r3, #0]
 8001dee:	4b0a      	ldr	r3, [pc, #40]	; (8001e18 <SCH_Delete_Task+0xb8>)
 8001df0:	681a      	ldr	r2, [r3, #0]
 8001df2:	490b      	ldr	r1, [pc, #44]	; (8001e20 <SCH_Delete_Task+0xc0>)
 8001df4:	4613      	mov	r3, r2
 8001df6:	009b      	lsls	r3, r3, #2
 8001df8:	4413      	add	r3, r2
 8001dfa:	009b      	lsls	r3, r3, #2
 8001dfc:	440b      	add	r3, r1
 8001dfe:	330c      	adds	r3, #12
 8001e00:	2200      	movs	r2, #0
 8001e02:	701a      	strb	r2, [r3, #0]
 8001e04:	4b04      	ldr	r3, [pc, #16]	; (8001e18 <SCH_Delete_Task+0xb8>)
 8001e06:	681b      	ldr	r3, [r3, #0]
 8001e08:	3b01      	subs	r3, #1
 8001e0a:	4a03      	ldr	r2, [pc, #12]	; (8001e18 <SCH_Delete_Task+0xb8>)
 8001e0c:	6013      	str	r3, [r2, #0]
 8001e0e:	7afb      	ldrb	r3, [r7, #11]
 8001e10:	4618      	mov	r0, r3
 8001e12:	3710      	adds	r7, #16
 8001e14:	46bd      	mov	sp, r7
 8001e16:	bd80      	pop	{r7, pc}
 8001e18:	20000138 	.word	0x20000138
 8001e1c:	2000013c 	.word	0x2000013c
 8001e20:	20000284 	.word	0x20000284

08001e24 <update_other_tasks>:
 8001e24:	b580      	push	{r7, lr}
 8001e26:	b082      	sub	sp, #8
 8001e28:	af00      	add	r7, sp, #0
 8001e2a:	2300      	movs	r3, #0
 8001e2c:	607b      	str	r3, [r7, #4]
 8001e2e:	e01e      	b.n	8001e6e <update_other_tasks+0x4a>
 8001e30:	4b14      	ldr	r3, [pc, #80]	; (8001e84 <update_other_tasks+0x60>)
 8001e32:	681b      	ldr	r3, [r3, #0]
 8001e34:	687a      	ldr	r2, [r7, #4]
 8001e36:	429a      	cmp	r2, r3
 8001e38:	d015      	beq.n	8001e66 <update_other_tasks+0x42>
 8001e3a:	4913      	ldr	r1, [pc, #76]	; (8001e88 <update_other_tasks+0x64>)
 8001e3c:	687a      	ldr	r2, [r7, #4]
 8001e3e:	4613      	mov	r3, r2
 8001e40:	009b      	lsls	r3, r3, #2
 8001e42:	4413      	add	r3, r2
 8001e44:	009b      	lsls	r3, r3, #2
 8001e46:	440b      	add	r3, r1
 8001e48:	3304      	adds	r3, #4
 8001e4a:	681b      	ldr	r3, [r3, #0]
 8001e4c:	4a0f      	ldr	r2, [pc, #60]	; (8001e8c <update_other_tasks+0x68>)
 8001e4e:	6812      	ldr	r2, [r2, #0]
 8001e50:	1a99      	subs	r1, r3, r2
 8001e52:	480d      	ldr	r0, [pc, #52]	; (8001e88 <update_other_tasks+0x64>)
 8001e54:	687a      	ldr	r2, [r7, #4]
 8001e56:	4613      	mov	r3, r2
 8001e58:	009b      	lsls	r3, r3, #2
 8001e5a:	4413      	add	r3, r2
 8001e5c:	009b      	lsls	r3, r3, #2
 8001e5e:	4403      	add	r3, r0
 8001e60:	3304      	adds	r3, #4
 8001e62:	6019      	str	r1, [r3, #0]
 8001e64:	e000      	b.n	8001e68 <update_other_tasks+0x44>
 8001e66:	bf00      	nop
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	3301      	adds	r3, #1
 8001e6c:	607b      	str	r3, [r7, #4]
 8001e6e:	4b08      	ldr	r3, [pc, #32]	; (8001e90 <update_other_tasks+0x6c>)
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	687a      	ldr	r2, [r7, #4]
 8001e74:	429a      	cmp	r2, r3
 8001e76:	dbdb      	blt.n	8001e30 <update_other_tasks+0xc>
 8001e78:	f000 f80c 	bl	8001e94 <find_new_min_task>
 8001e7c:	bf00      	nop
 8001e7e:	3708      	adds	r7, #8
 8001e80:	46bd      	mov	sp, r7
 8001e82:	bd80      	pop	{r7, pc}
 8001e84:	20000140 	.word	0x20000140
 8001e88:	20000284 	.word	0x20000284
 8001e8c:	20000144 	.word	0x20000144
 8001e90:	20000138 	.word	0x20000138

08001e94 <find_new_min_task>:
 8001e94:	b480      	push	{r7}
 8001e96:	b083      	sub	sp, #12
 8001e98:	af00      	add	r7, sp, #0
 8001e9a:	4b1f      	ldr	r3, [pc, #124]	; (8001f18 <find_new_min_task+0x84>)
 8001e9c:	2200      	movs	r2, #0
 8001e9e:	601a      	str	r2, [r3, #0]
 8001ea0:	4b1d      	ldr	r3, [pc, #116]	; (8001f18 <find_new_min_task+0x84>)
 8001ea2:	681a      	ldr	r2, [r3, #0]
 8001ea4:	491d      	ldr	r1, [pc, #116]	; (8001f1c <find_new_min_task+0x88>)
 8001ea6:	4613      	mov	r3, r2
 8001ea8:	009b      	lsls	r3, r3, #2
 8001eaa:	4413      	add	r3, r2
 8001eac:	009b      	lsls	r3, r3, #2
 8001eae:	440b      	add	r3, r1
 8001eb0:	3304      	adds	r3, #4
 8001eb2:	681b      	ldr	r3, [r3, #0]
 8001eb4:	461a      	mov	r2, r3
 8001eb6:	4b1a      	ldr	r3, [pc, #104]	; (8001f20 <find_new_min_task+0x8c>)
 8001eb8:	601a      	str	r2, [r3, #0]
 8001eba:	4b17      	ldr	r3, [pc, #92]	; (8001f18 <find_new_min_task+0x84>)
 8001ebc:	681b      	ldr	r3, [r3, #0]
 8001ebe:	3301      	adds	r3, #1
 8001ec0:	607b      	str	r3, [r7, #4]
 8001ec2:	e01e      	b.n	8001f02 <find_new_min_task+0x6e>
 8001ec4:	4915      	ldr	r1, [pc, #84]	; (8001f1c <find_new_min_task+0x88>)
 8001ec6:	687a      	ldr	r2, [r7, #4]
 8001ec8:	4613      	mov	r3, r2
 8001eca:	009b      	lsls	r3, r3, #2
 8001ecc:	4413      	add	r3, r2
 8001ece:	009b      	lsls	r3, r3, #2
 8001ed0:	440b      	add	r3, r1
 8001ed2:	3304      	adds	r3, #4
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	4a12      	ldr	r2, [pc, #72]	; (8001f20 <find_new_min_task+0x8c>)
 8001ed8:	6812      	ldr	r2, [r2, #0]
 8001eda:	4293      	cmp	r3, r2
 8001edc:	d20e      	bcs.n	8001efc <find_new_min_task+0x68>
 8001ede:	4a0e      	ldr	r2, [pc, #56]	; (8001f18 <find_new_min_task+0x84>)
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	6013      	str	r3, [r2, #0]
 8001ee4:	490d      	ldr	r1, [pc, #52]	; (8001f1c <find_new_min_task+0x88>)
 8001ee6:	687a      	ldr	r2, [r7, #4]
 8001ee8:	4613      	mov	r3, r2
 8001eea:	009b      	lsls	r3, r3, #2
 8001eec:	4413      	add	r3, r2
 8001eee:	009b      	lsls	r3, r3, #2
 8001ef0:	440b      	add	r3, r1
 8001ef2:	3304      	adds	r3, #4
 8001ef4:	681b      	ldr	r3, [r3, #0]
 8001ef6:	461a      	mov	r2, r3
 8001ef8:	4b09      	ldr	r3, [pc, #36]	; (8001f20 <find_new_min_task+0x8c>)
 8001efa:	601a      	str	r2, [r3, #0]
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	3301      	adds	r3, #1
 8001f00:	607b      	str	r3, [r7, #4]
 8001f02:	4b08      	ldr	r3, [pc, #32]	; (8001f24 <find_new_min_task+0x90>)
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	687a      	ldr	r2, [r7, #4]
 8001f08:	429a      	cmp	r2, r3
 8001f0a:	dbdb      	blt.n	8001ec4 <find_new_min_task+0x30>
 8001f0c:	bf00      	nop
 8001f0e:	bf00      	nop
 8001f10:	370c      	adds	r7, #12
 8001f12:	46bd      	mov	sp, r7
 8001f14:	bc80      	pop	{r7}
 8001f16:	4770      	bx	lr
 8001f18:	20000140 	.word	0x20000140
 8001f1c:	20000284 	.word	0x20000284
 8001f20:	20000144 	.word	0x20000144
 8001f24:	20000138 	.word	0x20000138

08001f28 <SCH_Report_Status>:
 8001f28:	b480      	push	{r7}
 8001f2a:	af00      	add	r7, sp, #0
 8001f2c:	bf00      	nop
 8001f2e:	46bd      	mov	sp, r7
 8001f30:	bc80      	pop	{r7}
 8001f32:	4770      	bx	lr

08001f34 <setTimer1>:
 8001f34:	b480      	push	{r7}
 8001f36:	b083      	sub	sp, #12
 8001f38:	af00      	add	r7, sp, #0
 8001f3a:	6078      	str	r0, [r7, #4]
 8001f3c:	4b07      	ldr	r3, [pc, #28]	; (8001f5c <setTimer1+0x28>)
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	687a      	ldr	r2, [r7, #4]
 8001f42:	fb92 f3f3 	sdiv	r3, r2, r3
 8001f46:	4a06      	ldr	r2, [pc, #24]	; (8001f60 <setTimer1+0x2c>)
 8001f48:	6013      	str	r3, [r2, #0]
 8001f4a:	4b06      	ldr	r3, [pc, #24]	; (8001f64 <setTimer1+0x30>)
 8001f4c:	2200      	movs	r2, #0
 8001f4e:	601a      	str	r2, [r3, #0]
 8001f50:	bf00      	nop
 8001f52:	370c      	adds	r7, #12
 8001f54:	46bd      	mov	sp, r7
 8001f56:	bc80      	pop	{r7}
 8001f58:	4770      	bx	lr
 8001f5a:	bf00      	nop
 8001f5c:	20000048 	.word	0x20000048
 8001f60:	2000015c 	.word	0x2000015c
 8001f64:	20000148 	.word	0x20000148

08001f68 <setTimer2>:
 8001f68:	b480      	push	{r7}
 8001f6a:	b083      	sub	sp, #12
 8001f6c:	af00      	add	r7, sp, #0
 8001f6e:	6078      	str	r0, [r7, #4]
 8001f70:	4b07      	ldr	r3, [pc, #28]	; (8001f90 <setTimer2+0x28>)
 8001f72:	681b      	ldr	r3, [r3, #0]
 8001f74:	687a      	ldr	r2, [r7, #4]
 8001f76:	fb92 f3f3 	sdiv	r3, r2, r3
 8001f7a:	4a06      	ldr	r2, [pc, #24]	; (8001f94 <setTimer2+0x2c>)
 8001f7c:	6013      	str	r3, [r2, #0]
 8001f7e:	4b06      	ldr	r3, [pc, #24]	; (8001f98 <setTimer2+0x30>)
 8001f80:	2200      	movs	r2, #0
 8001f82:	601a      	str	r2, [r3, #0]
 8001f84:	bf00      	nop
 8001f86:	370c      	adds	r7, #12
 8001f88:	46bd      	mov	sp, r7
 8001f8a:	bc80      	pop	{r7}
 8001f8c:	4770      	bx	lr
 8001f8e:	bf00      	nop
 8001f90:	20000048 	.word	0x20000048
 8001f94:	20000160 	.word	0x20000160
 8001f98:	2000014c 	.word	0x2000014c

08001f9c <setTimer3>:
 8001f9c:	b480      	push	{r7}
 8001f9e:	b083      	sub	sp, #12
 8001fa0:	af00      	add	r7, sp, #0
 8001fa2:	6078      	str	r0, [r7, #4]
 8001fa4:	4b07      	ldr	r3, [pc, #28]	; (8001fc4 <setTimer3+0x28>)
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	687a      	ldr	r2, [r7, #4]
 8001faa:	fb92 f3f3 	sdiv	r3, r2, r3
 8001fae:	4a06      	ldr	r2, [pc, #24]	; (8001fc8 <setTimer3+0x2c>)
 8001fb0:	6013      	str	r3, [r2, #0]
 8001fb2:	4b06      	ldr	r3, [pc, #24]	; (8001fcc <setTimer3+0x30>)
 8001fb4:	2200      	movs	r2, #0
 8001fb6:	601a      	str	r2, [r3, #0]
 8001fb8:	bf00      	nop
 8001fba:	370c      	adds	r7, #12
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	bc80      	pop	{r7}
 8001fc0:	4770      	bx	lr
 8001fc2:	bf00      	nop
 8001fc4:	20000048 	.word	0x20000048
 8001fc8:	20000164 	.word	0x20000164
 8001fcc:	20000150 	.word	0x20000150

08001fd0 <timerRun>:
 8001fd0:	b480      	push	{r7}
 8001fd2:	af00      	add	r7, sp, #0
 8001fd4:	4b29      	ldr	r3, [pc, #164]	; (800207c <timerRun+0xac>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	2b00      	cmp	r3, #0
 8001fda:	dd0b      	ble.n	8001ff4 <timerRun+0x24>
 8001fdc:	4b27      	ldr	r3, [pc, #156]	; (800207c <timerRun+0xac>)
 8001fde:	681b      	ldr	r3, [r3, #0]
 8001fe0:	3b01      	subs	r3, #1
 8001fe2:	4a26      	ldr	r2, [pc, #152]	; (800207c <timerRun+0xac>)
 8001fe4:	6013      	str	r3, [r2, #0]
 8001fe6:	4b25      	ldr	r3, [pc, #148]	; (800207c <timerRun+0xac>)
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	2b00      	cmp	r3, #0
 8001fec:	dc02      	bgt.n	8001ff4 <timerRun+0x24>
 8001fee:	4b24      	ldr	r3, [pc, #144]	; (8002080 <timerRun+0xb0>)
 8001ff0:	2201      	movs	r2, #1
 8001ff2:	601a      	str	r2, [r3, #0]
 8001ff4:	4b23      	ldr	r3, [pc, #140]	; (8002084 <timerRun+0xb4>)
 8001ff6:	681b      	ldr	r3, [r3, #0]
 8001ff8:	2b00      	cmp	r3, #0
 8001ffa:	dd0b      	ble.n	8002014 <timerRun+0x44>
 8001ffc:	4b21      	ldr	r3, [pc, #132]	; (8002084 <timerRun+0xb4>)
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	3b01      	subs	r3, #1
 8002002:	4a20      	ldr	r2, [pc, #128]	; (8002084 <timerRun+0xb4>)
 8002004:	6013      	str	r3, [r2, #0]
 8002006:	4b1f      	ldr	r3, [pc, #124]	; (8002084 <timerRun+0xb4>)
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	2b00      	cmp	r3, #0
 800200c:	dc02      	bgt.n	8002014 <timerRun+0x44>
 800200e:	4b1e      	ldr	r3, [pc, #120]	; (8002088 <timerRun+0xb8>)
 8002010:	2201      	movs	r2, #1
 8002012:	601a      	str	r2, [r3, #0]
 8002014:	4b1d      	ldr	r3, [pc, #116]	; (800208c <timerRun+0xbc>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	2b00      	cmp	r3, #0
 800201a:	dd0b      	ble.n	8002034 <timerRun+0x64>
 800201c:	4b1b      	ldr	r3, [pc, #108]	; (800208c <timerRun+0xbc>)
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	3b01      	subs	r3, #1
 8002022:	4a1a      	ldr	r2, [pc, #104]	; (800208c <timerRun+0xbc>)
 8002024:	6013      	str	r3, [r2, #0]
 8002026:	4b19      	ldr	r3, [pc, #100]	; (800208c <timerRun+0xbc>)
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	2b00      	cmp	r3, #0
 800202c:	dc02      	bgt.n	8002034 <timerRun+0x64>
 800202e:	4b18      	ldr	r3, [pc, #96]	; (8002090 <timerRun+0xc0>)
 8002030:	2201      	movs	r2, #1
 8002032:	601a      	str	r2, [r3, #0]
 8002034:	4b17      	ldr	r3, [pc, #92]	; (8002094 <timerRun+0xc4>)
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	2b00      	cmp	r3, #0
 800203a:	dd0b      	ble.n	8002054 <timerRun+0x84>
 800203c:	4b15      	ldr	r3, [pc, #84]	; (8002094 <timerRun+0xc4>)
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	3b01      	subs	r3, #1
 8002042:	4a14      	ldr	r2, [pc, #80]	; (8002094 <timerRun+0xc4>)
 8002044:	6013      	str	r3, [r2, #0]
 8002046:	4b13      	ldr	r3, [pc, #76]	; (8002094 <timerRun+0xc4>)
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	2b00      	cmp	r3, #0
 800204c:	dc02      	bgt.n	8002054 <timerRun+0x84>
 800204e:	4b12      	ldr	r3, [pc, #72]	; (8002098 <timerRun+0xc8>)
 8002050:	2201      	movs	r2, #1
 8002052:	601a      	str	r2, [r3, #0]
 8002054:	4b11      	ldr	r3, [pc, #68]	; (800209c <timerRun+0xcc>)
 8002056:	681b      	ldr	r3, [r3, #0]
 8002058:	2b00      	cmp	r3, #0
 800205a:	dd0b      	ble.n	8002074 <timerRun+0xa4>
 800205c:	4b0f      	ldr	r3, [pc, #60]	; (800209c <timerRun+0xcc>)
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	3b01      	subs	r3, #1
 8002062:	4a0e      	ldr	r2, [pc, #56]	; (800209c <timerRun+0xcc>)
 8002064:	6013      	str	r3, [r2, #0]
 8002066:	4b0d      	ldr	r3, [pc, #52]	; (800209c <timerRun+0xcc>)
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	2b00      	cmp	r3, #0
 800206c:	dc02      	bgt.n	8002074 <timerRun+0xa4>
 800206e:	4b0c      	ldr	r3, [pc, #48]	; (80020a0 <timerRun+0xd0>)
 8002070:	2201      	movs	r2, #1
 8002072:	601a      	str	r2, [r3, #0]
 8002074:	bf00      	nop
 8002076:	46bd      	mov	sp, r7
 8002078:	bc80      	pop	{r7}
 800207a:	4770      	bx	lr
 800207c:	2000015c 	.word	0x2000015c
 8002080:	20000148 	.word	0x20000148
 8002084:	20000160 	.word	0x20000160
 8002088:	2000014c 	.word	0x2000014c
 800208c:	20000164 	.word	0x20000164
 8002090:	20000150 	.word	0x20000150
 8002094:	20000168 	.word	0x20000168
 8002098:	20000154 	.word	0x20000154
 800209c:	2000016c 	.word	0x2000016c
 80020a0:	20000158 	.word	0x20000158

080020a4 <HAL_MspInit>:
 80020a4:	b480      	push	{r7}
 80020a6:	b085      	sub	sp, #20
 80020a8:	af00      	add	r7, sp, #0
 80020aa:	4b15      	ldr	r3, [pc, #84]	; (8002100 <HAL_MspInit+0x5c>)
 80020ac:	699b      	ldr	r3, [r3, #24]
 80020ae:	4a14      	ldr	r2, [pc, #80]	; (8002100 <HAL_MspInit+0x5c>)
 80020b0:	f043 0301 	orr.w	r3, r3, #1
 80020b4:	6193      	str	r3, [r2, #24]
 80020b6:	4b12      	ldr	r3, [pc, #72]	; (8002100 <HAL_MspInit+0x5c>)
 80020b8:	699b      	ldr	r3, [r3, #24]
 80020ba:	f003 0301 	and.w	r3, r3, #1
 80020be:	60bb      	str	r3, [r7, #8]
 80020c0:	68bb      	ldr	r3, [r7, #8]
 80020c2:	4b0f      	ldr	r3, [pc, #60]	; (8002100 <HAL_MspInit+0x5c>)
 80020c4:	69db      	ldr	r3, [r3, #28]
 80020c6:	4a0e      	ldr	r2, [pc, #56]	; (8002100 <HAL_MspInit+0x5c>)
 80020c8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80020cc:	61d3      	str	r3, [r2, #28]
 80020ce:	4b0c      	ldr	r3, [pc, #48]	; (8002100 <HAL_MspInit+0x5c>)
 80020d0:	69db      	ldr	r3, [r3, #28]
 80020d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020d6:	607b      	str	r3, [r7, #4]
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	4b0a      	ldr	r3, [pc, #40]	; (8002104 <HAL_MspInit+0x60>)
 80020dc:	685b      	ldr	r3, [r3, #4]
 80020de:	60fb      	str	r3, [r7, #12]
 80020e0:	68fb      	ldr	r3, [r7, #12]
 80020e2:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80020e6:	60fb      	str	r3, [r7, #12]
 80020e8:	68fb      	ldr	r3, [r7, #12]
 80020ea:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80020ee:	60fb      	str	r3, [r7, #12]
 80020f0:	4a04      	ldr	r2, [pc, #16]	; (8002104 <HAL_MspInit+0x60>)
 80020f2:	68fb      	ldr	r3, [r7, #12]
 80020f4:	6053      	str	r3, [r2, #4]
 80020f6:	bf00      	nop
 80020f8:	3714      	adds	r7, #20
 80020fa:	46bd      	mov	sp, r7
 80020fc:	bc80      	pop	{r7}
 80020fe:	4770      	bx	lr
 8002100:	40021000 	.word	0x40021000
 8002104:	40010000 	.word	0x40010000

08002108 <HAL_TIM_Base_MspInit>:
 8002108:	b580      	push	{r7, lr}
 800210a:	b084      	sub	sp, #16
 800210c:	af00      	add	r7, sp, #0
 800210e:	6078      	str	r0, [r7, #4]
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002118:	d114      	bne.n	8002144 <HAL_TIM_Base_MspInit+0x3c>
 800211a:	4b19      	ldr	r3, [pc, #100]	; (8002180 <HAL_TIM_Base_MspInit+0x78>)
 800211c:	69db      	ldr	r3, [r3, #28]
 800211e:	4a18      	ldr	r2, [pc, #96]	; (8002180 <HAL_TIM_Base_MspInit+0x78>)
 8002120:	f043 0301 	orr.w	r3, r3, #1
 8002124:	61d3      	str	r3, [r2, #28]
 8002126:	4b16      	ldr	r3, [pc, #88]	; (8002180 <HAL_TIM_Base_MspInit+0x78>)
 8002128:	69db      	ldr	r3, [r3, #28]
 800212a:	f003 0301 	and.w	r3, r3, #1
 800212e:	60fb      	str	r3, [r7, #12]
 8002130:	68fb      	ldr	r3, [r7, #12]
 8002132:	2200      	movs	r2, #0
 8002134:	2100      	movs	r1, #0
 8002136:	201c      	movs	r0, #28
 8002138:	f000 fbeb 	bl	8002912 <HAL_NVIC_SetPriority>
 800213c:	201c      	movs	r0, #28
 800213e:	f000 fc04 	bl	800294a <HAL_NVIC_EnableIRQ>
 8002142:	e018      	b.n	8002176 <HAL_TIM_Base_MspInit+0x6e>
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	4a0e      	ldr	r2, [pc, #56]	; (8002184 <HAL_TIM_Base_MspInit+0x7c>)
 800214a:	4293      	cmp	r3, r2
 800214c:	d113      	bne.n	8002176 <HAL_TIM_Base_MspInit+0x6e>
 800214e:	4b0c      	ldr	r3, [pc, #48]	; (8002180 <HAL_TIM_Base_MspInit+0x78>)
 8002150:	69db      	ldr	r3, [r3, #28]
 8002152:	4a0b      	ldr	r2, [pc, #44]	; (8002180 <HAL_TIM_Base_MspInit+0x78>)
 8002154:	f043 0302 	orr.w	r3, r3, #2
 8002158:	61d3      	str	r3, [r2, #28]
 800215a:	4b09      	ldr	r3, [pc, #36]	; (8002180 <HAL_TIM_Base_MspInit+0x78>)
 800215c:	69db      	ldr	r3, [r3, #28]
 800215e:	f003 0302 	and.w	r3, r3, #2
 8002162:	60bb      	str	r3, [r7, #8]
 8002164:	68bb      	ldr	r3, [r7, #8]
 8002166:	2200      	movs	r2, #0
 8002168:	2100      	movs	r1, #0
 800216a:	201d      	movs	r0, #29
 800216c:	f000 fbd1 	bl	8002912 <HAL_NVIC_SetPriority>
 8002170:	201d      	movs	r0, #29
 8002172:	f000 fbea 	bl	800294a <HAL_NVIC_EnableIRQ>
 8002176:	bf00      	nop
 8002178:	3710      	adds	r7, #16
 800217a:	46bd      	mov	sp, r7
 800217c:	bd80      	pop	{r7, pc}
 800217e:	bf00      	nop
 8002180:	40021000 	.word	0x40021000
 8002184:	40000400 	.word	0x40000400

08002188 <HAL_TIM_MspPostInit>:
 8002188:	b580      	push	{r7, lr}
 800218a:	b088      	sub	sp, #32
 800218c:	af00      	add	r7, sp, #0
 800218e:	6078      	str	r0, [r7, #4]
 8002190:	f107 0310 	add.w	r3, r7, #16
 8002194:	2200      	movs	r2, #0
 8002196:	601a      	str	r2, [r3, #0]
 8002198:	605a      	str	r2, [r3, #4]
 800219a:	609a      	str	r2, [r3, #8]
 800219c:	60da      	str	r2, [r3, #12]
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	4a0f      	ldr	r2, [pc, #60]	; (80021e0 <HAL_TIM_MspPostInit+0x58>)
 80021a4:	4293      	cmp	r3, r2
 80021a6:	d117      	bne.n	80021d8 <HAL_TIM_MspPostInit+0x50>
 80021a8:	4b0e      	ldr	r3, [pc, #56]	; (80021e4 <HAL_TIM_MspPostInit+0x5c>)
 80021aa:	699b      	ldr	r3, [r3, #24]
 80021ac:	4a0d      	ldr	r2, [pc, #52]	; (80021e4 <HAL_TIM_MspPostInit+0x5c>)
 80021ae:	f043 0304 	orr.w	r3, r3, #4
 80021b2:	6193      	str	r3, [r2, #24]
 80021b4:	4b0b      	ldr	r3, [pc, #44]	; (80021e4 <HAL_TIM_MspPostInit+0x5c>)
 80021b6:	699b      	ldr	r3, [r3, #24]
 80021b8:	f003 0304 	and.w	r3, r3, #4
 80021bc:	60fb      	str	r3, [r7, #12]
 80021be:	68fb      	ldr	r3, [r7, #12]
 80021c0:	2340      	movs	r3, #64	; 0x40
 80021c2:	613b      	str	r3, [r7, #16]
 80021c4:	2302      	movs	r3, #2
 80021c6:	617b      	str	r3, [r7, #20]
 80021c8:	2302      	movs	r3, #2
 80021ca:	61fb      	str	r3, [r7, #28]
 80021cc:	f107 0310 	add.w	r3, r7, #16
 80021d0:	4619      	mov	r1, r3
 80021d2:	4805      	ldr	r0, [pc, #20]	; (80021e8 <HAL_TIM_MspPostInit+0x60>)
 80021d4:	f000 fbd4 	bl	8002980 <HAL_GPIO_Init>
 80021d8:	bf00      	nop
 80021da:	3720      	adds	r7, #32
 80021dc:	46bd      	mov	sp, r7
 80021de:	bd80      	pop	{r7, pc}
 80021e0:	40000400 	.word	0x40000400
 80021e4:	40021000 	.word	0x40021000
 80021e8:	40010800 	.word	0x40010800

080021ec <HAL_UART_MspInit>:
 80021ec:	b580      	push	{r7, lr}
 80021ee:	b088      	sub	sp, #32
 80021f0:	af00      	add	r7, sp, #0
 80021f2:	6078      	str	r0, [r7, #4]
 80021f4:	f107 0310 	add.w	r3, r7, #16
 80021f8:	2200      	movs	r2, #0
 80021fa:	601a      	str	r2, [r3, #0]
 80021fc:	605a      	str	r2, [r3, #4]
 80021fe:	609a      	str	r2, [r3, #8]
 8002200:	60da      	str	r2, [r3, #12]
 8002202:	687b      	ldr	r3, [r7, #4]
 8002204:	681b      	ldr	r3, [r3, #0]
 8002206:	4a1b      	ldr	r2, [pc, #108]	; (8002274 <HAL_UART_MspInit+0x88>)
 8002208:	4293      	cmp	r3, r2
 800220a:	d12f      	bne.n	800226c <HAL_UART_MspInit+0x80>
 800220c:	4b1a      	ldr	r3, [pc, #104]	; (8002278 <HAL_UART_MspInit+0x8c>)
 800220e:	69db      	ldr	r3, [r3, #28]
 8002210:	4a19      	ldr	r2, [pc, #100]	; (8002278 <HAL_UART_MspInit+0x8c>)
 8002212:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002216:	61d3      	str	r3, [r2, #28]
 8002218:	4b17      	ldr	r3, [pc, #92]	; (8002278 <HAL_UART_MspInit+0x8c>)
 800221a:	69db      	ldr	r3, [r3, #28]
 800221c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002220:	60fb      	str	r3, [r7, #12]
 8002222:	68fb      	ldr	r3, [r7, #12]
 8002224:	4b14      	ldr	r3, [pc, #80]	; (8002278 <HAL_UART_MspInit+0x8c>)
 8002226:	699b      	ldr	r3, [r3, #24]
 8002228:	4a13      	ldr	r2, [pc, #76]	; (8002278 <HAL_UART_MspInit+0x8c>)
 800222a:	f043 0304 	orr.w	r3, r3, #4
 800222e:	6193      	str	r3, [r2, #24]
 8002230:	4b11      	ldr	r3, [pc, #68]	; (8002278 <HAL_UART_MspInit+0x8c>)
 8002232:	699b      	ldr	r3, [r3, #24]
 8002234:	f003 0304 	and.w	r3, r3, #4
 8002238:	60bb      	str	r3, [r7, #8]
 800223a:	68bb      	ldr	r3, [r7, #8]
 800223c:	2304      	movs	r3, #4
 800223e:	613b      	str	r3, [r7, #16]
 8002240:	2302      	movs	r3, #2
 8002242:	617b      	str	r3, [r7, #20]
 8002244:	2303      	movs	r3, #3
 8002246:	61fb      	str	r3, [r7, #28]
 8002248:	f107 0310 	add.w	r3, r7, #16
 800224c:	4619      	mov	r1, r3
 800224e:	480b      	ldr	r0, [pc, #44]	; (800227c <HAL_UART_MspInit+0x90>)
 8002250:	f000 fb96 	bl	8002980 <HAL_GPIO_Init>
 8002254:	2308      	movs	r3, #8
 8002256:	613b      	str	r3, [r7, #16]
 8002258:	2300      	movs	r3, #0
 800225a:	617b      	str	r3, [r7, #20]
 800225c:	2300      	movs	r3, #0
 800225e:	61bb      	str	r3, [r7, #24]
 8002260:	f107 0310 	add.w	r3, r7, #16
 8002264:	4619      	mov	r1, r3
 8002266:	4805      	ldr	r0, [pc, #20]	; (800227c <HAL_UART_MspInit+0x90>)
 8002268:	f000 fb8a 	bl	8002980 <HAL_GPIO_Init>
 800226c:	bf00      	nop
 800226e:	3720      	adds	r7, #32
 8002270:	46bd      	mov	sp, r7
 8002272:	bd80      	pop	{r7, pc}
 8002274:	40004400 	.word	0x40004400
 8002278:	40021000 	.word	0x40021000
 800227c:	40010800 	.word	0x40010800

08002280 <NMI_Handler>:
 8002280:	b480      	push	{r7}
 8002282:	af00      	add	r7, sp, #0
 8002284:	e7fe      	b.n	8002284 <NMI_Handler+0x4>

08002286 <HardFault_Handler>:
 8002286:	b480      	push	{r7}
 8002288:	af00      	add	r7, sp, #0
 800228a:	e7fe      	b.n	800228a <HardFault_Handler+0x4>

0800228c <MemManage_Handler>:
 800228c:	b480      	push	{r7}
 800228e:	af00      	add	r7, sp, #0
 8002290:	e7fe      	b.n	8002290 <MemManage_Handler+0x4>

08002292 <BusFault_Handler>:
 8002292:	b480      	push	{r7}
 8002294:	af00      	add	r7, sp, #0
 8002296:	e7fe      	b.n	8002296 <BusFault_Handler+0x4>

08002298 <UsageFault_Handler>:
 8002298:	b480      	push	{r7}
 800229a:	af00      	add	r7, sp, #0
 800229c:	e7fe      	b.n	800229c <UsageFault_Handler+0x4>

0800229e <SVC_Handler>:
 800229e:	b480      	push	{r7}
 80022a0:	af00      	add	r7, sp, #0
 80022a2:	bf00      	nop
 80022a4:	46bd      	mov	sp, r7
 80022a6:	bc80      	pop	{r7}
 80022a8:	4770      	bx	lr

080022aa <DebugMon_Handler>:
 80022aa:	b480      	push	{r7}
 80022ac:	af00      	add	r7, sp, #0
 80022ae:	bf00      	nop
 80022b0:	46bd      	mov	sp, r7
 80022b2:	bc80      	pop	{r7}
 80022b4:	4770      	bx	lr

080022b6 <PendSV_Handler>:
 80022b6:	b480      	push	{r7}
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	bf00      	nop
 80022bc:	46bd      	mov	sp, r7
 80022be:	bc80      	pop	{r7}
 80022c0:	4770      	bx	lr

080022c2 <SysTick_Handler>:
 80022c2:	b580      	push	{r7, lr}
 80022c4:	af00      	add	r7, sp, #0
 80022c6:	f000 f9f1 	bl	80026ac <HAL_IncTick>
 80022ca:	bf00      	nop
 80022cc:	bd80      	pop	{r7, pc}
	...

080022d0 <TIM2_IRQHandler>:
 80022d0:	b580      	push	{r7, lr}
 80022d2:	af00      	add	r7, sp, #0
 80022d4:	4802      	ldr	r0, [pc, #8]	; (80022e0 <TIM2_IRQHandler+0x10>)
 80022d6:	f001 fb09 	bl	80038ec <HAL_TIM_IRQHandler>
 80022da:	bf00      	nop
 80022dc:	bd80      	pop	{r7, pc}
 80022de:	bf00      	nop
 80022e0:	200001f8 	.word	0x200001f8

080022e4 <TIM3_IRQHandler>:
 80022e4:	b580      	push	{r7, lr}
 80022e6:	af00      	add	r7, sp, #0
 80022e8:	4802      	ldr	r0, [pc, #8]	; (80022f4 <TIM3_IRQHandler+0x10>)
 80022ea:	f001 faff 	bl	80038ec <HAL_TIM_IRQHandler>
 80022ee:	bf00      	nop
 80022f0:	bd80      	pop	{r7, pc}
 80022f2:	bf00      	nop
 80022f4:	200001b0 	.word	0x200001b0

080022f8 <EXTI15_10_IRQHandler>:
 80022f8:	b580      	push	{r7, lr}
 80022fa:	af00      	add	r7, sp, #0
 80022fc:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8002300:	f000 fd0a 	bl	8002d18 <HAL_GPIO_EXTI_IRQHandler>
 8002304:	bf00      	nop
 8002306:	bd80      	pop	{r7, pc}

08002308 <_sbrk>:
 8002308:	b580      	push	{r7, lr}
 800230a:	b086      	sub	sp, #24
 800230c:	af00      	add	r7, sp, #0
 800230e:	6078      	str	r0, [r7, #4]
 8002310:	4a14      	ldr	r2, [pc, #80]	; (8002364 <_sbrk+0x5c>)
 8002312:	4b15      	ldr	r3, [pc, #84]	; (8002368 <_sbrk+0x60>)
 8002314:	1ad3      	subs	r3, r2, r3
 8002316:	617b      	str	r3, [r7, #20]
 8002318:	697b      	ldr	r3, [r7, #20]
 800231a:	613b      	str	r3, [r7, #16]
 800231c:	4b13      	ldr	r3, [pc, #76]	; (800236c <_sbrk+0x64>)
 800231e:	681b      	ldr	r3, [r3, #0]
 8002320:	2b00      	cmp	r3, #0
 8002322:	d102      	bne.n	800232a <_sbrk+0x22>
 8002324:	4b11      	ldr	r3, [pc, #68]	; (800236c <_sbrk+0x64>)
 8002326:	4a12      	ldr	r2, [pc, #72]	; (8002370 <_sbrk+0x68>)
 8002328:	601a      	str	r2, [r3, #0]
 800232a:	4b10      	ldr	r3, [pc, #64]	; (800236c <_sbrk+0x64>)
 800232c:	681a      	ldr	r2, [r3, #0]
 800232e:	687b      	ldr	r3, [r7, #4]
 8002330:	4413      	add	r3, r2
 8002332:	693a      	ldr	r2, [r7, #16]
 8002334:	429a      	cmp	r2, r3
 8002336:	d207      	bcs.n	8002348 <_sbrk+0x40>
 8002338:	f002 fa52 	bl	80047e0 <__errno>
 800233c:	4603      	mov	r3, r0
 800233e:	220c      	movs	r2, #12
 8002340:	601a      	str	r2, [r3, #0]
 8002342:	f04f 33ff 	mov.w	r3, #4294967295
 8002346:	e009      	b.n	800235c <_sbrk+0x54>
 8002348:	4b08      	ldr	r3, [pc, #32]	; (800236c <_sbrk+0x64>)
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	60fb      	str	r3, [r7, #12]
 800234e:	4b07      	ldr	r3, [pc, #28]	; (800236c <_sbrk+0x64>)
 8002350:	681a      	ldr	r2, [r3, #0]
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	4413      	add	r3, r2
 8002356:	4a05      	ldr	r2, [pc, #20]	; (800236c <_sbrk+0x64>)
 8002358:	6013      	str	r3, [r2, #0]
 800235a:	68fb      	ldr	r3, [r7, #12]
 800235c:	4618      	mov	r0, r3
 800235e:	3718      	adds	r7, #24
 8002360:	46bd      	mov	sp, r7
 8002362:	bd80      	pop	{r7, pc}
 8002364:	20005000 	.word	0x20005000
 8002368:	00000400 	.word	0x00000400
 800236c:	20000170 	.word	0x20000170
 8002370:	200005b8 	.word	0x200005b8

08002374 <SystemInit>:
 8002374:	b480      	push	{r7}
 8002376:	af00      	add	r7, sp, #0
 8002378:	bf00      	nop
 800237a:	46bd      	mov	sp, r7
 800237c:	bc80      	pop	{r7}
 800237e:	4770      	bx	lr

08002380 <helper_set_led_color>:
 */


#include "traffic_light.h"

void helper_set_led_color(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin1, GPIO_TypeDef *GPIOy, uint16_t GPIO_Pin2, int COLOR) {
 8002380:	b480      	push	{r7}
 8002382:	b085      	sub	sp, #20
 8002384:	af00      	add	r7, sp, #0
 8002386:	60f8      	str	r0, [r7, #12]
 8002388:	607a      	str	r2, [r7, #4]
 800238a:	461a      	mov	r2, r3
 800238c:	460b      	mov	r3, r1
 800238e:	817b      	strh	r3, [r7, #10]
 8002390:	4613      	mov	r3, r2
 8002392:	813b      	strh	r3, [r7, #8]
	switch (COLOR) {
 8002394:	69bb      	ldr	r3, [r7, #24]
 8002396:	2b20      	cmp	r3, #32
 8002398:	d018      	beq.n	80023cc <helper_set_led_color+0x4c>
 800239a:	69bb      	ldr	r3, [r7, #24]
 800239c:	2b20      	cmp	r3, #32
 800239e:	dc1d      	bgt.n	80023dc <helper_set_led_color+0x5c>
 80023a0:	69bb      	ldr	r3, [r7, #24]
 80023a2:	2b1e      	cmp	r3, #30
 80023a4:	d003      	beq.n	80023ae <helper_set_led_color+0x2e>
 80023a6:	69bb      	ldr	r3, [r7, #24]
 80023a8:	2b1f      	cmp	r3, #31
 80023aa:	d008      	beq.n	80023be <helper_set_led_color+0x3e>
		case GREEN_COLOR:
			GPIOx->BSRR = (uint32_t)GPIO_Pin1 << 16u;
			GPIOy->BSRR = GPIO_Pin2;
			break;
	}
}
 80023ac:	e016      	b.n	80023dc <helper_set_led_color+0x5c>
			GPIOx->BSRR = GPIO_Pin1;
 80023ae:	897a      	ldrh	r2, [r7, #10]
 80023b0:	68fb      	ldr	r3, [r7, #12]
 80023b2:	611a      	str	r2, [r3, #16]
			GPIOy->BSRR = (uint32_t)GPIO_Pin2 << 16u;
 80023b4:	893b      	ldrh	r3, [r7, #8]
 80023b6:	041a      	lsls	r2, r3, #16
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	611a      	str	r2, [r3, #16]
			break;
 80023bc:	e00e      	b.n	80023dc <helper_set_led_color+0x5c>
			GPIOx->BSRR = GPIO_Pin1;
 80023be:	897a      	ldrh	r2, [r7, #10]
 80023c0:	68fb      	ldr	r3, [r7, #12]
 80023c2:	611a      	str	r2, [r3, #16]
			GPIOy->BSRR = GPIO_Pin2;
 80023c4:	893a      	ldrh	r2, [r7, #8]
 80023c6:	687b      	ldr	r3, [r7, #4]
 80023c8:	611a      	str	r2, [r3, #16]
			break;
 80023ca:	e007      	b.n	80023dc <helper_set_led_color+0x5c>
			GPIOx->BSRR = (uint32_t)GPIO_Pin1 << 16u;
 80023cc:	897b      	ldrh	r3, [r7, #10]
 80023ce:	041a      	lsls	r2, r3, #16
 80023d0:	68fb      	ldr	r3, [r7, #12]
 80023d2:	611a      	str	r2, [r3, #16]
			GPIOy->BSRR = GPIO_Pin2;
 80023d4:	893a      	ldrh	r2, [r7, #8]
 80023d6:	687b      	ldr	r3, [r7, #4]
 80023d8:	611a      	str	r2, [r3, #16]
			break;
 80023da:	bf00      	nop
}
 80023dc:	bf00      	nop
 80023de:	3714      	adds	r7, #20
 80023e0:	46bd      	mov	sp, r7
 80023e2:	bc80      	pop	{r7}
 80023e4:	4770      	bx	lr
	...

080023e8 <set_led_color>:

void set_led_color(int led, int color) {
 80023e8:	b580      	push	{r7, lr}
 80023ea:	b084      	sub	sp, #16
 80023ec:	af02      	add	r7, sp, #8
 80023ee:	6078      	str	r0, [r7, #4]
 80023f0:	6039      	str	r1, [r7, #0]
	switch (led) {
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	2b2a      	cmp	r3, #42	; 0x2a
 80023f6:	d01c      	beq.n	8002432 <set_led_color+0x4a>
 80023f8:	687b      	ldr	r3, [r7, #4]
 80023fa:	2b2a      	cmp	r3, #42	; 0x2a
 80023fc:	dc24      	bgt.n	8002448 <set_led_color+0x60>
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	2b28      	cmp	r3, #40	; 0x28
 8002402:	d003      	beq.n	800240c <set_led_color+0x24>
 8002404:	687b      	ldr	r3, [r7, #4]
 8002406:	2b29      	cmp	r3, #41	; 0x29
 8002408:	d00a      	beq.n	8002420 <set_led_color+0x38>
		case PEDESTRIAN_LED:
			helper_set_led_color(Traffic_Pedes_1_GPIO_Port, Traffic_Pedes_1_Pin,
					Traffic_Pedes_2_GPIO_Port, Traffic_Pedes_2_Pin, color);
			break;
	}
}
 800240a:	e01d      	b.n	8002448 <set_led_color+0x60>
			helper_set_led_color(Traffic_1_1_GPIO_Port, Traffic_1_1_Pin,
 800240c:	683b      	ldr	r3, [r7, #0]
 800240e:	9300      	str	r3, [sp, #0]
 8002410:	2308      	movs	r3, #8
 8002412:	4a0f      	ldr	r2, [pc, #60]	; (8002450 <set_led_color+0x68>)
 8002414:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002418:	480e      	ldr	r0, [pc, #56]	; (8002454 <set_led_color+0x6c>)
 800241a:	f7ff ffb1 	bl	8002380 <helper_set_led_color>
			break;
 800241e:	e013      	b.n	8002448 <set_led_color+0x60>
			helper_set_led_color(Traffic_2_1_GPIO_Port, Traffic_2_1_Pin,
 8002420:	683b      	ldr	r3, [r7, #0]
 8002422:	9300      	str	r3, [sp, #0]
 8002424:	2310      	movs	r3, #16
 8002426:	4a0a      	ldr	r2, [pc, #40]	; (8002450 <set_led_color+0x68>)
 8002428:	2120      	movs	r1, #32
 800242a:	4809      	ldr	r0, [pc, #36]	; (8002450 <set_led_color+0x68>)
 800242c:	f7ff ffa8 	bl	8002380 <helper_set_led_color>
			break;
 8002430:	e00a      	b.n	8002448 <set_led_color+0x60>
			helper_set_led_color(Traffic_Pedes_1_GPIO_Port, Traffic_Pedes_1_Pin,
 8002432:	683b      	ldr	r3, [r7, #0]
 8002434:	9300      	str	r3, [sp, #0]
 8002436:	f44f 7380 	mov.w	r3, #256	; 0x100
 800243a:	4a06      	ldr	r2, [pc, #24]	; (8002454 <set_led_color+0x6c>)
 800243c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002440:	4803      	ldr	r0, [pc, #12]	; (8002450 <set_led_color+0x68>)
 8002442:	f7ff ff9d 	bl	8002380 <helper_set_led_color>
			break;
 8002446:	bf00      	nop
}
 8002448:	bf00      	nop
 800244a:	3708      	adds	r7, #8
 800244c:	46bd      	mov	sp, r7
 800244e:	bd80      	pop	{r7, pc}
 8002450:	40010c00 	.word	0x40010c00
 8002454:	40010800 	.word	0x40010800

08002458 <helper_get_led_color>:

int helper_get_led_color(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin1, GPIO_TypeDef *GPIOy, uint16_t GPIO_Pin2) {
 8002458:	b480      	push	{r7}
 800245a:	b087      	sub	sp, #28
 800245c:	af00      	add	r7, sp, #0
 800245e:	60f8      	str	r0, [r7, #12]
 8002460:	607a      	str	r2, [r7, #4]
 8002462:	461a      	mov	r2, r3
 8002464:	460b      	mov	r3, r1
 8002466:	817b      	strh	r3, [r7, #10]
 8002468:	4613      	mov	r3, r2
 800246a:	813b      	strh	r3, [r7, #8]
	GPIO_PinState bitstatus1;
	GPIO_PinState bitstatus2;

	if ((GPIOx->IDR & GPIO_Pin1) != (uint32_t)GPIO_PIN_RESET) bitstatus1 = GPIO_PIN_SET;
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	689a      	ldr	r2, [r3, #8]
 8002470:	897b      	ldrh	r3, [r7, #10]
 8002472:	4013      	ands	r3, r2
 8002474:	2b00      	cmp	r3, #0
 8002476:	d002      	beq.n	800247e <helper_get_led_color+0x26>
 8002478:	2301      	movs	r3, #1
 800247a:	75fb      	strb	r3, [r7, #23]
 800247c:	e001      	b.n	8002482 <helper_get_led_color+0x2a>
	else bitstatus1 = GPIO_PIN_RESET;
 800247e:	2300      	movs	r3, #0
 8002480:	75fb      	strb	r3, [r7, #23]

	if ((GPIOy->IDR & GPIO_Pin2) != (uint32_t)GPIO_PIN_RESET) bitstatus2 = GPIO_PIN_SET;
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	689a      	ldr	r2, [r3, #8]
 8002486:	893b      	ldrh	r3, [r7, #8]
 8002488:	4013      	ands	r3, r2
 800248a:	2b00      	cmp	r3, #0
 800248c:	d002      	beq.n	8002494 <helper_get_led_color+0x3c>
 800248e:	2301      	movs	r3, #1
 8002490:	75bb      	strb	r3, [r7, #22]
 8002492:	e001      	b.n	8002498 <helper_get_led_color+0x40>
	else bitstatus2 = GPIO_PIN_RESET;
 8002494:	2300      	movs	r3, #0
 8002496:	75bb      	strb	r3, [r7, #22]

	if (!bitstatus1 && bitstatus2) return GREEN_COLOR;
 8002498:	7dfb      	ldrb	r3, [r7, #23]
 800249a:	2b00      	cmp	r3, #0
 800249c:	d104      	bne.n	80024a8 <helper_get_led_color+0x50>
 800249e:	7dbb      	ldrb	r3, [r7, #22]
 80024a0:	2b00      	cmp	r3, #0
 80024a2:	d001      	beq.n	80024a8 <helper_get_led_color+0x50>
 80024a4:	2320      	movs	r3, #32
 80024a6:	e010      	b.n	80024ca <helper_get_led_color+0x72>
	else if (bitstatus1 && !bitstatus2) return RED_COLOR;
 80024a8:	7dfb      	ldrb	r3, [r7, #23]
 80024aa:	2b00      	cmp	r3, #0
 80024ac:	d004      	beq.n	80024b8 <helper_get_led_color+0x60>
 80024ae:	7dbb      	ldrb	r3, [r7, #22]
 80024b0:	2b00      	cmp	r3, #0
 80024b2:	d101      	bne.n	80024b8 <helper_get_led_color+0x60>
 80024b4:	231e      	movs	r3, #30
 80024b6:	e008      	b.n	80024ca <helper_get_led_color+0x72>
	else if (bitstatus1 && bitstatus2) return AMBER_COLOR;
 80024b8:	7dfb      	ldrb	r3, [r7, #23]
 80024ba:	2b00      	cmp	r3, #0
 80024bc:	d004      	beq.n	80024c8 <helper_get_led_color+0x70>
 80024be:	7dbb      	ldrb	r3, [r7, #22]
 80024c0:	2b00      	cmp	r3, #0
 80024c2:	d001      	beq.n	80024c8 <helper_get_led_color+0x70>
 80024c4:	231f      	movs	r3, #31
 80024c6:	e000      	b.n	80024ca <helper_get_led_color+0x72>

	return UNDEFINED_COLOR;
 80024c8:	231d      	movs	r3, #29
}
 80024ca:	4618      	mov	r0, r3
 80024cc:	371c      	adds	r7, #28
 80024ce:	46bd      	mov	sp, r7
 80024d0:	bc80      	pop	{r7}
 80024d2:	4770      	bx	lr

080024d4 <get_led_color>:

int get_led_color(int led) {
 80024d4:	b580      	push	{r7, lr}
 80024d6:	b082      	sub	sp, #8
 80024d8:	af00      	add	r7, sp, #0
 80024da:	6078      	str	r0, [r7, #4]
	switch(led) {
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	2b2a      	cmp	r3, #42	; 0x2a
 80024e0:	d01a      	beq.n	8002518 <get_led_color+0x44>
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	2b2a      	cmp	r3, #42	; 0x2a
 80024e6:	dc21      	bgt.n	800252c <get_led_color+0x58>
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	2b28      	cmp	r3, #40	; 0x28
 80024ec:	d003      	beq.n	80024f6 <get_led_color+0x22>
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	2b29      	cmp	r3, #41	; 0x29
 80024f2:	d009      	beq.n	8002508 <get_led_color+0x34>
 80024f4:	e01a      	b.n	800252c <get_led_color+0x58>
	case TRAFFIC_1_LED:
		return helper_get_led_color(Traffic_1_1_GPIO_Port, Traffic_1_1_Pin,
 80024f6:	2308      	movs	r3, #8
 80024f8:	4a0f      	ldr	r2, [pc, #60]	; (8002538 <get_led_color+0x64>)
 80024fa:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80024fe:	480f      	ldr	r0, [pc, #60]	; (800253c <get_led_color+0x68>)
 8002500:	f7ff ffaa 	bl	8002458 <helper_get_led_color>
 8002504:	4603      	mov	r3, r0
 8002506:	e012      	b.n	800252e <get_led_color+0x5a>
				Traffic_1_2_GPIO_Port, Traffic_1_2_Pin);
		break;
	case TRAFFIC_2_LED:
		return helper_get_led_color(Traffic_2_1_GPIO_Port, Traffic_2_1_Pin,
 8002508:	2310      	movs	r3, #16
 800250a:	4a0b      	ldr	r2, [pc, #44]	; (8002538 <get_led_color+0x64>)
 800250c:	2120      	movs	r1, #32
 800250e:	480a      	ldr	r0, [pc, #40]	; (8002538 <get_led_color+0x64>)
 8002510:	f7ff ffa2 	bl	8002458 <helper_get_led_color>
 8002514:	4603      	mov	r3, r0
 8002516:	e00a      	b.n	800252e <get_led_color+0x5a>
				Traffic_2_2_GPIO_Port, Traffic_2_2_Pin);
		break;
	case PEDESTRIAN_LED:
		return helper_get_led_color(Traffic_Pedes_1_GPIO_Port, Traffic_Pedes_1_Pin,
 8002518:	f44f 7380 	mov.w	r3, #256	; 0x100
 800251c:	4a07      	ldr	r2, [pc, #28]	; (800253c <get_led_color+0x68>)
 800251e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002522:	4805      	ldr	r0, [pc, #20]	; (8002538 <get_led_color+0x64>)
 8002524:	f7ff ff98 	bl	8002458 <helper_get_led_color>
 8002528:	4603      	mov	r3, r0
 800252a:	e000      	b.n	800252e <get_led_color+0x5a>
				Traffic_Pedes_2_GPIO_Port, Traffic_Pedes_2_Pin);
		break;
	default:
		return UNDEFINED_COLOR;
 800252c:	231d      	movs	r3, #29
		break;
	}

	return UNDEFINED_COLOR;
}
 800252e:	4618      	mov	r0, r3
 8002530:	3708      	adds	r7, #8
 8002532:	46bd      	mov	sp, r7
 8002534:	bd80      	pop	{r7, pc}
 8002536:	bf00      	nop
 8002538:	40010c00 	.word	0x40010c00
 800253c:	40010800 	.word	0x40010800

08002540 <helper_clear_led>:

void helper_clear_led(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_TypeDef *GPIOy, uint16_t GPIO_Pin2) {
 8002540:	b480      	push	{r7}
 8002542:	b085      	sub	sp, #20
 8002544:	af00      	add	r7, sp, #0
 8002546:	60f8      	str	r0, [r7, #12]
 8002548:	607a      	str	r2, [r7, #4]
 800254a:	461a      	mov	r2, r3
 800254c:	460b      	mov	r3, r1
 800254e:	817b      	strh	r3, [r7, #10]
 8002550:	4613      	mov	r3, r2
 8002552:	813b      	strh	r3, [r7, #8]
	GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
 8002554:	897b      	ldrh	r3, [r7, #10]
 8002556:	041a      	lsls	r2, r3, #16
 8002558:	68fb      	ldr	r3, [r7, #12]
 800255a:	611a      	str	r2, [r3, #16]
	GPIOy->BSRR = (uint32_t)GPIO_Pin2 << 16u;
 800255c:	893b      	ldrh	r3, [r7, #8]
 800255e:	041a      	lsls	r2, r3, #16
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	611a      	str	r2, [r3, #16]
}
 8002564:	bf00      	nop
 8002566:	3714      	adds	r7, #20
 8002568:	46bd      	mov	sp, r7
 800256a:	bc80      	pop	{r7}
 800256c:	4770      	bx	lr
	...

08002570 <clear_led>:
void clear_led(int led) {
 8002570:	b580      	push	{r7, lr}
 8002572:	b082      	sub	sp, #8
 8002574:	af00      	add	r7, sp, #0
 8002576:	6078      	str	r0, [r7, #4]
	switch(led) {
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	2b2a      	cmp	r3, #42	; 0x2a
 800257c:	d018      	beq.n	80025b0 <clear_led+0x40>
 800257e:	687b      	ldr	r3, [r7, #4]
 8002580:	2b2a      	cmp	r3, #42	; 0x2a
 8002582:	dc1e      	bgt.n	80025c2 <clear_led+0x52>
 8002584:	687b      	ldr	r3, [r7, #4]
 8002586:	2b28      	cmp	r3, #40	; 0x28
 8002588:	d003      	beq.n	8002592 <clear_led+0x22>
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	2b29      	cmp	r3, #41	; 0x29
 800258e:	d008      	beq.n	80025a2 <clear_led+0x32>
		break;
	case PEDESTRIAN_LED:
		helper_clear_led(Traffic_Pedes_1_GPIO_Port, Traffic_Pedes_1_Pin, Traffic_Pedes_2_GPIO_Port, Traffic_Pedes_2_Pin);
		break;
	}
}
 8002590:	e017      	b.n	80025c2 <clear_led+0x52>
		helper_clear_led(Traffic_1_1_GPIO_Port, Traffic_1_1_Pin, Traffic_1_2_GPIO_Port, Traffic_1_2_Pin);
 8002592:	2308      	movs	r3, #8
 8002594:	4a0d      	ldr	r2, [pc, #52]	; (80025cc <clear_led+0x5c>)
 8002596:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800259a:	480d      	ldr	r0, [pc, #52]	; (80025d0 <clear_led+0x60>)
 800259c:	f7ff ffd0 	bl	8002540 <helper_clear_led>
		break;
 80025a0:	e00f      	b.n	80025c2 <clear_led+0x52>
		helper_clear_led(Traffic_2_1_GPIO_Port, Traffic_2_1_Pin, Traffic_2_2_GPIO_Port, Traffic_2_2_Pin);
 80025a2:	2310      	movs	r3, #16
 80025a4:	4a09      	ldr	r2, [pc, #36]	; (80025cc <clear_led+0x5c>)
 80025a6:	2120      	movs	r1, #32
 80025a8:	4808      	ldr	r0, [pc, #32]	; (80025cc <clear_led+0x5c>)
 80025aa:	f7ff ffc9 	bl	8002540 <helper_clear_led>
		break;
 80025ae:	e008      	b.n	80025c2 <clear_led+0x52>
		helper_clear_led(Traffic_Pedes_1_GPIO_Port, Traffic_Pedes_1_Pin, Traffic_Pedes_2_GPIO_Port, Traffic_Pedes_2_Pin);
 80025b0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80025b4:	4a06      	ldr	r2, [pc, #24]	; (80025d0 <clear_led+0x60>)
 80025b6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80025ba:	4804      	ldr	r0, [pc, #16]	; (80025cc <clear_led+0x5c>)
 80025bc:	f7ff ffc0 	bl	8002540 <helper_clear_led>
		break;
 80025c0:	bf00      	nop
}
 80025c2:	bf00      	nop
 80025c4:	3708      	adds	r7, #8
 80025c6:	46bd      	mov	sp, r7
 80025c8:	bd80      	pop	{r7, pc}
 80025ca:	bf00      	nop
 80025cc:	40010c00 	.word	0x40010c00
 80025d0:	40010800 	.word	0x40010800

080025d4 <Reset_Handler>:
 80025d4:	480c      	ldr	r0, [pc, #48]	; (8002608 <LoopFillZerobss+0x12>)
 80025d6:	490d      	ldr	r1, [pc, #52]	; (800260c <LoopFillZerobss+0x16>)
 80025d8:	4a0d      	ldr	r2, [pc, #52]	; (8002610 <LoopFillZerobss+0x1a>)
 80025da:	2300      	movs	r3, #0
 80025dc:	e002      	b.n	80025e4 <LoopCopyDataInit>

080025de <CopyDataInit>:
 80025de:	58d4      	ldr	r4, [r2, r3]
 80025e0:	50c4      	str	r4, [r0, r3]
 80025e2:	3304      	adds	r3, #4

080025e4 <LoopCopyDataInit>:
 80025e4:	18c4      	adds	r4, r0, r3
 80025e6:	428c      	cmp	r4, r1
 80025e8:	d3f9      	bcc.n	80025de <CopyDataInit>
 80025ea:	4a0a      	ldr	r2, [pc, #40]	; (8002614 <LoopFillZerobss+0x1e>)
 80025ec:	4c0a      	ldr	r4, [pc, #40]	; (8002618 <LoopFillZerobss+0x22>)
 80025ee:	2300      	movs	r3, #0
 80025f0:	e001      	b.n	80025f6 <LoopFillZerobss>

080025f2 <FillZerobss>:
 80025f2:	6013      	str	r3, [r2, #0]
 80025f4:	3204      	adds	r2, #4

080025f6 <LoopFillZerobss>:
 80025f6:	42a2      	cmp	r2, r4
 80025f8:	d3fb      	bcc.n	80025f2 <FillZerobss>
 80025fa:	f7ff febb 	bl	8002374 <SystemInit>
 80025fe:	f002 f8f5 	bl	80047ec <__libc_init_array>
 8002602:	f7fe fe13 	bl	800122c <main>
 8002606:	4770      	bx	lr
 8002608:	20000000 	.word	0x20000000
 800260c:	200000bc 	.word	0x200000bc
 8002610:	08005140 	.word	0x08005140
 8002614:	200000bc 	.word	0x200000bc
 8002618:	200005b8 	.word	0x200005b8

0800261c <ADC1_2_IRQHandler>:
 800261c:	e7fe      	b.n	800261c <ADC1_2_IRQHandler>
	...

08002620 <HAL_Init>:
 8002620:	b580      	push	{r7, lr}
 8002622:	af00      	add	r7, sp, #0
 8002624:	4b08      	ldr	r3, [pc, #32]	; (8002648 <HAL_Init+0x28>)
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	4a07      	ldr	r2, [pc, #28]	; (8002648 <HAL_Init+0x28>)
 800262a:	f043 0310 	orr.w	r3, r3, #16
 800262e:	6013      	str	r3, [r2, #0]
 8002630:	2003      	movs	r0, #3
 8002632:	f000 f963 	bl	80028fc <HAL_NVIC_SetPriorityGrouping>
 8002636:	2000      	movs	r0, #0
 8002638:	f000 f808 	bl	800264c <HAL_InitTick>
 800263c:	f7ff fd32 	bl	80020a4 <HAL_MspInit>
 8002640:	2300      	movs	r3, #0
 8002642:	4618      	mov	r0, r3
 8002644:	bd80      	pop	{r7, pc}
 8002646:	bf00      	nop
 8002648:	40022000 	.word	0x40022000

0800264c <HAL_InitTick>:
 800264c:	b580      	push	{r7, lr}
 800264e:	b082      	sub	sp, #8
 8002650:	af00      	add	r7, sp, #0
 8002652:	6078      	str	r0, [r7, #4]
 8002654:	4b12      	ldr	r3, [pc, #72]	; (80026a0 <HAL_InitTick+0x54>)
 8002656:	681a      	ldr	r2, [r3, #0]
 8002658:	4b12      	ldr	r3, [pc, #72]	; (80026a4 <HAL_InitTick+0x58>)
 800265a:	781b      	ldrb	r3, [r3, #0]
 800265c:	4619      	mov	r1, r3
 800265e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002662:	fbb3 f3f1 	udiv	r3, r3, r1
 8002666:	fbb2 f3f3 	udiv	r3, r2, r3
 800266a:	4618      	mov	r0, r3
 800266c:	f000 f97b 	bl	8002966 <HAL_SYSTICK_Config>
 8002670:	4603      	mov	r3, r0
 8002672:	2b00      	cmp	r3, #0
 8002674:	d001      	beq.n	800267a <HAL_InitTick+0x2e>
 8002676:	2301      	movs	r3, #1
 8002678:	e00e      	b.n	8002698 <HAL_InitTick+0x4c>
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	2b0f      	cmp	r3, #15
 800267e:	d80a      	bhi.n	8002696 <HAL_InitTick+0x4a>
 8002680:	2200      	movs	r2, #0
 8002682:	6879      	ldr	r1, [r7, #4]
 8002684:	f04f 30ff 	mov.w	r0, #4294967295
 8002688:	f000 f943 	bl	8002912 <HAL_NVIC_SetPriority>
 800268c:	4a06      	ldr	r2, [pc, #24]	; (80026a8 <HAL_InitTick+0x5c>)
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	6013      	str	r3, [r2, #0]
 8002692:	2300      	movs	r3, #0
 8002694:	e000      	b.n	8002698 <HAL_InitTick+0x4c>
 8002696:	2301      	movs	r3, #1
 8002698:	4618      	mov	r0, r3
 800269a:	3708      	adds	r7, #8
 800269c:	46bd      	mov	sp, r7
 800269e:	bd80      	pop	{r7, pc}
 80026a0:	2000004c 	.word	0x2000004c
 80026a4:	20000054 	.word	0x20000054
 80026a8:	20000050 	.word	0x20000050

080026ac <HAL_IncTick>:
 80026ac:	b480      	push	{r7}
 80026ae:	af00      	add	r7, sp, #0
 80026b0:	4b05      	ldr	r3, [pc, #20]	; (80026c8 <HAL_IncTick+0x1c>)
 80026b2:	781b      	ldrb	r3, [r3, #0]
 80026b4:	461a      	mov	r2, r3
 80026b6:	4b05      	ldr	r3, [pc, #20]	; (80026cc <HAL_IncTick+0x20>)
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	4413      	add	r3, r2
 80026bc:	4a03      	ldr	r2, [pc, #12]	; (80026cc <HAL_IncTick+0x20>)
 80026be:	6013      	str	r3, [r2, #0]
 80026c0:	bf00      	nop
 80026c2:	46bd      	mov	sp, r7
 80026c4:	bc80      	pop	{r7}
 80026c6:	4770      	bx	lr
 80026c8:	20000054 	.word	0x20000054
 80026cc:	200005a4 	.word	0x200005a4

080026d0 <HAL_GetTick>:
 80026d0:	b480      	push	{r7}
 80026d2:	af00      	add	r7, sp, #0
 80026d4:	4b02      	ldr	r3, [pc, #8]	; (80026e0 <HAL_GetTick+0x10>)
 80026d6:	681b      	ldr	r3, [r3, #0]
 80026d8:	4618      	mov	r0, r3
 80026da:	46bd      	mov	sp, r7
 80026dc:	bc80      	pop	{r7}
 80026de:	4770      	bx	lr
 80026e0:	200005a4 	.word	0x200005a4

080026e4 <HAL_Delay>:
 80026e4:	b580      	push	{r7, lr}
 80026e6:	b084      	sub	sp, #16
 80026e8:	af00      	add	r7, sp, #0
 80026ea:	6078      	str	r0, [r7, #4]
 80026ec:	f7ff fff0 	bl	80026d0 <HAL_GetTick>
 80026f0:	60b8      	str	r0, [r7, #8]
 80026f2:	687b      	ldr	r3, [r7, #4]
 80026f4:	60fb      	str	r3, [r7, #12]
 80026f6:	68fb      	ldr	r3, [r7, #12]
 80026f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80026fc:	d005      	beq.n	800270a <HAL_Delay+0x26>
 80026fe:	4b0a      	ldr	r3, [pc, #40]	; (8002728 <HAL_Delay+0x44>)
 8002700:	781b      	ldrb	r3, [r3, #0]
 8002702:	461a      	mov	r2, r3
 8002704:	68fb      	ldr	r3, [r7, #12]
 8002706:	4413      	add	r3, r2
 8002708:	60fb      	str	r3, [r7, #12]
 800270a:	bf00      	nop
 800270c:	f7ff ffe0 	bl	80026d0 <HAL_GetTick>
 8002710:	4602      	mov	r2, r0
 8002712:	68bb      	ldr	r3, [r7, #8]
 8002714:	1ad3      	subs	r3, r2, r3
 8002716:	68fa      	ldr	r2, [r7, #12]
 8002718:	429a      	cmp	r2, r3
 800271a:	d8f7      	bhi.n	800270c <HAL_Delay+0x28>
 800271c:	bf00      	nop
 800271e:	bf00      	nop
 8002720:	3710      	adds	r7, #16
 8002722:	46bd      	mov	sp, r7
 8002724:	bd80      	pop	{r7, pc}
 8002726:	bf00      	nop
 8002728:	20000054 	.word	0x20000054

0800272c <HAL_SuspendTick>:
 800272c:	b480      	push	{r7}
 800272e:	af00      	add	r7, sp, #0
 8002730:	4b04      	ldr	r3, [pc, #16]	; (8002744 <HAL_SuspendTick+0x18>)
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	4a03      	ldr	r2, [pc, #12]	; (8002744 <HAL_SuspendTick+0x18>)
 8002736:	f023 0302 	bic.w	r3, r3, #2
 800273a:	6013      	str	r3, [r2, #0]
 800273c:	bf00      	nop
 800273e:	46bd      	mov	sp, r7
 8002740:	bc80      	pop	{r7}
 8002742:	4770      	bx	lr
 8002744:	e000e010 	.word	0xe000e010

08002748 <HAL_ResumeTick>:
 8002748:	b480      	push	{r7}
 800274a:	af00      	add	r7, sp, #0
 800274c:	4b04      	ldr	r3, [pc, #16]	; (8002760 <HAL_ResumeTick+0x18>)
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	4a03      	ldr	r2, [pc, #12]	; (8002760 <HAL_ResumeTick+0x18>)
 8002752:	f043 0302 	orr.w	r3, r3, #2
 8002756:	6013      	str	r3, [r2, #0]
 8002758:	bf00      	nop
 800275a:	46bd      	mov	sp, r7
 800275c:	bc80      	pop	{r7}
 800275e:	4770      	bx	lr
 8002760:	e000e010 	.word	0xe000e010

08002764 <__NVIC_SetPriorityGrouping>:
 8002764:	b480      	push	{r7}
 8002766:	b085      	sub	sp, #20
 8002768:	af00      	add	r7, sp, #0
 800276a:	6078      	str	r0, [r7, #4]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	f003 0307 	and.w	r3, r3, #7
 8002772:	60fb      	str	r3, [r7, #12]
 8002774:	4b0c      	ldr	r3, [pc, #48]	; (80027a8 <__NVIC_SetPriorityGrouping+0x44>)
 8002776:	68db      	ldr	r3, [r3, #12]
 8002778:	60bb      	str	r3, [r7, #8]
 800277a:	68ba      	ldr	r2, [r7, #8]
 800277c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002780:	4013      	ands	r3, r2
 8002782:	60bb      	str	r3, [r7, #8]
 8002784:	68fb      	ldr	r3, [r7, #12]
 8002786:	021a      	lsls	r2, r3, #8
 8002788:	68bb      	ldr	r3, [r7, #8]
 800278a:	4313      	orrs	r3, r2
 800278c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002790:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002794:	60bb      	str	r3, [r7, #8]
 8002796:	4a04      	ldr	r2, [pc, #16]	; (80027a8 <__NVIC_SetPriorityGrouping+0x44>)
 8002798:	68bb      	ldr	r3, [r7, #8]
 800279a:	60d3      	str	r3, [r2, #12]
 800279c:	bf00      	nop
 800279e:	3714      	adds	r7, #20
 80027a0:	46bd      	mov	sp, r7
 80027a2:	bc80      	pop	{r7}
 80027a4:	4770      	bx	lr
 80027a6:	bf00      	nop
 80027a8:	e000ed00 	.word	0xe000ed00

080027ac <__NVIC_GetPriorityGrouping>:
 80027ac:	b480      	push	{r7}
 80027ae:	af00      	add	r7, sp, #0
 80027b0:	4b04      	ldr	r3, [pc, #16]	; (80027c4 <__NVIC_GetPriorityGrouping+0x18>)
 80027b2:	68db      	ldr	r3, [r3, #12]
 80027b4:	0a1b      	lsrs	r3, r3, #8
 80027b6:	f003 0307 	and.w	r3, r3, #7
 80027ba:	4618      	mov	r0, r3
 80027bc:	46bd      	mov	sp, r7
 80027be:	bc80      	pop	{r7}
 80027c0:	4770      	bx	lr
 80027c2:	bf00      	nop
 80027c4:	e000ed00 	.word	0xe000ed00

080027c8 <__NVIC_EnableIRQ>:
 80027c8:	b480      	push	{r7}
 80027ca:	b083      	sub	sp, #12
 80027cc:	af00      	add	r7, sp, #0
 80027ce:	4603      	mov	r3, r0
 80027d0:	71fb      	strb	r3, [r7, #7]
 80027d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80027d6:	2b00      	cmp	r3, #0
 80027d8:	db0b      	blt.n	80027f2 <__NVIC_EnableIRQ+0x2a>
 80027da:	79fb      	ldrb	r3, [r7, #7]
 80027dc:	f003 021f 	and.w	r2, r3, #31
 80027e0:	4906      	ldr	r1, [pc, #24]	; (80027fc <__NVIC_EnableIRQ+0x34>)
 80027e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80027e6:	095b      	lsrs	r3, r3, #5
 80027e8:	2001      	movs	r0, #1
 80027ea:	fa00 f202 	lsl.w	r2, r0, r2
 80027ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80027f2:	bf00      	nop
 80027f4:	370c      	adds	r7, #12
 80027f6:	46bd      	mov	sp, r7
 80027f8:	bc80      	pop	{r7}
 80027fa:	4770      	bx	lr
 80027fc:	e000e100 	.word	0xe000e100

08002800 <__NVIC_SetPriority>:
 8002800:	b480      	push	{r7}
 8002802:	b083      	sub	sp, #12
 8002804:	af00      	add	r7, sp, #0
 8002806:	4603      	mov	r3, r0
 8002808:	6039      	str	r1, [r7, #0]
 800280a:	71fb      	strb	r3, [r7, #7]
 800280c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002810:	2b00      	cmp	r3, #0
 8002812:	db0a      	blt.n	800282a <__NVIC_SetPriority+0x2a>
 8002814:	683b      	ldr	r3, [r7, #0]
 8002816:	b2da      	uxtb	r2, r3
 8002818:	490c      	ldr	r1, [pc, #48]	; (800284c <__NVIC_SetPriority+0x4c>)
 800281a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800281e:	0112      	lsls	r2, r2, #4
 8002820:	b2d2      	uxtb	r2, r2
 8002822:	440b      	add	r3, r1
 8002824:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002828:	e00a      	b.n	8002840 <__NVIC_SetPriority+0x40>
 800282a:	683b      	ldr	r3, [r7, #0]
 800282c:	b2da      	uxtb	r2, r3
 800282e:	4908      	ldr	r1, [pc, #32]	; (8002850 <__NVIC_SetPriority+0x50>)
 8002830:	79fb      	ldrb	r3, [r7, #7]
 8002832:	f003 030f 	and.w	r3, r3, #15
 8002836:	3b04      	subs	r3, #4
 8002838:	0112      	lsls	r2, r2, #4
 800283a:	b2d2      	uxtb	r2, r2
 800283c:	440b      	add	r3, r1
 800283e:	761a      	strb	r2, [r3, #24]
 8002840:	bf00      	nop
 8002842:	370c      	adds	r7, #12
 8002844:	46bd      	mov	sp, r7
 8002846:	bc80      	pop	{r7}
 8002848:	4770      	bx	lr
 800284a:	bf00      	nop
 800284c:	e000e100 	.word	0xe000e100
 8002850:	e000ed00 	.word	0xe000ed00

08002854 <NVIC_EncodePriority>:
 8002854:	b480      	push	{r7}
 8002856:	b089      	sub	sp, #36	; 0x24
 8002858:	af00      	add	r7, sp, #0
 800285a:	60f8      	str	r0, [r7, #12]
 800285c:	60b9      	str	r1, [r7, #8]
 800285e:	607a      	str	r2, [r7, #4]
 8002860:	68fb      	ldr	r3, [r7, #12]
 8002862:	f003 0307 	and.w	r3, r3, #7
 8002866:	61fb      	str	r3, [r7, #28]
 8002868:	69fb      	ldr	r3, [r7, #28]
 800286a:	f1c3 0307 	rsb	r3, r3, #7
 800286e:	2b04      	cmp	r3, #4
 8002870:	bf28      	it	cs
 8002872:	2304      	movcs	r3, #4
 8002874:	61bb      	str	r3, [r7, #24]
 8002876:	69fb      	ldr	r3, [r7, #28]
 8002878:	3304      	adds	r3, #4
 800287a:	2b06      	cmp	r3, #6
 800287c:	d902      	bls.n	8002884 <NVIC_EncodePriority+0x30>
 800287e:	69fb      	ldr	r3, [r7, #28]
 8002880:	3b03      	subs	r3, #3
 8002882:	e000      	b.n	8002886 <NVIC_EncodePriority+0x32>
 8002884:	2300      	movs	r3, #0
 8002886:	617b      	str	r3, [r7, #20]
 8002888:	f04f 32ff 	mov.w	r2, #4294967295
 800288c:	69bb      	ldr	r3, [r7, #24]
 800288e:	fa02 f303 	lsl.w	r3, r2, r3
 8002892:	43da      	mvns	r2, r3
 8002894:	68bb      	ldr	r3, [r7, #8]
 8002896:	401a      	ands	r2, r3
 8002898:	697b      	ldr	r3, [r7, #20]
 800289a:	409a      	lsls	r2, r3
 800289c:	f04f 31ff 	mov.w	r1, #4294967295
 80028a0:	697b      	ldr	r3, [r7, #20]
 80028a2:	fa01 f303 	lsl.w	r3, r1, r3
 80028a6:	43d9      	mvns	r1, r3
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	400b      	ands	r3, r1
 80028ac:	4313      	orrs	r3, r2
 80028ae:	4618      	mov	r0, r3
 80028b0:	3724      	adds	r7, #36	; 0x24
 80028b2:	46bd      	mov	sp, r7
 80028b4:	bc80      	pop	{r7}
 80028b6:	4770      	bx	lr

080028b8 <SysTick_Config>:
 80028b8:	b580      	push	{r7, lr}
 80028ba:	b082      	sub	sp, #8
 80028bc:	af00      	add	r7, sp, #0
 80028be:	6078      	str	r0, [r7, #4]
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	3b01      	subs	r3, #1
 80028c4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80028c8:	d301      	bcc.n	80028ce <SysTick_Config+0x16>
 80028ca:	2301      	movs	r3, #1
 80028cc:	e00f      	b.n	80028ee <SysTick_Config+0x36>
 80028ce:	4a0a      	ldr	r2, [pc, #40]	; (80028f8 <SysTick_Config+0x40>)
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	3b01      	subs	r3, #1
 80028d4:	6053      	str	r3, [r2, #4]
 80028d6:	210f      	movs	r1, #15
 80028d8:	f04f 30ff 	mov.w	r0, #4294967295
 80028dc:	f7ff ff90 	bl	8002800 <__NVIC_SetPriority>
 80028e0:	4b05      	ldr	r3, [pc, #20]	; (80028f8 <SysTick_Config+0x40>)
 80028e2:	2200      	movs	r2, #0
 80028e4:	609a      	str	r2, [r3, #8]
 80028e6:	4b04      	ldr	r3, [pc, #16]	; (80028f8 <SysTick_Config+0x40>)
 80028e8:	2207      	movs	r2, #7
 80028ea:	601a      	str	r2, [r3, #0]
 80028ec:	2300      	movs	r3, #0
 80028ee:	4618      	mov	r0, r3
 80028f0:	3708      	adds	r7, #8
 80028f2:	46bd      	mov	sp, r7
 80028f4:	bd80      	pop	{r7, pc}
 80028f6:	bf00      	nop
 80028f8:	e000e010 	.word	0xe000e010

080028fc <HAL_NVIC_SetPriorityGrouping>:
 80028fc:	b580      	push	{r7, lr}
 80028fe:	b082      	sub	sp, #8
 8002900:	af00      	add	r7, sp, #0
 8002902:	6078      	str	r0, [r7, #4]
 8002904:	6878      	ldr	r0, [r7, #4]
 8002906:	f7ff ff2d 	bl	8002764 <__NVIC_SetPriorityGrouping>
 800290a:	bf00      	nop
 800290c:	3708      	adds	r7, #8
 800290e:	46bd      	mov	sp, r7
 8002910:	bd80      	pop	{r7, pc}

08002912 <HAL_NVIC_SetPriority>:
 8002912:	b580      	push	{r7, lr}
 8002914:	b086      	sub	sp, #24
 8002916:	af00      	add	r7, sp, #0
 8002918:	4603      	mov	r3, r0
 800291a:	60b9      	str	r1, [r7, #8]
 800291c:	607a      	str	r2, [r7, #4]
 800291e:	73fb      	strb	r3, [r7, #15]
 8002920:	2300      	movs	r3, #0
 8002922:	617b      	str	r3, [r7, #20]
 8002924:	f7ff ff42 	bl	80027ac <__NVIC_GetPriorityGrouping>
 8002928:	6178      	str	r0, [r7, #20]
 800292a:	687a      	ldr	r2, [r7, #4]
 800292c:	68b9      	ldr	r1, [r7, #8]
 800292e:	6978      	ldr	r0, [r7, #20]
 8002930:	f7ff ff90 	bl	8002854 <NVIC_EncodePriority>
 8002934:	4602      	mov	r2, r0
 8002936:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800293a:	4611      	mov	r1, r2
 800293c:	4618      	mov	r0, r3
 800293e:	f7ff ff5f 	bl	8002800 <__NVIC_SetPriority>
 8002942:	bf00      	nop
 8002944:	3718      	adds	r7, #24
 8002946:	46bd      	mov	sp, r7
 8002948:	bd80      	pop	{r7, pc}

0800294a <HAL_NVIC_EnableIRQ>:
 800294a:	b580      	push	{r7, lr}
 800294c:	b082      	sub	sp, #8
 800294e:	af00      	add	r7, sp, #0
 8002950:	4603      	mov	r3, r0
 8002952:	71fb      	strb	r3, [r7, #7]
 8002954:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002958:	4618      	mov	r0, r3
 800295a:	f7ff ff35 	bl	80027c8 <__NVIC_EnableIRQ>
 800295e:	bf00      	nop
 8002960:	3708      	adds	r7, #8
 8002962:	46bd      	mov	sp, r7
 8002964:	bd80      	pop	{r7, pc}

08002966 <HAL_SYSTICK_Config>:
 8002966:	b580      	push	{r7, lr}
 8002968:	b082      	sub	sp, #8
 800296a:	af00      	add	r7, sp, #0
 800296c:	6078      	str	r0, [r7, #4]
 800296e:	6878      	ldr	r0, [r7, #4]
 8002970:	f7ff ffa2 	bl	80028b8 <SysTick_Config>
 8002974:	4603      	mov	r3, r0
 8002976:	4618      	mov	r0, r3
 8002978:	3708      	adds	r7, #8
 800297a:	46bd      	mov	sp, r7
 800297c:	bd80      	pop	{r7, pc}
	...

08002980 <HAL_GPIO_Init>:
 8002980:	b480      	push	{r7}
 8002982:	b08b      	sub	sp, #44	; 0x2c
 8002984:	af00      	add	r7, sp, #0
 8002986:	6078      	str	r0, [r7, #4]
 8002988:	6039      	str	r1, [r7, #0]
 800298a:	2300      	movs	r3, #0
 800298c:	627b      	str	r3, [r7, #36]	; 0x24
 800298e:	2300      	movs	r3, #0
 8002990:	623b      	str	r3, [r7, #32]
 8002992:	e169      	b.n	8002c68 <HAL_GPIO_Init+0x2e8>
 8002994:	2201      	movs	r2, #1
 8002996:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002998:	fa02 f303 	lsl.w	r3, r2, r3
 800299c:	61fb      	str	r3, [r7, #28]
 800299e:	683b      	ldr	r3, [r7, #0]
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	69fa      	ldr	r2, [r7, #28]
 80029a4:	4013      	ands	r3, r2
 80029a6:	61bb      	str	r3, [r7, #24]
 80029a8:	69ba      	ldr	r2, [r7, #24]
 80029aa:	69fb      	ldr	r3, [r7, #28]
 80029ac:	429a      	cmp	r2, r3
 80029ae:	f040 8158 	bne.w	8002c62 <HAL_GPIO_Init+0x2e2>
 80029b2:	683b      	ldr	r3, [r7, #0]
 80029b4:	685b      	ldr	r3, [r3, #4]
 80029b6:	4a9a      	ldr	r2, [pc, #616]	; (8002c20 <HAL_GPIO_Init+0x2a0>)
 80029b8:	4293      	cmp	r3, r2
 80029ba:	d05e      	beq.n	8002a7a <HAL_GPIO_Init+0xfa>
 80029bc:	4a98      	ldr	r2, [pc, #608]	; (8002c20 <HAL_GPIO_Init+0x2a0>)
 80029be:	4293      	cmp	r3, r2
 80029c0:	d875      	bhi.n	8002aae <HAL_GPIO_Init+0x12e>
 80029c2:	4a98      	ldr	r2, [pc, #608]	; (8002c24 <HAL_GPIO_Init+0x2a4>)
 80029c4:	4293      	cmp	r3, r2
 80029c6:	d058      	beq.n	8002a7a <HAL_GPIO_Init+0xfa>
 80029c8:	4a96      	ldr	r2, [pc, #600]	; (8002c24 <HAL_GPIO_Init+0x2a4>)
 80029ca:	4293      	cmp	r3, r2
 80029cc:	d86f      	bhi.n	8002aae <HAL_GPIO_Init+0x12e>
 80029ce:	4a96      	ldr	r2, [pc, #600]	; (8002c28 <HAL_GPIO_Init+0x2a8>)
 80029d0:	4293      	cmp	r3, r2
 80029d2:	d052      	beq.n	8002a7a <HAL_GPIO_Init+0xfa>
 80029d4:	4a94      	ldr	r2, [pc, #592]	; (8002c28 <HAL_GPIO_Init+0x2a8>)
 80029d6:	4293      	cmp	r3, r2
 80029d8:	d869      	bhi.n	8002aae <HAL_GPIO_Init+0x12e>
 80029da:	4a94      	ldr	r2, [pc, #592]	; (8002c2c <HAL_GPIO_Init+0x2ac>)
 80029dc:	4293      	cmp	r3, r2
 80029de:	d04c      	beq.n	8002a7a <HAL_GPIO_Init+0xfa>
 80029e0:	4a92      	ldr	r2, [pc, #584]	; (8002c2c <HAL_GPIO_Init+0x2ac>)
 80029e2:	4293      	cmp	r3, r2
 80029e4:	d863      	bhi.n	8002aae <HAL_GPIO_Init+0x12e>
 80029e6:	4a92      	ldr	r2, [pc, #584]	; (8002c30 <HAL_GPIO_Init+0x2b0>)
 80029e8:	4293      	cmp	r3, r2
 80029ea:	d046      	beq.n	8002a7a <HAL_GPIO_Init+0xfa>
 80029ec:	4a90      	ldr	r2, [pc, #576]	; (8002c30 <HAL_GPIO_Init+0x2b0>)
 80029ee:	4293      	cmp	r3, r2
 80029f0:	d85d      	bhi.n	8002aae <HAL_GPIO_Init+0x12e>
 80029f2:	2b12      	cmp	r3, #18
 80029f4:	d82a      	bhi.n	8002a4c <HAL_GPIO_Init+0xcc>
 80029f6:	2b12      	cmp	r3, #18
 80029f8:	d859      	bhi.n	8002aae <HAL_GPIO_Init+0x12e>
 80029fa:	a201      	add	r2, pc, #4	; (adr r2, 8002a00 <HAL_GPIO_Init+0x80>)
 80029fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002a00:	08002a7b 	.word	0x08002a7b
 8002a04:	08002a55 	.word	0x08002a55
 8002a08:	08002a67 	.word	0x08002a67
 8002a0c:	08002aa9 	.word	0x08002aa9
 8002a10:	08002aaf 	.word	0x08002aaf
 8002a14:	08002aaf 	.word	0x08002aaf
 8002a18:	08002aaf 	.word	0x08002aaf
 8002a1c:	08002aaf 	.word	0x08002aaf
 8002a20:	08002aaf 	.word	0x08002aaf
 8002a24:	08002aaf 	.word	0x08002aaf
 8002a28:	08002aaf 	.word	0x08002aaf
 8002a2c:	08002aaf 	.word	0x08002aaf
 8002a30:	08002aaf 	.word	0x08002aaf
 8002a34:	08002aaf 	.word	0x08002aaf
 8002a38:	08002aaf 	.word	0x08002aaf
 8002a3c:	08002aaf 	.word	0x08002aaf
 8002a40:	08002aaf 	.word	0x08002aaf
 8002a44:	08002a5d 	.word	0x08002a5d
 8002a48:	08002a71 	.word	0x08002a71
 8002a4c:	4a79      	ldr	r2, [pc, #484]	; (8002c34 <HAL_GPIO_Init+0x2b4>)
 8002a4e:	4293      	cmp	r3, r2
 8002a50:	d013      	beq.n	8002a7a <HAL_GPIO_Init+0xfa>
 8002a52:	e02c      	b.n	8002aae <HAL_GPIO_Init+0x12e>
 8002a54:	683b      	ldr	r3, [r7, #0]
 8002a56:	68db      	ldr	r3, [r3, #12]
 8002a58:	623b      	str	r3, [r7, #32]
 8002a5a:	e029      	b.n	8002ab0 <HAL_GPIO_Init+0x130>
 8002a5c:	683b      	ldr	r3, [r7, #0]
 8002a5e:	68db      	ldr	r3, [r3, #12]
 8002a60:	3304      	adds	r3, #4
 8002a62:	623b      	str	r3, [r7, #32]
 8002a64:	e024      	b.n	8002ab0 <HAL_GPIO_Init+0x130>
 8002a66:	683b      	ldr	r3, [r7, #0]
 8002a68:	68db      	ldr	r3, [r3, #12]
 8002a6a:	3308      	adds	r3, #8
 8002a6c:	623b      	str	r3, [r7, #32]
 8002a6e:	e01f      	b.n	8002ab0 <HAL_GPIO_Init+0x130>
 8002a70:	683b      	ldr	r3, [r7, #0]
 8002a72:	68db      	ldr	r3, [r3, #12]
 8002a74:	330c      	adds	r3, #12
 8002a76:	623b      	str	r3, [r7, #32]
 8002a78:	e01a      	b.n	8002ab0 <HAL_GPIO_Init+0x130>
 8002a7a:	683b      	ldr	r3, [r7, #0]
 8002a7c:	689b      	ldr	r3, [r3, #8]
 8002a7e:	2b00      	cmp	r3, #0
 8002a80:	d102      	bne.n	8002a88 <HAL_GPIO_Init+0x108>
 8002a82:	2304      	movs	r3, #4
 8002a84:	623b      	str	r3, [r7, #32]
 8002a86:	e013      	b.n	8002ab0 <HAL_GPIO_Init+0x130>
 8002a88:	683b      	ldr	r3, [r7, #0]
 8002a8a:	689b      	ldr	r3, [r3, #8]
 8002a8c:	2b01      	cmp	r3, #1
 8002a8e:	d105      	bne.n	8002a9c <HAL_GPIO_Init+0x11c>
 8002a90:	2308      	movs	r3, #8
 8002a92:	623b      	str	r3, [r7, #32]
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	69fa      	ldr	r2, [r7, #28]
 8002a98:	611a      	str	r2, [r3, #16]
 8002a9a:	e009      	b.n	8002ab0 <HAL_GPIO_Init+0x130>
 8002a9c:	2308      	movs	r3, #8
 8002a9e:	623b      	str	r3, [r7, #32]
 8002aa0:	687b      	ldr	r3, [r7, #4]
 8002aa2:	69fa      	ldr	r2, [r7, #28]
 8002aa4:	615a      	str	r2, [r3, #20]
 8002aa6:	e003      	b.n	8002ab0 <HAL_GPIO_Init+0x130>
 8002aa8:	2300      	movs	r3, #0
 8002aaa:	623b      	str	r3, [r7, #32]
 8002aac:	e000      	b.n	8002ab0 <HAL_GPIO_Init+0x130>
 8002aae:	bf00      	nop
 8002ab0:	69bb      	ldr	r3, [r7, #24]
 8002ab2:	2bff      	cmp	r3, #255	; 0xff
 8002ab4:	d801      	bhi.n	8002aba <HAL_GPIO_Init+0x13a>
 8002ab6:	687b      	ldr	r3, [r7, #4]
 8002ab8:	e001      	b.n	8002abe <HAL_GPIO_Init+0x13e>
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	3304      	adds	r3, #4
 8002abe:	617b      	str	r3, [r7, #20]
 8002ac0:	69bb      	ldr	r3, [r7, #24]
 8002ac2:	2bff      	cmp	r3, #255	; 0xff
 8002ac4:	d802      	bhi.n	8002acc <HAL_GPIO_Init+0x14c>
 8002ac6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ac8:	009b      	lsls	r3, r3, #2
 8002aca:	e002      	b.n	8002ad2 <HAL_GPIO_Init+0x152>
 8002acc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ace:	3b08      	subs	r3, #8
 8002ad0:	009b      	lsls	r3, r3, #2
 8002ad2:	613b      	str	r3, [r7, #16]
 8002ad4:	697b      	ldr	r3, [r7, #20]
 8002ad6:	681a      	ldr	r2, [r3, #0]
 8002ad8:	210f      	movs	r1, #15
 8002ada:	693b      	ldr	r3, [r7, #16]
 8002adc:	fa01 f303 	lsl.w	r3, r1, r3
 8002ae0:	43db      	mvns	r3, r3
 8002ae2:	401a      	ands	r2, r3
 8002ae4:	6a39      	ldr	r1, [r7, #32]
 8002ae6:	693b      	ldr	r3, [r7, #16]
 8002ae8:	fa01 f303 	lsl.w	r3, r1, r3
 8002aec:	431a      	orrs	r2, r3
 8002aee:	697b      	ldr	r3, [r7, #20]
 8002af0:	601a      	str	r2, [r3, #0]
 8002af2:	683b      	ldr	r3, [r7, #0]
 8002af4:	685b      	ldr	r3, [r3, #4]
 8002af6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	f000 80b1 	beq.w	8002c62 <HAL_GPIO_Init+0x2e2>
 8002b00:	4b4d      	ldr	r3, [pc, #308]	; (8002c38 <HAL_GPIO_Init+0x2b8>)
 8002b02:	699b      	ldr	r3, [r3, #24]
 8002b04:	4a4c      	ldr	r2, [pc, #304]	; (8002c38 <HAL_GPIO_Init+0x2b8>)
 8002b06:	f043 0301 	orr.w	r3, r3, #1
 8002b0a:	6193      	str	r3, [r2, #24]
 8002b0c:	4b4a      	ldr	r3, [pc, #296]	; (8002c38 <HAL_GPIO_Init+0x2b8>)
 8002b0e:	699b      	ldr	r3, [r3, #24]
 8002b10:	f003 0301 	and.w	r3, r3, #1
 8002b14:	60bb      	str	r3, [r7, #8]
 8002b16:	68bb      	ldr	r3, [r7, #8]
 8002b18:	4a48      	ldr	r2, [pc, #288]	; (8002c3c <HAL_GPIO_Init+0x2bc>)
 8002b1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b1c:	089b      	lsrs	r3, r3, #2
 8002b1e:	3302      	adds	r3, #2
 8002b20:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002b24:	60fb      	str	r3, [r7, #12]
 8002b26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b28:	f003 0303 	and.w	r3, r3, #3
 8002b2c:	009b      	lsls	r3, r3, #2
 8002b2e:	220f      	movs	r2, #15
 8002b30:	fa02 f303 	lsl.w	r3, r2, r3
 8002b34:	43db      	mvns	r3, r3
 8002b36:	68fa      	ldr	r2, [r7, #12]
 8002b38:	4013      	ands	r3, r2
 8002b3a:	60fb      	str	r3, [r7, #12]
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	4a40      	ldr	r2, [pc, #256]	; (8002c40 <HAL_GPIO_Init+0x2c0>)
 8002b40:	4293      	cmp	r3, r2
 8002b42:	d013      	beq.n	8002b6c <HAL_GPIO_Init+0x1ec>
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	4a3f      	ldr	r2, [pc, #252]	; (8002c44 <HAL_GPIO_Init+0x2c4>)
 8002b48:	4293      	cmp	r3, r2
 8002b4a:	d00d      	beq.n	8002b68 <HAL_GPIO_Init+0x1e8>
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	4a3e      	ldr	r2, [pc, #248]	; (8002c48 <HAL_GPIO_Init+0x2c8>)
 8002b50:	4293      	cmp	r3, r2
 8002b52:	d007      	beq.n	8002b64 <HAL_GPIO_Init+0x1e4>
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	4a3d      	ldr	r2, [pc, #244]	; (8002c4c <HAL_GPIO_Init+0x2cc>)
 8002b58:	4293      	cmp	r3, r2
 8002b5a:	d101      	bne.n	8002b60 <HAL_GPIO_Init+0x1e0>
 8002b5c:	2303      	movs	r3, #3
 8002b5e:	e006      	b.n	8002b6e <HAL_GPIO_Init+0x1ee>
 8002b60:	2304      	movs	r3, #4
 8002b62:	e004      	b.n	8002b6e <HAL_GPIO_Init+0x1ee>
 8002b64:	2302      	movs	r3, #2
 8002b66:	e002      	b.n	8002b6e <HAL_GPIO_Init+0x1ee>
 8002b68:	2301      	movs	r3, #1
 8002b6a:	e000      	b.n	8002b6e <HAL_GPIO_Init+0x1ee>
 8002b6c:	2300      	movs	r3, #0
 8002b6e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002b70:	f002 0203 	and.w	r2, r2, #3
 8002b74:	0092      	lsls	r2, r2, #2
 8002b76:	4093      	lsls	r3, r2
 8002b78:	68fa      	ldr	r2, [r7, #12]
 8002b7a:	4313      	orrs	r3, r2
 8002b7c:	60fb      	str	r3, [r7, #12]
 8002b7e:	492f      	ldr	r1, [pc, #188]	; (8002c3c <HAL_GPIO_Init+0x2bc>)
 8002b80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b82:	089b      	lsrs	r3, r3, #2
 8002b84:	3302      	adds	r3, #2
 8002b86:	68fa      	ldr	r2, [r7, #12]
 8002b88:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002b8c:	683b      	ldr	r3, [r7, #0]
 8002b8e:	685b      	ldr	r3, [r3, #4]
 8002b90:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d006      	beq.n	8002ba6 <HAL_GPIO_Init+0x226>
 8002b98:	4b2d      	ldr	r3, [pc, #180]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002b9a:	681a      	ldr	r2, [r3, #0]
 8002b9c:	492c      	ldr	r1, [pc, #176]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002b9e:	69bb      	ldr	r3, [r7, #24]
 8002ba0:	4313      	orrs	r3, r2
 8002ba2:	600b      	str	r3, [r1, #0]
 8002ba4:	e006      	b.n	8002bb4 <HAL_GPIO_Init+0x234>
 8002ba6:	4b2a      	ldr	r3, [pc, #168]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002ba8:	681a      	ldr	r2, [r3, #0]
 8002baa:	69bb      	ldr	r3, [r7, #24]
 8002bac:	43db      	mvns	r3, r3
 8002bae:	4928      	ldr	r1, [pc, #160]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002bb0:	4013      	ands	r3, r2
 8002bb2:	600b      	str	r3, [r1, #0]
 8002bb4:	683b      	ldr	r3, [r7, #0]
 8002bb6:	685b      	ldr	r3, [r3, #4]
 8002bb8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	d006      	beq.n	8002bce <HAL_GPIO_Init+0x24e>
 8002bc0:	4b23      	ldr	r3, [pc, #140]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002bc2:	685a      	ldr	r2, [r3, #4]
 8002bc4:	4922      	ldr	r1, [pc, #136]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002bc6:	69bb      	ldr	r3, [r7, #24]
 8002bc8:	4313      	orrs	r3, r2
 8002bca:	604b      	str	r3, [r1, #4]
 8002bcc:	e006      	b.n	8002bdc <HAL_GPIO_Init+0x25c>
 8002bce:	4b20      	ldr	r3, [pc, #128]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002bd0:	685a      	ldr	r2, [r3, #4]
 8002bd2:	69bb      	ldr	r3, [r7, #24]
 8002bd4:	43db      	mvns	r3, r3
 8002bd6:	491e      	ldr	r1, [pc, #120]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002bd8:	4013      	ands	r3, r2
 8002bda:	604b      	str	r3, [r1, #4]
 8002bdc:	683b      	ldr	r3, [r7, #0]
 8002bde:	685b      	ldr	r3, [r3, #4]
 8002be0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002be4:	2b00      	cmp	r3, #0
 8002be6:	d006      	beq.n	8002bf6 <HAL_GPIO_Init+0x276>
 8002be8:	4b19      	ldr	r3, [pc, #100]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002bea:	689a      	ldr	r2, [r3, #8]
 8002bec:	4918      	ldr	r1, [pc, #96]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002bee:	69bb      	ldr	r3, [r7, #24]
 8002bf0:	4313      	orrs	r3, r2
 8002bf2:	608b      	str	r3, [r1, #8]
 8002bf4:	e006      	b.n	8002c04 <HAL_GPIO_Init+0x284>
 8002bf6:	4b16      	ldr	r3, [pc, #88]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002bf8:	689a      	ldr	r2, [r3, #8]
 8002bfa:	69bb      	ldr	r3, [r7, #24]
 8002bfc:	43db      	mvns	r3, r3
 8002bfe:	4914      	ldr	r1, [pc, #80]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002c00:	4013      	ands	r3, r2
 8002c02:	608b      	str	r3, [r1, #8]
 8002c04:	683b      	ldr	r3, [r7, #0]
 8002c06:	685b      	ldr	r3, [r3, #4]
 8002c08:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002c0c:	2b00      	cmp	r3, #0
 8002c0e:	d021      	beq.n	8002c54 <HAL_GPIO_Init+0x2d4>
 8002c10:	4b0f      	ldr	r3, [pc, #60]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002c12:	68da      	ldr	r2, [r3, #12]
 8002c14:	490e      	ldr	r1, [pc, #56]	; (8002c50 <HAL_GPIO_Init+0x2d0>)
 8002c16:	69bb      	ldr	r3, [r7, #24]
 8002c18:	4313      	orrs	r3, r2
 8002c1a:	60cb      	str	r3, [r1, #12]
 8002c1c:	e021      	b.n	8002c62 <HAL_GPIO_Init+0x2e2>
 8002c1e:	bf00      	nop
 8002c20:	10320000 	.word	0x10320000
 8002c24:	10310000 	.word	0x10310000
 8002c28:	10220000 	.word	0x10220000
 8002c2c:	10210000 	.word	0x10210000
 8002c30:	10120000 	.word	0x10120000
 8002c34:	10110000 	.word	0x10110000
 8002c38:	40021000 	.word	0x40021000
 8002c3c:	40010000 	.word	0x40010000
 8002c40:	40010800 	.word	0x40010800
 8002c44:	40010c00 	.word	0x40010c00
 8002c48:	40011000 	.word	0x40011000
 8002c4c:	40011400 	.word	0x40011400
 8002c50:	40010400 	.word	0x40010400
 8002c54:	4b0b      	ldr	r3, [pc, #44]	; (8002c84 <HAL_GPIO_Init+0x304>)
 8002c56:	68da      	ldr	r2, [r3, #12]
 8002c58:	69bb      	ldr	r3, [r7, #24]
 8002c5a:	43db      	mvns	r3, r3
 8002c5c:	4909      	ldr	r1, [pc, #36]	; (8002c84 <HAL_GPIO_Init+0x304>)
 8002c5e:	4013      	ands	r3, r2
 8002c60:	60cb      	str	r3, [r1, #12]
 8002c62:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c64:	3301      	adds	r3, #1
 8002c66:	627b      	str	r3, [r7, #36]	; 0x24
 8002c68:	683b      	ldr	r3, [r7, #0]
 8002c6a:	681a      	ldr	r2, [r3, #0]
 8002c6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c6e:	fa22 f303 	lsr.w	r3, r2, r3
 8002c72:	2b00      	cmp	r3, #0
 8002c74:	f47f ae8e 	bne.w	8002994 <HAL_GPIO_Init+0x14>
 8002c78:	bf00      	nop
 8002c7a:	bf00      	nop
 8002c7c:	372c      	adds	r7, #44	; 0x2c
 8002c7e:	46bd      	mov	sp, r7
 8002c80:	bc80      	pop	{r7}
 8002c82:	4770      	bx	lr
 8002c84:	40010400 	.word	0x40010400

08002c88 <HAL_GPIO_ReadPin>:
 8002c88:	b480      	push	{r7}
 8002c8a:	b085      	sub	sp, #20
 8002c8c:	af00      	add	r7, sp, #0
 8002c8e:	6078      	str	r0, [r7, #4]
 8002c90:	460b      	mov	r3, r1
 8002c92:	807b      	strh	r3, [r7, #2]
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	689a      	ldr	r2, [r3, #8]
 8002c98:	887b      	ldrh	r3, [r7, #2]
 8002c9a:	4013      	ands	r3, r2
 8002c9c:	2b00      	cmp	r3, #0
 8002c9e:	d002      	beq.n	8002ca6 <HAL_GPIO_ReadPin+0x1e>
 8002ca0:	2301      	movs	r3, #1
 8002ca2:	73fb      	strb	r3, [r7, #15]
 8002ca4:	e001      	b.n	8002caa <HAL_GPIO_ReadPin+0x22>
 8002ca6:	2300      	movs	r3, #0
 8002ca8:	73fb      	strb	r3, [r7, #15]
 8002caa:	7bfb      	ldrb	r3, [r7, #15]
 8002cac:	4618      	mov	r0, r3
 8002cae:	3714      	adds	r7, #20
 8002cb0:	46bd      	mov	sp, r7
 8002cb2:	bc80      	pop	{r7}
 8002cb4:	4770      	bx	lr

08002cb6 <HAL_GPIO_WritePin>:
 8002cb6:	b480      	push	{r7}
 8002cb8:	b083      	sub	sp, #12
 8002cba:	af00      	add	r7, sp, #0
 8002cbc:	6078      	str	r0, [r7, #4]
 8002cbe:	460b      	mov	r3, r1
 8002cc0:	807b      	strh	r3, [r7, #2]
 8002cc2:	4613      	mov	r3, r2
 8002cc4:	707b      	strb	r3, [r7, #1]
 8002cc6:	787b      	ldrb	r3, [r7, #1]
 8002cc8:	2b00      	cmp	r3, #0
 8002cca:	d003      	beq.n	8002cd4 <HAL_GPIO_WritePin+0x1e>
 8002ccc:	887a      	ldrh	r2, [r7, #2]
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	611a      	str	r2, [r3, #16]
 8002cd2:	e003      	b.n	8002cdc <HAL_GPIO_WritePin+0x26>
 8002cd4:	887b      	ldrh	r3, [r7, #2]
 8002cd6:	041a      	lsls	r2, r3, #16
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	611a      	str	r2, [r3, #16]
 8002cdc:	bf00      	nop
 8002cde:	370c      	adds	r7, #12
 8002ce0:	46bd      	mov	sp, r7
 8002ce2:	bc80      	pop	{r7}
 8002ce4:	4770      	bx	lr

08002ce6 <HAL_GPIO_TogglePin>:
 8002ce6:	b480      	push	{r7}
 8002ce8:	b085      	sub	sp, #20
 8002cea:	af00      	add	r7, sp, #0
 8002cec:	6078      	str	r0, [r7, #4]
 8002cee:	460b      	mov	r3, r1
 8002cf0:	807b      	strh	r3, [r7, #2]
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	68db      	ldr	r3, [r3, #12]
 8002cf6:	60fb      	str	r3, [r7, #12]
 8002cf8:	887a      	ldrh	r2, [r7, #2]
 8002cfa:	68fb      	ldr	r3, [r7, #12]
 8002cfc:	4013      	ands	r3, r2
 8002cfe:	041a      	lsls	r2, r3, #16
 8002d00:	68fb      	ldr	r3, [r7, #12]
 8002d02:	43d9      	mvns	r1, r3
 8002d04:	887b      	ldrh	r3, [r7, #2]
 8002d06:	400b      	ands	r3, r1
 8002d08:	431a      	orrs	r2, r3
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	611a      	str	r2, [r3, #16]
 8002d0e:	bf00      	nop
 8002d10:	3714      	adds	r7, #20
 8002d12:	46bd      	mov	sp, r7
 8002d14:	bc80      	pop	{r7}
 8002d16:	4770      	bx	lr

08002d18 <HAL_GPIO_EXTI_IRQHandler>:
 8002d18:	b580      	push	{r7, lr}
 8002d1a:	b082      	sub	sp, #8
 8002d1c:	af00      	add	r7, sp, #0
 8002d1e:	4603      	mov	r3, r0
 8002d20:	80fb      	strh	r3, [r7, #6]
 8002d22:	4b08      	ldr	r3, [pc, #32]	; (8002d44 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002d24:	695a      	ldr	r2, [r3, #20]
 8002d26:	88fb      	ldrh	r3, [r7, #6]
 8002d28:	4013      	ands	r3, r2
 8002d2a:	2b00      	cmp	r3, #0
 8002d2c:	d006      	beq.n	8002d3c <HAL_GPIO_EXTI_IRQHandler+0x24>
 8002d2e:	4a05      	ldr	r2, [pc, #20]	; (8002d44 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002d30:	88fb      	ldrh	r3, [r7, #6]
 8002d32:	6153      	str	r3, [r2, #20]
 8002d34:	88fb      	ldrh	r3, [r7, #6]
 8002d36:	4618      	mov	r0, r3
 8002d38:	f7fe fca5 	bl	8001686 <HAL_GPIO_EXTI_Callback>
 8002d3c:	bf00      	nop
 8002d3e:	3708      	adds	r7, #8
 8002d40:	46bd      	mov	sp, r7
 8002d42:	bd80      	pop	{r7, pc}
 8002d44:	40010400 	.word	0x40010400

08002d48 <HAL_PWR_EnterSLEEPMode>:
 8002d48:	b480      	push	{r7}
 8002d4a:	b083      	sub	sp, #12
 8002d4c:	af00      	add	r7, sp, #0
 8002d4e:	6078      	str	r0, [r7, #4]
 8002d50:	460b      	mov	r3, r1
 8002d52:	70fb      	strb	r3, [r7, #3]
 8002d54:	4b09      	ldr	r3, [pc, #36]	; (8002d7c <HAL_PWR_EnterSLEEPMode+0x34>)
 8002d56:	691b      	ldr	r3, [r3, #16]
 8002d58:	4a08      	ldr	r2, [pc, #32]	; (8002d7c <HAL_PWR_EnterSLEEPMode+0x34>)
 8002d5a:	f023 0304 	bic.w	r3, r3, #4
 8002d5e:	6113      	str	r3, [r2, #16]
 8002d60:	78fb      	ldrb	r3, [r7, #3]
 8002d62:	2b01      	cmp	r3, #1
 8002d64:	d101      	bne.n	8002d6a <HAL_PWR_EnterSLEEPMode+0x22>
 8002d66:	bf30      	wfi
 8002d68:	e002      	b.n	8002d70 <HAL_PWR_EnterSLEEPMode+0x28>
 8002d6a:	bf40      	sev
 8002d6c:	bf20      	wfe
 8002d6e:	bf20      	wfe
 8002d70:	bf00      	nop
 8002d72:	370c      	adds	r7, #12
 8002d74:	46bd      	mov	sp, r7
 8002d76:	bc80      	pop	{r7}
 8002d78:	4770      	bx	lr
 8002d7a:	bf00      	nop
 8002d7c:	e000ed00 	.word	0xe000ed00

08002d80 <HAL_RCC_OscConfig>:
 8002d80:	b580      	push	{r7, lr}
 8002d82:	b086      	sub	sp, #24
 8002d84:	af00      	add	r7, sp, #0
 8002d86:	6078      	str	r0, [r7, #4]
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	d101      	bne.n	8002d92 <HAL_RCC_OscConfig+0x12>
 8002d8e:	2301      	movs	r3, #1
 8002d90:	e26c      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	f003 0301 	and.w	r3, r3, #1
 8002d9a:	2b00      	cmp	r3, #0
 8002d9c:	f000 8087 	beq.w	8002eae <HAL_RCC_OscConfig+0x12e>
 8002da0:	4b92      	ldr	r3, [pc, #584]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002da2:	685b      	ldr	r3, [r3, #4]
 8002da4:	f003 030c 	and.w	r3, r3, #12
 8002da8:	2b04      	cmp	r3, #4
 8002daa:	d00c      	beq.n	8002dc6 <HAL_RCC_OscConfig+0x46>
 8002dac:	4b8f      	ldr	r3, [pc, #572]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002dae:	685b      	ldr	r3, [r3, #4]
 8002db0:	f003 030c 	and.w	r3, r3, #12
 8002db4:	2b08      	cmp	r3, #8
 8002db6:	d112      	bne.n	8002dde <HAL_RCC_OscConfig+0x5e>
 8002db8:	4b8c      	ldr	r3, [pc, #560]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002dba:	685b      	ldr	r3, [r3, #4]
 8002dbc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002dc0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002dc4:	d10b      	bne.n	8002dde <HAL_RCC_OscConfig+0x5e>
 8002dc6:	4b89      	ldr	r3, [pc, #548]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002dce:	2b00      	cmp	r3, #0
 8002dd0:	d06c      	beq.n	8002eac <HAL_RCC_OscConfig+0x12c>
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	685b      	ldr	r3, [r3, #4]
 8002dd6:	2b00      	cmp	r3, #0
 8002dd8:	d168      	bne.n	8002eac <HAL_RCC_OscConfig+0x12c>
 8002dda:	2301      	movs	r3, #1
 8002ddc:	e246      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	685b      	ldr	r3, [r3, #4]
 8002de2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002de6:	d106      	bne.n	8002df6 <HAL_RCC_OscConfig+0x76>
 8002de8:	4b80      	ldr	r3, [pc, #512]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	4a7f      	ldr	r2, [pc, #508]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002dee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002df2:	6013      	str	r3, [r2, #0]
 8002df4:	e02e      	b.n	8002e54 <HAL_RCC_OscConfig+0xd4>
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	685b      	ldr	r3, [r3, #4]
 8002dfa:	2b00      	cmp	r3, #0
 8002dfc:	d10c      	bne.n	8002e18 <HAL_RCC_OscConfig+0x98>
 8002dfe:	4b7b      	ldr	r3, [pc, #492]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	4a7a      	ldr	r2, [pc, #488]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e04:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002e08:	6013      	str	r3, [r2, #0]
 8002e0a:	4b78      	ldr	r3, [pc, #480]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	4a77      	ldr	r2, [pc, #476]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e10:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002e14:	6013      	str	r3, [r2, #0]
 8002e16:	e01d      	b.n	8002e54 <HAL_RCC_OscConfig+0xd4>
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	685b      	ldr	r3, [r3, #4]
 8002e1c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002e20:	d10c      	bne.n	8002e3c <HAL_RCC_OscConfig+0xbc>
 8002e22:	4b72      	ldr	r3, [pc, #456]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e24:	681b      	ldr	r3, [r3, #0]
 8002e26:	4a71      	ldr	r2, [pc, #452]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e28:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002e2c:	6013      	str	r3, [r2, #0]
 8002e2e:	4b6f      	ldr	r3, [pc, #444]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	4a6e      	ldr	r2, [pc, #440]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e34:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002e38:	6013      	str	r3, [r2, #0]
 8002e3a:	e00b      	b.n	8002e54 <HAL_RCC_OscConfig+0xd4>
 8002e3c:	4b6b      	ldr	r3, [pc, #428]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	4a6a      	ldr	r2, [pc, #424]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e42:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002e46:	6013      	str	r3, [r2, #0]
 8002e48:	4b68      	ldr	r3, [pc, #416]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	4a67      	ldr	r2, [pc, #412]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e4e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002e52:	6013      	str	r3, [r2, #0]
 8002e54:	687b      	ldr	r3, [r7, #4]
 8002e56:	685b      	ldr	r3, [r3, #4]
 8002e58:	2b00      	cmp	r3, #0
 8002e5a:	d013      	beq.n	8002e84 <HAL_RCC_OscConfig+0x104>
 8002e5c:	f7ff fc38 	bl	80026d0 <HAL_GetTick>
 8002e60:	6138      	str	r0, [r7, #16]
 8002e62:	e008      	b.n	8002e76 <HAL_RCC_OscConfig+0xf6>
 8002e64:	f7ff fc34 	bl	80026d0 <HAL_GetTick>
 8002e68:	4602      	mov	r2, r0
 8002e6a:	693b      	ldr	r3, [r7, #16]
 8002e6c:	1ad3      	subs	r3, r2, r3
 8002e6e:	2b64      	cmp	r3, #100	; 0x64
 8002e70:	d901      	bls.n	8002e76 <HAL_RCC_OscConfig+0xf6>
 8002e72:	2303      	movs	r3, #3
 8002e74:	e1fa      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8002e76:	4b5d      	ldr	r3, [pc, #372]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	d0f0      	beq.n	8002e64 <HAL_RCC_OscConfig+0xe4>
 8002e82:	e014      	b.n	8002eae <HAL_RCC_OscConfig+0x12e>
 8002e84:	f7ff fc24 	bl	80026d0 <HAL_GetTick>
 8002e88:	6138      	str	r0, [r7, #16]
 8002e8a:	e008      	b.n	8002e9e <HAL_RCC_OscConfig+0x11e>
 8002e8c:	f7ff fc20 	bl	80026d0 <HAL_GetTick>
 8002e90:	4602      	mov	r2, r0
 8002e92:	693b      	ldr	r3, [r7, #16]
 8002e94:	1ad3      	subs	r3, r2, r3
 8002e96:	2b64      	cmp	r3, #100	; 0x64
 8002e98:	d901      	bls.n	8002e9e <HAL_RCC_OscConfig+0x11e>
 8002e9a:	2303      	movs	r3, #3
 8002e9c:	e1e6      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8002e9e:	4b53      	ldr	r3, [pc, #332]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002ea6:	2b00      	cmp	r3, #0
 8002ea8:	d1f0      	bne.n	8002e8c <HAL_RCC_OscConfig+0x10c>
 8002eaa:	e000      	b.n	8002eae <HAL_RCC_OscConfig+0x12e>
 8002eac:	bf00      	nop
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	f003 0302 	and.w	r3, r3, #2
 8002eb6:	2b00      	cmp	r3, #0
 8002eb8:	d063      	beq.n	8002f82 <HAL_RCC_OscConfig+0x202>
 8002eba:	4b4c      	ldr	r3, [pc, #304]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002ebc:	685b      	ldr	r3, [r3, #4]
 8002ebe:	f003 030c 	and.w	r3, r3, #12
 8002ec2:	2b00      	cmp	r3, #0
 8002ec4:	d00b      	beq.n	8002ede <HAL_RCC_OscConfig+0x15e>
 8002ec6:	4b49      	ldr	r3, [pc, #292]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002ec8:	685b      	ldr	r3, [r3, #4]
 8002eca:	f003 030c 	and.w	r3, r3, #12
 8002ece:	2b08      	cmp	r3, #8
 8002ed0:	d11c      	bne.n	8002f0c <HAL_RCC_OscConfig+0x18c>
 8002ed2:	4b46      	ldr	r3, [pc, #280]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002ed4:	685b      	ldr	r3, [r3, #4]
 8002ed6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d116      	bne.n	8002f0c <HAL_RCC_OscConfig+0x18c>
 8002ede:	4b43      	ldr	r3, [pc, #268]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	f003 0302 	and.w	r3, r3, #2
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d005      	beq.n	8002ef6 <HAL_RCC_OscConfig+0x176>
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	691b      	ldr	r3, [r3, #16]
 8002eee:	2b01      	cmp	r3, #1
 8002ef0:	d001      	beq.n	8002ef6 <HAL_RCC_OscConfig+0x176>
 8002ef2:	2301      	movs	r3, #1
 8002ef4:	e1ba      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8002ef6:	4b3d      	ldr	r3, [pc, #244]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002efe:	687b      	ldr	r3, [r7, #4]
 8002f00:	695b      	ldr	r3, [r3, #20]
 8002f02:	00db      	lsls	r3, r3, #3
 8002f04:	4939      	ldr	r1, [pc, #228]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002f06:	4313      	orrs	r3, r2
 8002f08:	600b      	str	r3, [r1, #0]
 8002f0a:	e03a      	b.n	8002f82 <HAL_RCC_OscConfig+0x202>
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	691b      	ldr	r3, [r3, #16]
 8002f10:	2b00      	cmp	r3, #0
 8002f12:	d020      	beq.n	8002f56 <HAL_RCC_OscConfig+0x1d6>
 8002f14:	4b36      	ldr	r3, [pc, #216]	; (8002ff0 <HAL_RCC_OscConfig+0x270>)
 8002f16:	2201      	movs	r2, #1
 8002f18:	601a      	str	r2, [r3, #0]
 8002f1a:	f7ff fbd9 	bl	80026d0 <HAL_GetTick>
 8002f1e:	6138      	str	r0, [r7, #16]
 8002f20:	e008      	b.n	8002f34 <HAL_RCC_OscConfig+0x1b4>
 8002f22:	f7ff fbd5 	bl	80026d0 <HAL_GetTick>
 8002f26:	4602      	mov	r2, r0
 8002f28:	693b      	ldr	r3, [r7, #16]
 8002f2a:	1ad3      	subs	r3, r2, r3
 8002f2c:	2b02      	cmp	r3, #2
 8002f2e:	d901      	bls.n	8002f34 <HAL_RCC_OscConfig+0x1b4>
 8002f30:	2303      	movs	r3, #3
 8002f32:	e19b      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8002f34:	4b2d      	ldr	r3, [pc, #180]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002f36:	681b      	ldr	r3, [r3, #0]
 8002f38:	f003 0302 	and.w	r3, r3, #2
 8002f3c:	2b00      	cmp	r3, #0
 8002f3e:	d0f0      	beq.n	8002f22 <HAL_RCC_OscConfig+0x1a2>
 8002f40:	4b2a      	ldr	r3, [pc, #168]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002f48:	687b      	ldr	r3, [r7, #4]
 8002f4a:	695b      	ldr	r3, [r3, #20]
 8002f4c:	00db      	lsls	r3, r3, #3
 8002f4e:	4927      	ldr	r1, [pc, #156]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002f50:	4313      	orrs	r3, r2
 8002f52:	600b      	str	r3, [r1, #0]
 8002f54:	e015      	b.n	8002f82 <HAL_RCC_OscConfig+0x202>
 8002f56:	4b26      	ldr	r3, [pc, #152]	; (8002ff0 <HAL_RCC_OscConfig+0x270>)
 8002f58:	2200      	movs	r2, #0
 8002f5a:	601a      	str	r2, [r3, #0]
 8002f5c:	f7ff fbb8 	bl	80026d0 <HAL_GetTick>
 8002f60:	6138      	str	r0, [r7, #16]
 8002f62:	e008      	b.n	8002f76 <HAL_RCC_OscConfig+0x1f6>
 8002f64:	f7ff fbb4 	bl	80026d0 <HAL_GetTick>
 8002f68:	4602      	mov	r2, r0
 8002f6a:	693b      	ldr	r3, [r7, #16]
 8002f6c:	1ad3      	subs	r3, r2, r3
 8002f6e:	2b02      	cmp	r3, #2
 8002f70:	d901      	bls.n	8002f76 <HAL_RCC_OscConfig+0x1f6>
 8002f72:	2303      	movs	r3, #3
 8002f74:	e17a      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8002f76:	4b1d      	ldr	r3, [pc, #116]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002f78:	681b      	ldr	r3, [r3, #0]
 8002f7a:	f003 0302 	and.w	r3, r3, #2
 8002f7e:	2b00      	cmp	r3, #0
 8002f80:	d1f0      	bne.n	8002f64 <HAL_RCC_OscConfig+0x1e4>
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	681b      	ldr	r3, [r3, #0]
 8002f86:	f003 0308 	and.w	r3, r3, #8
 8002f8a:	2b00      	cmp	r3, #0
 8002f8c:	d03a      	beq.n	8003004 <HAL_RCC_OscConfig+0x284>
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	699b      	ldr	r3, [r3, #24]
 8002f92:	2b00      	cmp	r3, #0
 8002f94:	d019      	beq.n	8002fca <HAL_RCC_OscConfig+0x24a>
 8002f96:	4b17      	ldr	r3, [pc, #92]	; (8002ff4 <HAL_RCC_OscConfig+0x274>)
 8002f98:	2201      	movs	r2, #1
 8002f9a:	601a      	str	r2, [r3, #0]
 8002f9c:	f7ff fb98 	bl	80026d0 <HAL_GetTick>
 8002fa0:	6138      	str	r0, [r7, #16]
 8002fa2:	e008      	b.n	8002fb6 <HAL_RCC_OscConfig+0x236>
 8002fa4:	f7ff fb94 	bl	80026d0 <HAL_GetTick>
 8002fa8:	4602      	mov	r2, r0
 8002faa:	693b      	ldr	r3, [r7, #16]
 8002fac:	1ad3      	subs	r3, r2, r3
 8002fae:	2b02      	cmp	r3, #2
 8002fb0:	d901      	bls.n	8002fb6 <HAL_RCC_OscConfig+0x236>
 8002fb2:	2303      	movs	r3, #3
 8002fb4:	e15a      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8002fb6:	4b0d      	ldr	r3, [pc, #52]	; (8002fec <HAL_RCC_OscConfig+0x26c>)
 8002fb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fba:	f003 0302 	and.w	r3, r3, #2
 8002fbe:	2b00      	cmp	r3, #0
 8002fc0:	d0f0      	beq.n	8002fa4 <HAL_RCC_OscConfig+0x224>
 8002fc2:	2001      	movs	r0, #1
 8002fc4:	f000 fad8 	bl	8003578 <RCC_Delay>
 8002fc8:	e01c      	b.n	8003004 <HAL_RCC_OscConfig+0x284>
 8002fca:	4b0a      	ldr	r3, [pc, #40]	; (8002ff4 <HAL_RCC_OscConfig+0x274>)
 8002fcc:	2200      	movs	r2, #0
 8002fce:	601a      	str	r2, [r3, #0]
 8002fd0:	f7ff fb7e 	bl	80026d0 <HAL_GetTick>
 8002fd4:	6138      	str	r0, [r7, #16]
 8002fd6:	e00f      	b.n	8002ff8 <HAL_RCC_OscConfig+0x278>
 8002fd8:	f7ff fb7a 	bl	80026d0 <HAL_GetTick>
 8002fdc:	4602      	mov	r2, r0
 8002fde:	693b      	ldr	r3, [r7, #16]
 8002fe0:	1ad3      	subs	r3, r2, r3
 8002fe2:	2b02      	cmp	r3, #2
 8002fe4:	d908      	bls.n	8002ff8 <HAL_RCC_OscConfig+0x278>
 8002fe6:	2303      	movs	r3, #3
 8002fe8:	e140      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8002fea:	bf00      	nop
 8002fec:	40021000 	.word	0x40021000
 8002ff0:	42420000 	.word	0x42420000
 8002ff4:	42420480 	.word	0x42420480
 8002ff8:	4b9e      	ldr	r3, [pc, #632]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8002ffa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ffc:	f003 0302 	and.w	r3, r3, #2
 8003000:	2b00      	cmp	r3, #0
 8003002:	d1e9      	bne.n	8002fd8 <HAL_RCC_OscConfig+0x258>
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	f003 0304 	and.w	r3, r3, #4
 800300c:	2b00      	cmp	r3, #0
 800300e:	f000 80a6 	beq.w	800315e <HAL_RCC_OscConfig+0x3de>
 8003012:	2300      	movs	r3, #0
 8003014:	75fb      	strb	r3, [r7, #23]
 8003016:	4b97      	ldr	r3, [pc, #604]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003018:	69db      	ldr	r3, [r3, #28]
 800301a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800301e:	2b00      	cmp	r3, #0
 8003020:	d10d      	bne.n	800303e <HAL_RCC_OscConfig+0x2be>
 8003022:	4b94      	ldr	r3, [pc, #592]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003024:	69db      	ldr	r3, [r3, #28]
 8003026:	4a93      	ldr	r2, [pc, #588]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003028:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800302c:	61d3      	str	r3, [r2, #28]
 800302e:	4b91      	ldr	r3, [pc, #580]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003030:	69db      	ldr	r3, [r3, #28]
 8003032:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003036:	60bb      	str	r3, [r7, #8]
 8003038:	68bb      	ldr	r3, [r7, #8]
 800303a:	2301      	movs	r3, #1
 800303c:	75fb      	strb	r3, [r7, #23]
 800303e:	4b8e      	ldr	r3, [pc, #568]	; (8003278 <HAL_RCC_OscConfig+0x4f8>)
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003046:	2b00      	cmp	r3, #0
 8003048:	d118      	bne.n	800307c <HAL_RCC_OscConfig+0x2fc>
 800304a:	4b8b      	ldr	r3, [pc, #556]	; (8003278 <HAL_RCC_OscConfig+0x4f8>)
 800304c:	681b      	ldr	r3, [r3, #0]
 800304e:	4a8a      	ldr	r2, [pc, #552]	; (8003278 <HAL_RCC_OscConfig+0x4f8>)
 8003050:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003054:	6013      	str	r3, [r2, #0]
 8003056:	f7ff fb3b 	bl	80026d0 <HAL_GetTick>
 800305a:	6138      	str	r0, [r7, #16]
 800305c:	e008      	b.n	8003070 <HAL_RCC_OscConfig+0x2f0>
 800305e:	f7ff fb37 	bl	80026d0 <HAL_GetTick>
 8003062:	4602      	mov	r2, r0
 8003064:	693b      	ldr	r3, [r7, #16]
 8003066:	1ad3      	subs	r3, r2, r3
 8003068:	2b64      	cmp	r3, #100	; 0x64
 800306a:	d901      	bls.n	8003070 <HAL_RCC_OscConfig+0x2f0>
 800306c:	2303      	movs	r3, #3
 800306e:	e0fd      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8003070:	4b81      	ldr	r3, [pc, #516]	; (8003278 <HAL_RCC_OscConfig+0x4f8>)
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003078:	2b00      	cmp	r3, #0
 800307a:	d0f0      	beq.n	800305e <HAL_RCC_OscConfig+0x2de>
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	68db      	ldr	r3, [r3, #12]
 8003080:	2b01      	cmp	r3, #1
 8003082:	d106      	bne.n	8003092 <HAL_RCC_OscConfig+0x312>
 8003084:	4b7b      	ldr	r3, [pc, #492]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003086:	6a1b      	ldr	r3, [r3, #32]
 8003088:	4a7a      	ldr	r2, [pc, #488]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 800308a:	f043 0301 	orr.w	r3, r3, #1
 800308e:	6213      	str	r3, [r2, #32]
 8003090:	e02d      	b.n	80030ee <HAL_RCC_OscConfig+0x36e>
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	68db      	ldr	r3, [r3, #12]
 8003096:	2b00      	cmp	r3, #0
 8003098:	d10c      	bne.n	80030b4 <HAL_RCC_OscConfig+0x334>
 800309a:	4b76      	ldr	r3, [pc, #472]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 800309c:	6a1b      	ldr	r3, [r3, #32]
 800309e:	4a75      	ldr	r2, [pc, #468]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030a0:	f023 0301 	bic.w	r3, r3, #1
 80030a4:	6213      	str	r3, [r2, #32]
 80030a6:	4b73      	ldr	r3, [pc, #460]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030a8:	6a1b      	ldr	r3, [r3, #32]
 80030aa:	4a72      	ldr	r2, [pc, #456]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030ac:	f023 0304 	bic.w	r3, r3, #4
 80030b0:	6213      	str	r3, [r2, #32]
 80030b2:	e01c      	b.n	80030ee <HAL_RCC_OscConfig+0x36e>
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	68db      	ldr	r3, [r3, #12]
 80030b8:	2b05      	cmp	r3, #5
 80030ba:	d10c      	bne.n	80030d6 <HAL_RCC_OscConfig+0x356>
 80030bc:	4b6d      	ldr	r3, [pc, #436]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030be:	6a1b      	ldr	r3, [r3, #32]
 80030c0:	4a6c      	ldr	r2, [pc, #432]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030c2:	f043 0304 	orr.w	r3, r3, #4
 80030c6:	6213      	str	r3, [r2, #32]
 80030c8:	4b6a      	ldr	r3, [pc, #424]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030ca:	6a1b      	ldr	r3, [r3, #32]
 80030cc:	4a69      	ldr	r2, [pc, #420]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030ce:	f043 0301 	orr.w	r3, r3, #1
 80030d2:	6213      	str	r3, [r2, #32]
 80030d4:	e00b      	b.n	80030ee <HAL_RCC_OscConfig+0x36e>
 80030d6:	4b67      	ldr	r3, [pc, #412]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030d8:	6a1b      	ldr	r3, [r3, #32]
 80030da:	4a66      	ldr	r2, [pc, #408]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030dc:	f023 0301 	bic.w	r3, r3, #1
 80030e0:	6213      	str	r3, [r2, #32]
 80030e2:	4b64      	ldr	r3, [pc, #400]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030e4:	6a1b      	ldr	r3, [r3, #32]
 80030e6:	4a63      	ldr	r2, [pc, #396]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80030e8:	f023 0304 	bic.w	r3, r3, #4
 80030ec:	6213      	str	r3, [r2, #32]
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	68db      	ldr	r3, [r3, #12]
 80030f2:	2b00      	cmp	r3, #0
 80030f4:	d015      	beq.n	8003122 <HAL_RCC_OscConfig+0x3a2>
 80030f6:	f7ff faeb 	bl	80026d0 <HAL_GetTick>
 80030fa:	6138      	str	r0, [r7, #16]
 80030fc:	e00a      	b.n	8003114 <HAL_RCC_OscConfig+0x394>
 80030fe:	f7ff fae7 	bl	80026d0 <HAL_GetTick>
 8003102:	4602      	mov	r2, r0
 8003104:	693b      	ldr	r3, [r7, #16]
 8003106:	1ad3      	subs	r3, r2, r3
 8003108:	f241 3288 	movw	r2, #5000	; 0x1388
 800310c:	4293      	cmp	r3, r2
 800310e:	d901      	bls.n	8003114 <HAL_RCC_OscConfig+0x394>
 8003110:	2303      	movs	r3, #3
 8003112:	e0ab      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8003114:	4b57      	ldr	r3, [pc, #348]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003116:	6a1b      	ldr	r3, [r3, #32]
 8003118:	f003 0302 	and.w	r3, r3, #2
 800311c:	2b00      	cmp	r3, #0
 800311e:	d0ee      	beq.n	80030fe <HAL_RCC_OscConfig+0x37e>
 8003120:	e014      	b.n	800314c <HAL_RCC_OscConfig+0x3cc>
 8003122:	f7ff fad5 	bl	80026d0 <HAL_GetTick>
 8003126:	6138      	str	r0, [r7, #16]
 8003128:	e00a      	b.n	8003140 <HAL_RCC_OscConfig+0x3c0>
 800312a:	f7ff fad1 	bl	80026d0 <HAL_GetTick>
 800312e:	4602      	mov	r2, r0
 8003130:	693b      	ldr	r3, [r7, #16]
 8003132:	1ad3      	subs	r3, r2, r3
 8003134:	f241 3288 	movw	r2, #5000	; 0x1388
 8003138:	4293      	cmp	r3, r2
 800313a:	d901      	bls.n	8003140 <HAL_RCC_OscConfig+0x3c0>
 800313c:	2303      	movs	r3, #3
 800313e:	e095      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8003140:	4b4c      	ldr	r3, [pc, #304]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003142:	6a1b      	ldr	r3, [r3, #32]
 8003144:	f003 0302 	and.w	r3, r3, #2
 8003148:	2b00      	cmp	r3, #0
 800314a:	d1ee      	bne.n	800312a <HAL_RCC_OscConfig+0x3aa>
 800314c:	7dfb      	ldrb	r3, [r7, #23]
 800314e:	2b01      	cmp	r3, #1
 8003150:	d105      	bne.n	800315e <HAL_RCC_OscConfig+0x3de>
 8003152:	4b48      	ldr	r3, [pc, #288]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003154:	69db      	ldr	r3, [r3, #28]
 8003156:	4a47      	ldr	r2, [pc, #284]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003158:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800315c:	61d3      	str	r3, [r2, #28]
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	69db      	ldr	r3, [r3, #28]
 8003162:	2b00      	cmp	r3, #0
 8003164:	f000 8081 	beq.w	800326a <HAL_RCC_OscConfig+0x4ea>
 8003168:	4b42      	ldr	r3, [pc, #264]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 800316a:	685b      	ldr	r3, [r3, #4]
 800316c:	f003 030c 	and.w	r3, r3, #12
 8003170:	2b08      	cmp	r3, #8
 8003172:	d061      	beq.n	8003238 <HAL_RCC_OscConfig+0x4b8>
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	69db      	ldr	r3, [r3, #28]
 8003178:	2b02      	cmp	r3, #2
 800317a:	d146      	bne.n	800320a <HAL_RCC_OscConfig+0x48a>
 800317c:	4b3f      	ldr	r3, [pc, #252]	; (800327c <HAL_RCC_OscConfig+0x4fc>)
 800317e:	2200      	movs	r2, #0
 8003180:	601a      	str	r2, [r3, #0]
 8003182:	f7ff faa5 	bl	80026d0 <HAL_GetTick>
 8003186:	6138      	str	r0, [r7, #16]
 8003188:	e008      	b.n	800319c <HAL_RCC_OscConfig+0x41c>
 800318a:	f7ff faa1 	bl	80026d0 <HAL_GetTick>
 800318e:	4602      	mov	r2, r0
 8003190:	693b      	ldr	r3, [r7, #16]
 8003192:	1ad3      	subs	r3, r2, r3
 8003194:	2b02      	cmp	r3, #2
 8003196:	d901      	bls.n	800319c <HAL_RCC_OscConfig+0x41c>
 8003198:	2303      	movs	r3, #3
 800319a:	e067      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 800319c:	4b35      	ldr	r3, [pc, #212]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80031a4:	2b00      	cmp	r3, #0
 80031a6:	d1f0      	bne.n	800318a <HAL_RCC_OscConfig+0x40a>
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	6a1b      	ldr	r3, [r3, #32]
 80031ac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80031b0:	d108      	bne.n	80031c4 <HAL_RCC_OscConfig+0x444>
 80031b2:	4b30      	ldr	r3, [pc, #192]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80031b4:	685b      	ldr	r3, [r3, #4]
 80031b6:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	689b      	ldr	r3, [r3, #8]
 80031be:	492d      	ldr	r1, [pc, #180]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80031c0:	4313      	orrs	r3, r2
 80031c2:	604b      	str	r3, [r1, #4]
 80031c4:	4b2b      	ldr	r3, [pc, #172]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80031c6:	685b      	ldr	r3, [r3, #4]
 80031c8:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	6a19      	ldr	r1, [r3, #32]
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80031d4:	430b      	orrs	r3, r1
 80031d6:	4927      	ldr	r1, [pc, #156]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80031d8:	4313      	orrs	r3, r2
 80031da:	604b      	str	r3, [r1, #4]
 80031dc:	4b27      	ldr	r3, [pc, #156]	; (800327c <HAL_RCC_OscConfig+0x4fc>)
 80031de:	2201      	movs	r2, #1
 80031e0:	601a      	str	r2, [r3, #0]
 80031e2:	f7ff fa75 	bl	80026d0 <HAL_GetTick>
 80031e6:	6138      	str	r0, [r7, #16]
 80031e8:	e008      	b.n	80031fc <HAL_RCC_OscConfig+0x47c>
 80031ea:	f7ff fa71 	bl	80026d0 <HAL_GetTick>
 80031ee:	4602      	mov	r2, r0
 80031f0:	693b      	ldr	r3, [r7, #16]
 80031f2:	1ad3      	subs	r3, r2, r3
 80031f4:	2b02      	cmp	r3, #2
 80031f6:	d901      	bls.n	80031fc <HAL_RCC_OscConfig+0x47c>
 80031f8:	2303      	movs	r3, #3
 80031fa:	e037      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 80031fc:	4b1d      	ldr	r3, [pc, #116]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003204:	2b00      	cmp	r3, #0
 8003206:	d0f0      	beq.n	80031ea <HAL_RCC_OscConfig+0x46a>
 8003208:	e02f      	b.n	800326a <HAL_RCC_OscConfig+0x4ea>
 800320a:	4b1c      	ldr	r3, [pc, #112]	; (800327c <HAL_RCC_OscConfig+0x4fc>)
 800320c:	2200      	movs	r2, #0
 800320e:	601a      	str	r2, [r3, #0]
 8003210:	f7ff fa5e 	bl	80026d0 <HAL_GetTick>
 8003214:	6138      	str	r0, [r7, #16]
 8003216:	e008      	b.n	800322a <HAL_RCC_OscConfig+0x4aa>
 8003218:	f7ff fa5a 	bl	80026d0 <HAL_GetTick>
 800321c:	4602      	mov	r2, r0
 800321e:	693b      	ldr	r3, [r7, #16]
 8003220:	1ad3      	subs	r3, r2, r3
 8003222:	2b02      	cmp	r3, #2
 8003224:	d901      	bls.n	800322a <HAL_RCC_OscConfig+0x4aa>
 8003226:	2303      	movs	r3, #3
 8003228:	e020      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 800322a:	4b12      	ldr	r3, [pc, #72]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 800322c:	681b      	ldr	r3, [r3, #0]
 800322e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003232:	2b00      	cmp	r3, #0
 8003234:	d1f0      	bne.n	8003218 <HAL_RCC_OscConfig+0x498>
 8003236:	e018      	b.n	800326a <HAL_RCC_OscConfig+0x4ea>
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	69db      	ldr	r3, [r3, #28]
 800323c:	2b01      	cmp	r3, #1
 800323e:	d101      	bne.n	8003244 <HAL_RCC_OscConfig+0x4c4>
 8003240:	2301      	movs	r3, #1
 8003242:	e013      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 8003244:	4b0b      	ldr	r3, [pc, #44]	; (8003274 <HAL_RCC_OscConfig+0x4f4>)
 8003246:	685b      	ldr	r3, [r3, #4]
 8003248:	60fb      	str	r3, [r7, #12]
 800324a:	68fb      	ldr	r3, [r7, #12]
 800324c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	6a1b      	ldr	r3, [r3, #32]
 8003254:	429a      	cmp	r2, r3
 8003256:	d106      	bne.n	8003266 <HAL_RCC_OscConfig+0x4e6>
 8003258:	68fb      	ldr	r3, [r7, #12]
 800325a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003262:	429a      	cmp	r2, r3
 8003264:	d001      	beq.n	800326a <HAL_RCC_OscConfig+0x4ea>
 8003266:	2301      	movs	r3, #1
 8003268:	e000      	b.n	800326c <HAL_RCC_OscConfig+0x4ec>
 800326a:	2300      	movs	r3, #0
 800326c:	4618      	mov	r0, r3
 800326e:	3718      	adds	r7, #24
 8003270:	46bd      	mov	sp, r7
 8003272:	bd80      	pop	{r7, pc}
 8003274:	40021000 	.word	0x40021000
 8003278:	40007000 	.word	0x40007000
 800327c:	42420060 	.word	0x42420060

08003280 <HAL_RCC_ClockConfig>:
 8003280:	b580      	push	{r7, lr}
 8003282:	b084      	sub	sp, #16
 8003284:	af00      	add	r7, sp, #0
 8003286:	6078      	str	r0, [r7, #4]
 8003288:	6039      	str	r1, [r7, #0]
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	2b00      	cmp	r3, #0
 800328e:	d101      	bne.n	8003294 <HAL_RCC_ClockConfig+0x14>
 8003290:	2301      	movs	r3, #1
 8003292:	e0d0      	b.n	8003436 <HAL_RCC_ClockConfig+0x1b6>
 8003294:	4b6a      	ldr	r3, [pc, #424]	; (8003440 <HAL_RCC_ClockConfig+0x1c0>)
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	f003 0307 	and.w	r3, r3, #7
 800329c:	683a      	ldr	r2, [r7, #0]
 800329e:	429a      	cmp	r2, r3
 80032a0:	d910      	bls.n	80032c4 <HAL_RCC_ClockConfig+0x44>
 80032a2:	4b67      	ldr	r3, [pc, #412]	; (8003440 <HAL_RCC_ClockConfig+0x1c0>)
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	f023 0207 	bic.w	r2, r3, #7
 80032aa:	4965      	ldr	r1, [pc, #404]	; (8003440 <HAL_RCC_ClockConfig+0x1c0>)
 80032ac:	683b      	ldr	r3, [r7, #0]
 80032ae:	4313      	orrs	r3, r2
 80032b0:	600b      	str	r3, [r1, #0]
 80032b2:	4b63      	ldr	r3, [pc, #396]	; (8003440 <HAL_RCC_ClockConfig+0x1c0>)
 80032b4:	681b      	ldr	r3, [r3, #0]
 80032b6:	f003 0307 	and.w	r3, r3, #7
 80032ba:	683a      	ldr	r2, [r7, #0]
 80032bc:	429a      	cmp	r2, r3
 80032be:	d001      	beq.n	80032c4 <HAL_RCC_ClockConfig+0x44>
 80032c0:	2301      	movs	r3, #1
 80032c2:	e0b8      	b.n	8003436 <HAL_RCC_ClockConfig+0x1b6>
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	681b      	ldr	r3, [r3, #0]
 80032c8:	f003 0302 	and.w	r3, r3, #2
 80032cc:	2b00      	cmp	r3, #0
 80032ce:	d020      	beq.n	8003312 <HAL_RCC_ClockConfig+0x92>
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	681b      	ldr	r3, [r3, #0]
 80032d4:	f003 0304 	and.w	r3, r3, #4
 80032d8:	2b00      	cmp	r3, #0
 80032da:	d005      	beq.n	80032e8 <HAL_RCC_ClockConfig+0x68>
 80032dc:	4b59      	ldr	r3, [pc, #356]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 80032de:	685b      	ldr	r3, [r3, #4]
 80032e0:	4a58      	ldr	r2, [pc, #352]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 80032e2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80032e6:	6053      	str	r3, [r2, #4]
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	f003 0308 	and.w	r3, r3, #8
 80032f0:	2b00      	cmp	r3, #0
 80032f2:	d005      	beq.n	8003300 <HAL_RCC_ClockConfig+0x80>
 80032f4:	4b53      	ldr	r3, [pc, #332]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 80032f6:	685b      	ldr	r3, [r3, #4]
 80032f8:	4a52      	ldr	r2, [pc, #328]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 80032fa:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80032fe:	6053      	str	r3, [r2, #4]
 8003300:	4b50      	ldr	r3, [pc, #320]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 8003302:	685b      	ldr	r3, [r3, #4]
 8003304:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	689b      	ldr	r3, [r3, #8]
 800330c:	494d      	ldr	r1, [pc, #308]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 800330e:	4313      	orrs	r3, r2
 8003310:	604b      	str	r3, [r1, #4]
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	f003 0301 	and.w	r3, r3, #1
 800331a:	2b00      	cmp	r3, #0
 800331c:	d040      	beq.n	80033a0 <HAL_RCC_ClockConfig+0x120>
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	685b      	ldr	r3, [r3, #4]
 8003322:	2b01      	cmp	r3, #1
 8003324:	d107      	bne.n	8003336 <HAL_RCC_ClockConfig+0xb6>
 8003326:	4b47      	ldr	r3, [pc, #284]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800332e:	2b00      	cmp	r3, #0
 8003330:	d115      	bne.n	800335e <HAL_RCC_ClockConfig+0xde>
 8003332:	2301      	movs	r3, #1
 8003334:	e07f      	b.n	8003436 <HAL_RCC_ClockConfig+0x1b6>
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	685b      	ldr	r3, [r3, #4]
 800333a:	2b02      	cmp	r3, #2
 800333c:	d107      	bne.n	800334e <HAL_RCC_ClockConfig+0xce>
 800333e:	4b41      	ldr	r3, [pc, #260]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003346:	2b00      	cmp	r3, #0
 8003348:	d109      	bne.n	800335e <HAL_RCC_ClockConfig+0xde>
 800334a:	2301      	movs	r3, #1
 800334c:	e073      	b.n	8003436 <HAL_RCC_ClockConfig+0x1b6>
 800334e:	4b3d      	ldr	r3, [pc, #244]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 8003350:	681b      	ldr	r3, [r3, #0]
 8003352:	f003 0302 	and.w	r3, r3, #2
 8003356:	2b00      	cmp	r3, #0
 8003358:	d101      	bne.n	800335e <HAL_RCC_ClockConfig+0xde>
 800335a:	2301      	movs	r3, #1
 800335c:	e06b      	b.n	8003436 <HAL_RCC_ClockConfig+0x1b6>
 800335e:	4b39      	ldr	r3, [pc, #228]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 8003360:	685b      	ldr	r3, [r3, #4]
 8003362:	f023 0203 	bic.w	r2, r3, #3
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	685b      	ldr	r3, [r3, #4]
 800336a:	4936      	ldr	r1, [pc, #216]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 800336c:	4313      	orrs	r3, r2
 800336e:	604b      	str	r3, [r1, #4]
 8003370:	f7ff f9ae 	bl	80026d0 <HAL_GetTick>
 8003374:	60f8      	str	r0, [r7, #12]
 8003376:	e00a      	b.n	800338e <HAL_RCC_ClockConfig+0x10e>
 8003378:	f7ff f9aa 	bl	80026d0 <HAL_GetTick>
 800337c:	4602      	mov	r2, r0
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	1ad3      	subs	r3, r2, r3
 8003382:	f241 3288 	movw	r2, #5000	; 0x1388
 8003386:	4293      	cmp	r3, r2
 8003388:	d901      	bls.n	800338e <HAL_RCC_ClockConfig+0x10e>
 800338a:	2303      	movs	r3, #3
 800338c:	e053      	b.n	8003436 <HAL_RCC_ClockConfig+0x1b6>
 800338e:	4b2d      	ldr	r3, [pc, #180]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 8003390:	685b      	ldr	r3, [r3, #4]
 8003392:	f003 020c 	and.w	r2, r3, #12
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	685b      	ldr	r3, [r3, #4]
 800339a:	009b      	lsls	r3, r3, #2
 800339c:	429a      	cmp	r2, r3
 800339e:	d1eb      	bne.n	8003378 <HAL_RCC_ClockConfig+0xf8>
 80033a0:	4b27      	ldr	r3, [pc, #156]	; (8003440 <HAL_RCC_ClockConfig+0x1c0>)
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	f003 0307 	and.w	r3, r3, #7
 80033a8:	683a      	ldr	r2, [r7, #0]
 80033aa:	429a      	cmp	r2, r3
 80033ac:	d210      	bcs.n	80033d0 <HAL_RCC_ClockConfig+0x150>
 80033ae:	4b24      	ldr	r3, [pc, #144]	; (8003440 <HAL_RCC_ClockConfig+0x1c0>)
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	f023 0207 	bic.w	r2, r3, #7
 80033b6:	4922      	ldr	r1, [pc, #136]	; (8003440 <HAL_RCC_ClockConfig+0x1c0>)
 80033b8:	683b      	ldr	r3, [r7, #0]
 80033ba:	4313      	orrs	r3, r2
 80033bc:	600b      	str	r3, [r1, #0]
 80033be:	4b20      	ldr	r3, [pc, #128]	; (8003440 <HAL_RCC_ClockConfig+0x1c0>)
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	f003 0307 	and.w	r3, r3, #7
 80033c6:	683a      	ldr	r2, [r7, #0]
 80033c8:	429a      	cmp	r2, r3
 80033ca:	d001      	beq.n	80033d0 <HAL_RCC_ClockConfig+0x150>
 80033cc:	2301      	movs	r3, #1
 80033ce:	e032      	b.n	8003436 <HAL_RCC_ClockConfig+0x1b6>
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	f003 0304 	and.w	r3, r3, #4
 80033d8:	2b00      	cmp	r3, #0
 80033da:	d008      	beq.n	80033ee <HAL_RCC_ClockConfig+0x16e>
 80033dc:	4b19      	ldr	r3, [pc, #100]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 80033de:	685b      	ldr	r3, [r3, #4]
 80033e0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	68db      	ldr	r3, [r3, #12]
 80033e8:	4916      	ldr	r1, [pc, #88]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 80033ea:	4313      	orrs	r3, r2
 80033ec:	604b      	str	r3, [r1, #4]
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	f003 0308 	and.w	r3, r3, #8
 80033f6:	2b00      	cmp	r3, #0
 80033f8:	d009      	beq.n	800340e <HAL_RCC_ClockConfig+0x18e>
 80033fa:	4b12      	ldr	r3, [pc, #72]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 80033fc:	685b      	ldr	r3, [r3, #4]
 80033fe:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	691b      	ldr	r3, [r3, #16]
 8003406:	00db      	lsls	r3, r3, #3
 8003408:	490e      	ldr	r1, [pc, #56]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 800340a:	4313      	orrs	r3, r2
 800340c:	604b      	str	r3, [r1, #4]
 800340e:	f000 f821 	bl	8003454 <HAL_RCC_GetSysClockFreq>
 8003412:	4602      	mov	r2, r0
 8003414:	4b0b      	ldr	r3, [pc, #44]	; (8003444 <HAL_RCC_ClockConfig+0x1c4>)
 8003416:	685b      	ldr	r3, [r3, #4]
 8003418:	091b      	lsrs	r3, r3, #4
 800341a:	f003 030f 	and.w	r3, r3, #15
 800341e:	490a      	ldr	r1, [pc, #40]	; (8003448 <HAL_RCC_ClockConfig+0x1c8>)
 8003420:	5ccb      	ldrb	r3, [r1, r3]
 8003422:	fa22 f303 	lsr.w	r3, r2, r3
 8003426:	4a09      	ldr	r2, [pc, #36]	; (800344c <HAL_RCC_ClockConfig+0x1cc>)
 8003428:	6013      	str	r3, [r2, #0]
 800342a:	4b09      	ldr	r3, [pc, #36]	; (8003450 <HAL_RCC_ClockConfig+0x1d0>)
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	4618      	mov	r0, r3
 8003430:	f7ff f90c 	bl	800264c <HAL_InitTick>
 8003434:	2300      	movs	r3, #0
 8003436:	4618      	mov	r0, r3
 8003438:	3710      	adds	r7, #16
 800343a:	46bd      	mov	sp, r7
 800343c:	bd80      	pop	{r7, pc}
 800343e:	bf00      	nop
 8003440:	40022000 	.word	0x40022000
 8003444:	40021000 	.word	0x40021000
 8003448:	080050ec 	.word	0x080050ec
 800344c:	2000004c 	.word	0x2000004c
 8003450:	20000050 	.word	0x20000050

08003454 <HAL_RCC_GetSysClockFreq>:
 8003454:	b490      	push	{r4, r7}
 8003456:	b08a      	sub	sp, #40	; 0x28
 8003458:	af00      	add	r7, sp, #0
 800345a:	4b2a      	ldr	r3, [pc, #168]	; (8003504 <HAL_RCC_GetSysClockFreq+0xb0>)
 800345c:	1d3c      	adds	r4, r7, #4
 800345e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003460:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003464:	f240 2301 	movw	r3, #513	; 0x201
 8003468:	803b      	strh	r3, [r7, #0]
 800346a:	2300      	movs	r3, #0
 800346c:	61fb      	str	r3, [r7, #28]
 800346e:	2300      	movs	r3, #0
 8003470:	61bb      	str	r3, [r7, #24]
 8003472:	2300      	movs	r3, #0
 8003474:	627b      	str	r3, [r7, #36]	; 0x24
 8003476:	2300      	movs	r3, #0
 8003478:	617b      	str	r3, [r7, #20]
 800347a:	2300      	movs	r3, #0
 800347c:	623b      	str	r3, [r7, #32]
 800347e:	4b22      	ldr	r3, [pc, #136]	; (8003508 <HAL_RCC_GetSysClockFreq+0xb4>)
 8003480:	685b      	ldr	r3, [r3, #4]
 8003482:	61fb      	str	r3, [r7, #28]
 8003484:	69fb      	ldr	r3, [r7, #28]
 8003486:	f003 030c 	and.w	r3, r3, #12
 800348a:	2b04      	cmp	r3, #4
 800348c:	d002      	beq.n	8003494 <HAL_RCC_GetSysClockFreq+0x40>
 800348e:	2b08      	cmp	r3, #8
 8003490:	d003      	beq.n	800349a <HAL_RCC_GetSysClockFreq+0x46>
 8003492:	e02d      	b.n	80034f0 <HAL_RCC_GetSysClockFreq+0x9c>
 8003494:	4b1d      	ldr	r3, [pc, #116]	; (800350c <HAL_RCC_GetSysClockFreq+0xb8>)
 8003496:	623b      	str	r3, [r7, #32]
 8003498:	e02d      	b.n	80034f6 <HAL_RCC_GetSysClockFreq+0xa2>
 800349a:	69fb      	ldr	r3, [r7, #28]
 800349c:	0c9b      	lsrs	r3, r3, #18
 800349e:	f003 030f 	and.w	r3, r3, #15
 80034a2:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80034a6:	4413      	add	r3, r2
 80034a8:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80034ac:	617b      	str	r3, [r7, #20]
 80034ae:	69fb      	ldr	r3, [r7, #28]
 80034b0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80034b4:	2b00      	cmp	r3, #0
 80034b6:	d013      	beq.n	80034e0 <HAL_RCC_GetSysClockFreq+0x8c>
 80034b8:	4b13      	ldr	r3, [pc, #76]	; (8003508 <HAL_RCC_GetSysClockFreq+0xb4>)
 80034ba:	685b      	ldr	r3, [r3, #4]
 80034bc:	0c5b      	lsrs	r3, r3, #17
 80034be:	f003 0301 	and.w	r3, r3, #1
 80034c2:	f107 0228 	add.w	r2, r7, #40	; 0x28
 80034c6:	4413      	add	r3, r2
 80034c8:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80034cc:	61bb      	str	r3, [r7, #24]
 80034ce:	697b      	ldr	r3, [r7, #20]
 80034d0:	4a0e      	ldr	r2, [pc, #56]	; (800350c <HAL_RCC_GetSysClockFreq+0xb8>)
 80034d2:	fb02 f203 	mul.w	r2, r2, r3
 80034d6:	69bb      	ldr	r3, [r7, #24]
 80034d8:	fbb2 f3f3 	udiv	r3, r2, r3
 80034dc:	627b      	str	r3, [r7, #36]	; 0x24
 80034de:	e004      	b.n	80034ea <HAL_RCC_GetSysClockFreq+0x96>
 80034e0:	697b      	ldr	r3, [r7, #20]
 80034e2:	4a0b      	ldr	r2, [pc, #44]	; (8003510 <HAL_RCC_GetSysClockFreq+0xbc>)
 80034e4:	fb02 f303 	mul.w	r3, r2, r3
 80034e8:	627b      	str	r3, [r7, #36]	; 0x24
 80034ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80034ec:	623b      	str	r3, [r7, #32]
 80034ee:	e002      	b.n	80034f6 <HAL_RCC_GetSysClockFreq+0xa2>
 80034f0:	4b06      	ldr	r3, [pc, #24]	; (800350c <HAL_RCC_GetSysClockFreq+0xb8>)
 80034f2:	623b      	str	r3, [r7, #32]
 80034f4:	bf00      	nop
 80034f6:	6a3b      	ldr	r3, [r7, #32]
 80034f8:	4618      	mov	r0, r3
 80034fa:	3728      	adds	r7, #40	; 0x28
 80034fc:	46bd      	mov	sp, r7
 80034fe:	bc90      	pop	{r4, r7}
 8003500:	4770      	bx	lr
 8003502:	bf00      	nop
 8003504:	080050dc 	.word	0x080050dc
 8003508:	40021000 	.word	0x40021000
 800350c:	007a1200 	.word	0x007a1200
 8003510:	003d0900 	.word	0x003d0900

08003514 <HAL_RCC_GetHCLKFreq>:
 8003514:	b480      	push	{r7}
 8003516:	af00      	add	r7, sp, #0
 8003518:	4b02      	ldr	r3, [pc, #8]	; (8003524 <HAL_RCC_GetHCLKFreq+0x10>)
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	4618      	mov	r0, r3
 800351e:	46bd      	mov	sp, r7
 8003520:	bc80      	pop	{r7}
 8003522:	4770      	bx	lr
 8003524:	2000004c 	.word	0x2000004c

08003528 <HAL_RCC_GetPCLK1Freq>:
 8003528:	b580      	push	{r7, lr}
 800352a:	af00      	add	r7, sp, #0
 800352c:	f7ff fff2 	bl	8003514 <HAL_RCC_GetHCLKFreq>
 8003530:	4602      	mov	r2, r0
 8003532:	4b05      	ldr	r3, [pc, #20]	; (8003548 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003534:	685b      	ldr	r3, [r3, #4]
 8003536:	0a1b      	lsrs	r3, r3, #8
 8003538:	f003 0307 	and.w	r3, r3, #7
 800353c:	4903      	ldr	r1, [pc, #12]	; (800354c <HAL_RCC_GetPCLK1Freq+0x24>)
 800353e:	5ccb      	ldrb	r3, [r1, r3]
 8003540:	fa22 f303 	lsr.w	r3, r2, r3
 8003544:	4618      	mov	r0, r3
 8003546:	bd80      	pop	{r7, pc}
 8003548:	40021000 	.word	0x40021000
 800354c:	080050fc 	.word	0x080050fc

08003550 <HAL_RCC_GetPCLK2Freq>:
 8003550:	b580      	push	{r7, lr}
 8003552:	af00      	add	r7, sp, #0
 8003554:	f7ff ffde 	bl	8003514 <HAL_RCC_GetHCLKFreq>
 8003558:	4602      	mov	r2, r0
 800355a:	4b05      	ldr	r3, [pc, #20]	; (8003570 <HAL_RCC_GetPCLK2Freq+0x20>)
 800355c:	685b      	ldr	r3, [r3, #4]
 800355e:	0adb      	lsrs	r3, r3, #11
 8003560:	f003 0307 	and.w	r3, r3, #7
 8003564:	4903      	ldr	r1, [pc, #12]	; (8003574 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003566:	5ccb      	ldrb	r3, [r1, r3]
 8003568:	fa22 f303 	lsr.w	r3, r2, r3
 800356c:	4618      	mov	r0, r3
 800356e:	bd80      	pop	{r7, pc}
 8003570:	40021000 	.word	0x40021000
 8003574:	080050fc 	.word	0x080050fc

08003578 <RCC_Delay>:
 8003578:	b480      	push	{r7}
 800357a:	b085      	sub	sp, #20
 800357c:	af00      	add	r7, sp, #0
 800357e:	6078      	str	r0, [r7, #4]
 8003580:	4b0a      	ldr	r3, [pc, #40]	; (80035ac <RCC_Delay+0x34>)
 8003582:	681b      	ldr	r3, [r3, #0]
 8003584:	4a0a      	ldr	r2, [pc, #40]	; (80035b0 <RCC_Delay+0x38>)
 8003586:	fba2 2303 	umull	r2, r3, r2, r3
 800358a:	0a5b      	lsrs	r3, r3, #9
 800358c:	687a      	ldr	r2, [r7, #4]
 800358e:	fb02 f303 	mul.w	r3, r2, r3
 8003592:	60fb      	str	r3, [r7, #12]
 8003594:	bf00      	nop
 8003596:	68fb      	ldr	r3, [r7, #12]
 8003598:	1e5a      	subs	r2, r3, #1
 800359a:	60fa      	str	r2, [r7, #12]
 800359c:	2b00      	cmp	r3, #0
 800359e:	d1f9      	bne.n	8003594 <RCC_Delay+0x1c>
 80035a0:	bf00      	nop
 80035a2:	bf00      	nop
 80035a4:	3714      	adds	r7, #20
 80035a6:	46bd      	mov	sp, r7
 80035a8:	bc80      	pop	{r7}
 80035aa:	4770      	bx	lr
 80035ac:	2000004c 	.word	0x2000004c
 80035b0:	10624dd3 	.word	0x10624dd3

080035b4 <HAL_TIM_Base_Init>:
 80035b4:	b580      	push	{r7, lr}
 80035b6:	b082      	sub	sp, #8
 80035b8:	af00      	add	r7, sp, #0
 80035ba:	6078      	str	r0, [r7, #4]
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d101      	bne.n	80035c6 <HAL_TIM_Base_Init+0x12>
 80035c2:	2301      	movs	r3, #1
 80035c4:	e041      	b.n	800364a <HAL_TIM_Base_Init+0x96>
 80035c6:	687b      	ldr	r3, [r7, #4]
 80035c8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80035cc:	b2db      	uxtb	r3, r3
 80035ce:	2b00      	cmp	r3, #0
 80035d0:	d106      	bne.n	80035e0 <HAL_TIM_Base_Init+0x2c>
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	2200      	movs	r2, #0
 80035d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80035da:	6878      	ldr	r0, [r7, #4]
 80035dc:	f7fe fd94 	bl	8002108 <HAL_TIM_Base_MspInit>
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	2202      	movs	r2, #2
 80035e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	681a      	ldr	r2, [r3, #0]
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	3304      	adds	r3, #4
 80035f0:	4619      	mov	r1, r3
 80035f2:	4610      	mov	r0, r2
 80035f4:	f000 fc28 	bl	8003e48 <TIM_Base_SetConfig>
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	2201      	movs	r2, #1
 80035fc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	2201      	movs	r2, #1
 8003604:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	2201      	movs	r2, #1
 800360c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	2201      	movs	r2, #1
 8003614:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	2201      	movs	r2, #1
 800361c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003620:	687b      	ldr	r3, [r7, #4]
 8003622:	2201      	movs	r2, #1
 8003624:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	2201      	movs	r2, #1
 800362c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	2201      	movs	r2, #1
 8003634:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	2201      	movs	r2, #1
 800363c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	2201      	movs	r2, #1
 8003644:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003648:	2300      	movs	r3, #0
 800364a:	4618      	mov	r0, r3
 800364c:	3708      	adds	r7, #8
 800364e:	46bd      	mov	sp, r7
 8003650:	bd80      	pop	{r7, pc}
	...

08003654 <HAL_TIM_Base_Start_IT>:
 8003654:	b480      	push	{r7}
 8003656:	b085      	sub	sp, #20
 8003658:	af00      	add	r7, sp, #0
 800365a:	6078      	str	r0, [r7, #4]
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003662:	b2db      	uxtb	r3, r3
 8003664:	2b01      	cmp	r3, #1
 8003666:	d001      	beq.n	800366c <HAL_TIM_Base_Start_IT+0x18>
 8003668:	2301      	movs	r3, #1
 800366a:	e03a      	b.n	80036e2 <HAL_TIM_Base_Start_IT+0x8e>
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	2202      	movs	r2, #2
 8003670:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	68da      	ldr	r2, [r3, #12]
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	f042 0201 	orr.w	r2, r2, #1
 8003682:	60da      	str	r2, [r3, #12]
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	4a18      	ldr	r2, [pc, #96]	; (80036ec <HAL_TIM_Base_Start_IT+0x98>)
 800368a:	4293      	cmp	r3, r2
 800368c:	d00e      	beq.n	80036ac <HAL_TIM_Base_Start_IT+0x58>
 800368e:	687b      	ldr	r3, [r7, #4]
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003696:	d009      	beq.n	80036ac <HAL_TIM_Base_Start_IT+0x58>
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	681b      	ldr	r3, [r3, #0]
 800369c:	4a14      	ldr	r2, [pc, #80]	; (80036f0 <HAL_TIM_Base_Start_IT+0x9c>)
 800369e:	4293      	cmp	r3, r2
 80036a0:	d004      	beq.n	80036ac <HAL_TIM_Base_Start_IT+0x58>
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	681b      	ldr	r3, [r3, #0]
 80036a6:	4a13      	ldr	r2, [pc, #76]	; (80036f4 <HAL_TIM_Base_Start_IT+0xa0>)
 80036a8:	4293      	cmp	r3, r2
 80036aa:	d111      	bne.n	80036d0 <HAL_TIM_Base_Start_IT+0x7c>
 80036ac:	687b      	ldr	r3, [r7, #4]
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	689b      	ldr	r3, [r3, #8]
 80036b2:	f003 0307 	and.w	r3, r3, #7
 80036b6:	60fb      	str	r3, [r7, #12]
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	2b06      	cmp	r3, #6
 80036bc:	d010      	beq.n	80036e0 <HAL_TIM_Base_Start_IT+0x8c>
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	681a      	ldr	r2, [r3, #0]
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	f042 0201 	orr.w	r2, r2, #1
 80036cc:	601a      	str	r2, [r3, #0]
 80036ce:	e007      	b.n	80036e0 <HAL_TIM_Base_Start_IT+0x8c>
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	681b      	ldr	r3, [r3, #0]
 80036d4:	681a      	ldr	r2, [r3, #0]
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	f042 0201 	orr.w	r2, r2, #1
 80036de:	601a      	str	r2, [r3, #0]
 80036e0:	2300      	movs	r3, #0
 80036e2:	4618      	mov	r0, r3
 80036e4:	3714      	adds	r7, #20
 80036e6:	46bd      	mov	sp, r7
 80036e8:	bc80      	pop	{r7}
 80036ea:	4770      	bx	lr
 80036ec:	40012c00 	.word	0x40012c00
 80036f0:	40000400 	.word	0x40000400
 80036f4:	40000800 	.word	0x40000800

080036f8 <HAL_TIM_PWM_Init>:
 80036f8:	b580      	push	{r7, lr}
 80036fa:	b082      	sub	sp, #8
 80036fc:	af00      	add	r7, sp, #0
 80036fe:	6078      	str	r0, [r7, #4]
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	2b00      	cmp	r3, #0
 8003704:	d101      	bne.n	800370a <HAL_TIM_PWM_Init+0x12>
 8003706:	2301      	movs	r3, #1
 8003708:	e041      	b.n	800378e <HAL_TIM_PWM_Init+0x96>
 800370a:	687b      	ldr	r3, [r7, #4]
 800370c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003710:	b2db      	uxtb	r3, r3
 8003712:	2b00      	cmp	r3, #0
 8003714:	d106      	bne.n	8003724 <HAL_TIM_PWM_Init+0x2c>
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	2200      	movs	r2, #0
 800371a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800371e:	6878      	ldr	r0, [r7, #4]
 8003720:	f000 f839 	bl	8003796 <HAL_TIM_PWM_MspInit>
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	2202      	movs	r2, #2
 8003728:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	681a      	ldr	r2, [r3, #0]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	3304      	adds	r3, #4
 8003734:	4619      	mov	r1, r3
 8003736:	4610      	mov	r0, r2
 8003738:	f000 fb86 	bl	8003e48 <TIM_Base_SetConfig>
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	2201      	movs	r2, #1
 8003740:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	2201      	movs	r2, #1
 8003748:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800374c:	687b      	ldr	r3, [r7, #4]
 800374e:	2201      	movs	r2, #1
 8003750:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	2201      	movs	r2, #1
 8003758:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	2201      	movs	r2, #1
 8003760:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	2201      	movs	r2, #1
 8003768:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	2201      	movs	r2, #1
 8003770:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	2201      	movs	r2, #1
 8003778:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	2201      	movs	r2, #1
 8003780:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	2201      	movs	r2, #1
 8003788:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800378c:	2300      	movs	r3, #0
 800378e:	4618      	mov	r0, r3
 8003790:	3708      	adds	r7, #8
 8003792:	46bd      	mov	sp, r7
 8003794:	bd80      	pop	{r7, pc}

08003796 <HAL_TIM_PWM_MspInit>:
 8003796:	b480      	push	{r7}
 8003798:	b083      	sub	sp, #12
 800379a:	af00      	add	r7, sp, #0
 800379c:	6078      	str	r0, [r7, #4]
 800379e:	bf00      	nop
 80037a0:	370c      	adds	r7, #12
 80037a2:	46bd      	mov	sp, r7
 80037a4:	bc80      	pop	{r7}
 80037a6:	4770      	bx	lr

080037a8 <HAL_TIM_PWM_Start>:
 80037a8:	b580      	push	{r7, lr}
 80037aa:	b084      	sub	sp, #16
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	6078      	str	r0, [r7, #4]
 80037b0:	6039      	str	r1, [r7, #0]
 80037b2:	683b      	ldr	r3, [r7, #0]
 80037b4:	2b00      	cmp	r3, #0
 80037b6:	d109      	bne.n	80037cc <HAL_TIM_PWM_Start+0x24>
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80037be:	b2db      	uxtb	r3, r3
 80037c0:	2b01      	cmp	r3, #1
 80037c2:	bf14      	ite	ne
 80037c4:	2301      	movne	r3, #1
 80037c6:	2300      	moveq	r3, #0
 80037c8:	b2db      	uxtb	r3, r3
 80037ca:	e022      	b.n	8003812 <HAL_TIM_PWM_Start+0x6a>
 80037cc:	683b      	ldr	r3, [r7, #0]
 80037ce:	2b04      	cmp	r3, #4
 80037d0:	d109      	bne.n	80037e6 <HAL_TIM_PWM_Start+0x3e>
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80037d8:	b2db      	uxtb	r3, r3
 80037da:	2b01      	cmp	r3, #1
 80037dc:	bf14      	ite	ne
 80037de:	2301      	movne	r3, #1
 80037e0:	2300      	moveq	r3, #0
 80037e2:	b2db      	uxtb	r3, r3
 80037e4:	e015      	b.n	8003812 <HAL_TIM_PWM_Start+0x6a>
 80037e6:	683b      	ldr	r3, [r7, #0]
 80037e8:	2b08      	cmp	r3, #8
 80037ea:	d109      	bne.n	8003800 <HAL_TIM_PWM_Start+0x58>
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80037f2:	b2db      	uxtb	r3, r3
 80037f4:	2b01      	cmp	r3, #1
 80037f6:	bf14      	ite	ne
 80037f8:	2301      	movne	r3, #1
 80037fa:	2300      	moveq	r3, #0
 80037fc:	b2db      	uxtb	r3, r3
 80037fe:	e008      	b.n	8003812 <HAL_TIM_PWM_Start+0x6a>
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003806:	b2db      	uxtb	r3, r3
 8003808:	2b01      	cmp	r3, #1
 800380a:	bf14      	ite	ne
 800380c:	2301      	movne	r3, #1
 800380e:	2300      	moveq	r3, #0
 8003810:	b2db      	uxtb	r3, r3
 8003812:	2b00      	cmp	r3, #0
 8003814:	d001      	beq.n	800381a <HAL_TIM_PWM_Start+0x72>
 8003816:	2301      	movs	r3, #1
 8003818:	e05e      	b.n	80038d8 <HAL_TIM_PWM_Start+0x130>
 800381a:	683b      	ldr	r3, [r7, #0]
 800381c:	2b00      	cmp	r3, #0
 800381e:	d104      	bne.n	800382a <HAL_TIM_PWM_Start+0x82>
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	2202      	movs	r2, #2
 8003824:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003828:	e013      	b.n	8003852 <HAL_TIM_PWM_Start+0xaa>
 800382a:	683b      	ldr	r3, [r7, #0]
 800382c:	2b04      	cmp	r3, #4
 800382e:	d104      	bne.n	800383a <HAL_TIM_PWM_Start+0x92>
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	2202      	movs	r2, #2
 8003834:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003838:	e00b      	b.n	8003852 <HAL_TIM_PWM_Start+0xaa>
 800383a:	683b      	ldr	r3, [r7, #0]
 800383c:	2b08      	cmp	r3, #8
 800383e:	d104      	bne.n	800384a <HAL_TIM_PWM_Start+0xa2>
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	2202      	movs	r2, #2
 8003844:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003848:	e003      	b.n	8003852 <HAL_TIM_PWM_Start+0xaa>
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	2202      	movs	r2, #2
 800384e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	681b      	ldr	r3, [r3, #0]
 8003856:	2201      	movs	r2, #1
 8003858:	6839      	ldr	r1, [r7, #0]
 800385a:	4618      	mov	r0, r3
 800385c:	f000 fd74 	bl	8004348 <TIM_CCxChannelCmd>
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	4a1e      	ldr	r2, [pc, #120]	; (80038e0 <HAL_TIM_PWM_Start+0x138>)
 8003866:	4293      	cmp	r3, r2
 8003868:	d107      	bne.n	800387a <HAL_TIM_PWM_Start+0xd2>
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	681b      	ldr	r3, [r3, #0]
 8003874:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003878:	645a      	str	r2, [r3, #68]	; 0x44
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	4a18      	ldr	r2, [pc, #96]	; (80038e0 <HAL_TIM_PWM_Start+0x138>)
 8003880:	4293      	cmp	r3, r2
 8003882:	d00e      	beq.n	80038a2 <HAL_TIM_PWM_Start+0xfa>
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800388c:	d009      	beq.n	80038a2 <HAL_TIM_PWM_Start+0xfa>
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	681b      	ldr	r3, [r3, #0]
 8003892:	4a14      	ldr	r2, [pc, #80]	; (80038e4 <HAL_TIM_PWM_Start+0x13c>)
 8003894:	4293      	cmp	r3, r2
 8003896:	d004      	beq.n	80038a2 <HAL_TIM_PWM_Start+0xfa>
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	4a12      	ldr	r2, [pc, #72]	; (80038e8 <HAL_TIM_PWM_Start+0x140>)
 800389e:	4293      	cmp	r3, r2
 80038a0:	d111      	bne.n	80038c6 <HAL_TIM_PWM_Start+0x11e>
 80038a2:	687b      	ldr	r3, [r7, #4]
 80038a4:	681b      	ldr	r3, [r3, #0]
 80038a6:	689b      	ldr	r3, [r3, #8]
 80038a8:	f003 0307 	and.w	r3, r3, #7
 80038ac:	60fb      	str	r3, [r7, #12]
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	2b06      	cmp	r3, #6
 80038b2:	d010      	beq.n	80038d6 <HAL_TIM_PWM_Start+0x12e>
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	681a      	ldr	r2, [r3, #0]
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	f042 0201 	orr.w	r2, r2, #1
 80038c2:	601a      	str	r2, [r3, #0]
 80038c4:	e007      	b.n	80038d6 <HAL_TIM_PWM_Start+0x12e>
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	681b      	ldr	r3, [r3, #0]
 80038ca:	681a      	ldr	r2, [r3, #0]
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	f042 0201 	orr.w	r2, r2, #1
 80038d4:	601a      	str	r2, [r3, #0]
 80038d6:	2300      	movs	r3, #0
 80038d8:	4618      	mov	r0, r3
 80038da:	3710      	adds	r7, #16
 80038dc:	46bd      	mov	sp, r7
 80038de:	bd80      	pop	{r7, pc}
 80038e0:	40012c00 	.word	0x40012c00
 80038e4:	40000400 	.word	0x40000400
 80038e8:	40000800 	.word	0x40000800

080038ec <HAL_TIM_IRQHandler>:
 80038ec:	b580      	push	{r7, lr}
 80038ee:	b082      	sub	sp, #8
 80038f0:	af00      	add	r7, sp, #0
 80038f2:	6078      	str	r0, [r7, #4]
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	691b      	ldr	r3, [r3, #16]
 80038fa:	f003 0302 	and.w	r3, r3, #2
 80038fe:	2b02      	cmp	r3, #2
 8003900:	d122      	bne.n	8003948 <HAL_TIM_IRQHandler+0x5c>
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	681b      	ldr	r3, [r3, #0]
 8003906:	68db      	ldr	r3, [r3, #12]
 8003908:	f003 0302 	and.w	r3, r3, #2
 800390c:	2b02      	cmp	r3, #2
 800390e:	d11b      	bne.n	8003948 <HAL_TIM_IRQHandler+0x5c>
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	f06f 0202 	mvn.w	r2, #2
 8003918:	611a      	str	r2, [r3, #16]
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	2201      	movs	r2, #1
 800391e:	771a      	strb	r2, [r3, #28]
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	699b      	ldr	r3, [r3, #24]
 8003926:	f003 0303 	and.w	r3, r3, #3
 800392a:	2b00      	cmp	r3, #0
 800392c:	d003      	beq.n	8003936 <HAL_TIM_IRQHandler+0x4a>
 800392e:	6878      	ldr	r0, [r7, #4]
 8003930:	f000 fa6f 	bl	8003e12 <HAL_TIM_IC_CaptureCallback>
 8003934:	e005      	b.n	8003942 <HAL_TIM_IRQHandler+0x56>
 8003936:	6878      	ldr	r0, [r7, #4]
 8003938:	f000 fa62 	bl	8003e00 <HAL_TIM_OC_DelayElapsedCallback>
 800393c:	6878      	ldr	r0, [r7, #4]
 800393e:	f000 fa71 	bl	8003e24 <HAL_TIM_PWM_PulseFinishedCallback>
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	2200      	movs	r2, #0
 8003946:	771a      	strb	r2, [r3, #28]
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	681b      	ldr	r3, [r3, #0]
 800394c:	691b      	ldr	r3, [r3, #16]
 800394e:	f003 0304 	and.w	r3, r3, #4
 8003952:	2b04      	cmp	r3, #4
 8003954:	d122      	bne.n	800399c <HAL_TIM_IRQHandler+0xb0>
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	68db      	ldr	r3, [r3, #12]
 800395c:	f003 0304 	and.w	r3, r3, #4
 8003960:	2b04      	cmp	r3, #4
 8003962:	d11b      	bne.n	800399c <HAL_TIM_IRQHandler+0xb0>
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	681b      	ldr	r3, [r3, #0]
 8003968:	f06f 0204 	mvn.w	r2, #4
 800396c:	611a      	str	r2, [r3, #16]
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	2202      	movs	r2, #2
 8003972:	771a      	strb	r2, [r3, #28]
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	699b      	ldr	r3, [r3, #24]
 800397a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800397e:	2b00      	cmp	r3, #0
 8003980:	d003      	beq.n	800398a <HAL_TIM_IRQHandler+0x9e>
 8003982:	6878      	ldr	r0, [r7, #4]
 8003984:	f000 fa45 	bl	8003e12 <HAL_TIM_IC_CaptureCallback>
 8003988:	e005      	b.n	8003996 <HAL_TIM_IRQHandler+0xaa>
 800398a:	6878      	ldr	r0, [r7, #4]
 800398c:	f000 fa38 	bl	8003e00 <HAL_TIM_OC_DelayElapsedCallback>
 8003990:	6878      	ldr	r0, [r7, #4]
 8003992:	f000 fa47 	bl	8003e24 <HAL_TIM_PWM_PulseFinishedCallback>
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	2200      	movs	r2, #0
 800399a:	771a      	strb	r2, [r3, #28]
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	681b      	ldr	r3, [r3, #0]
 80039a0:	691b      	ldr	r3, [r3, #16]
 80039a2:	f003 0308 	and.w	r3, r3, #8
 80039a6:	2b08      	cmp	r3, #8
 80039a8:	d122      	bne.n	80039f0 <HAL_TIM_IRQHandler+0x104>
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	68db      	ldr	r3, [r3, #12]
 80039b0:	f003 0308 	and.w	r3, r3, #8
 80039b4:	2b08      	cmp	r3, #8
 80039b6:	d11b      	bne.n	80039f0 <HAL_TIM_IRQHandler+0x104>
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	f06f 0208 	mvn.w	r2, #8
 80039c0:	611a      	str	r2, [r3, #16]
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	2204      	movs	r2, #4
 80039c6:	771a      	strb	r2, [r3, #28]
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	69db      	ldr	r3, [r3, #28]
 80039ce:	f003 0303 	and.w	r3, r3, #3
 80039d2:	2b00      	cmp	r3, #0
 80039d4:	d003      	beq.n	80039de <HAL_TIM_IRQHandler+0xf2>
 80039d6:	6878      	ldr	r0, [r7, #4]
 80039d8:	f000 fa1b 	bl	8003e12 <HAL_TIM_IC_CaptureCallback>
 80039dc:	e005      	b.n	80039ea <HAL_TIM_IRQHandler+0xfe>
 80039de:	6878      	ldr	r0, [r7, #4]
 80039e0:	f000 fa0e 	bl	8003e00 <HAL_TIM_OC_DelayElapsedCallback>
 80039e4:	6878      	ldr	r0, [r7, #4]
 80039e6:	f000 fa1d 	bl	8003e24 <HAL_TIM_PWM_PulseFinishedCallback>
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	2200      	movs	r2, #0
 80039ee:	771a      	strb	r2, [r3, #28]
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	691b      	ldr	r3, [r3, #16]
 80039f6:	f003 0310 	and.w	r3, r3, #16
 80039fa:	2b10      	cmp	r3, #16
 80039fc:	d122      	bne.n	8003a44 <HAL_TIM_IRQHandler+0x158>
 80039fe:	687b      	ldr	r3, [r7, #4]
 8003a00:	681b      	ldr	r3, [r3, #0]
 8003a02:	68db      	ldr	r3, [r3, #12]
 8003a04:	f003 0310 	and.w	r3, r3, #16
 8003a08:	2b10      	cmp	r3, #16
 8003a0a:	d11b      	bne.n	8003a44 <HAL_TIM_IRQHandler+0x158>
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	f06f 0210 	mvn.w	r2, #16
 8003a14:	611a      	str	r2, [r3, #16]
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	2208      	movs	r2, #8
 8003a1a:	771a      	strb	r2, [r3, #28]
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	681b      	ldr	r3, [r3, #0]
 8003a20:	69db      	ldr	r3, [r3, #28]
 8003a22:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003a26:	2b00      	cmp	r3, #0
 8003a28:	d003      	beq.n	8003a32 <HAL_TIM_IRQHandler+0x146>
 8003a2a:	6878      	ldr	r0, [r7, #4]
 8003a2c:	f000 f9f1 	bl	8003e12 <HAL_TIM_IC_CaptureCallback>
 8003a30:	e005      	b.n	8003a3e <HAL_TIM_IRQHandler+0x152>
 8003a32:	6878      	ldr	r0, [r7, #4]
 8003a34:	f000 f9e4 	bl	8003e00 <HAL_TIM_OC_DelayElapsedCallback>
 8003a38:	6878      	ldr	r0, [r7, #4]
 8003a3a:	f000 f9f3 	bl	8003e24 <HAL_TIM_PWM_PulseFinishedCallback>
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	2200      	movs	r2, #0
 8003a42:	771a      	strb	r2, [r3, #28]
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	681b      	ldr	r3, [r3, #0]
 8003a48:	691b      	ldr	r3, [r3, #16]
 8003a4a:	f003 0301 	and.w	r3, r3, #1
 8003a4e:	2b01      	cmp	r3, #1
 8003a50:	d10e      	bne.n	8003a70 <HAL_TIM_IRQHandler+0x184>
 8003a52:	687b      	ldr	r3, [r7, #4]
 8003a54:	681b      	ldr	r3, [r3, #0]
 8003a56:	68db      	ldr	r3, [r3, #12]
 8003a58:	f003 0301 	and.w	r3, r3, #1
 8003a5c:	2b01      	cmp	r3, #1
 8003a5e:	d107      	bne.n	8003a70 <HAL_TIM_IRQHandler+0x184>
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	f06f 0201 	mvn.w	r2, #1
 8003a68:	611a      	str	r2, [r3, #16]
 8003a6a:	6878      	ldr	r0, [r7, #4]
 8003a6c:	f7fd fdf8 	bl	8001660 <HAL_TIM_PeriodElapsedCallback>
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	691b      	ldr	r3, [r3, #16]
 8003a76:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003a7a:	2b80      	cmp	r3, #128	; 0x80
 8003a7c:	d10e      	bne.n	8003a9c <HAL_TIM_IRQHandler+0x1b0>
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	681b      	ldr	r3, [r3, #0]
 8003a82:	68db      	ldr	r3, [r3, #12]
 8003a84:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003a88:	2b80      	cmp	r3, #128	; 0x80
 8003a8a:	d107      	bne.n	8003a9c <HAL_TIM_IRQHandler+0x1b0>
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	681b      	ldr	r3, [r3, #0]
 8003a90:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8003a94:	611a      	str	r2, [r3, #16]
 8003a96:	6878      	ldr	r0, [r7, #4]
 8003a98:	f000 fce1 	bl	800445e <HAL_TIMEx_BreakCallback>
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	691b      	ldr	r3, [r3, #16]
 8003aa2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003aa6:	2b40      	cmp	r3, #64	; 0x40
 8003aa8:	d10e      	bne.n	8003ac8 <HAL_TIM_IRQHandler+0x1dc>
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	68db      	ldr	r3, [r3, #12]
 8003ab0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003ab4:	2b40      	cmp	r3, #64	; 0x40
 8003ab6:	d107      	bne.n	8003ac8 <HAL_TIM_IRQHandler+0x1dc>
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	681b      	ldr	r3, [r3, #0]
 8003abc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8003ac0:	611a      	str	r2, [r3, #16]
 8003ac2:	6878      	ldr	r0, [r7, #4]
 8003ac4:	f000 f9b7 	bl	8003e36 <HAL_TIM_TriggerCallback>
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	691b      	ldr	r3, [r3, #16]
 8003ace:	f003 0320 	and.w	r3, r3, #32
 8003ad2:	2b20      	cmp	r3, #32
 8003ad4:	d10e      	bne.n	8003af4 <HAL_TIM_IRQHandler+0x208>
 8003ad6:	687b      	ldr	r3, [r7, #4]
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	68db      	ldr	r3, [r3, #12]
 8003adc:	f003 0320 	and.w	r3, r3, #32
 8003ae0:	2b20      	cmp	r3, #32
 8003ae2:	d107      	bne.n	8003af4 <HAL_TIM_IRQHandler+0x208>
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	f06f 0220 	mvn.w	r2, #32
 8003aec:	611a      	str	r2, [r3, #16]
 8003aee:	6878      	ldr	r0, [r7, #4]
 8003af0:	f000 fcac 	bl	800444c <HAL_TIMEx_CommutCallback>
 8003af4:	bf00      	nop
 8003af6:	3708      	adds	r7, #8
 8003af8:	46bd      	mov	sp, r7
 8003afa:	bd80      	pop	{r7, pc}

08003afc <HAL_TIM_PWM_ConfigChannel>:
 8003afc:	b580      	push	{r7, lr}
 8003afe:	b084      	sub	sp, #16
 8003b00:	af00      	add	r7, sp, #0
 8003b02:	60f8      	str	r0, [r7, #12]
 8003b04:	60b9      	str	r1, [r7, #8]
 8003b06:	607a      	str	r2, [r7, #4]
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003b0e:	2b01      	cmp	r3, #1
 8003b10:	d101      	bne.n	8003b16 <HAL_TIM_PWM_ConfigChannel+0x1a>
 8003b12:	2302      	movs	r3, #2
 8003b14:	e0ac      	b.n	8003c70 <HAL_TIM_PWM_ConfigChannel+0x174>
 8003b16:	68fb      	ldr	r3, [r7, #12]
 8003b18:	2201      	movs	r2, #1
 8003b1a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	2b0c      	cmp	r3, #12
 8003b22:	f200 809f 	bhi.w	8003c64 <HAL_TIM_PWM_ConfigChannel+0x168>
 8003b26:	a201      	add	r2, pc, #4	; (adr r2, 8003b2c <HAL_TIM_PWM_ConfigChannel+0x30>)
 8003b28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b2c:	08003b61 	.word	0x08003b61
 8003b30:	08003c65 	.word	0x08003c65
 8003b34:	08003c65 	.word	0x08003c65
 8003b38:	08003c65 	.word	0x08003c65
 8003b3c:	08003ba1 	.word	0x08003ba1
 8003b40:	08003c65 	.word	0x08003c65
 8003b44:	08003c65 	.word	0x08003c65
 8003b48:	08003c65 	.word	0x08003c65
 8003b4c:	08003be3 	.word	0x08003be3
 8003b50:	08003c65 	.word	0x08003c65
 8003b54:	08003c65 	.word	0x08003c65
 8003b58:	08003c65 	.word	0x08003c65
 8003b5c:	08003c23 	.word	0x08003c23
 8003b60:	68fb      	ldr	r3, [r7, #12]
 8003b62:	681b      	ldr	r3, [r3, #0]
 8003b64:	68b9      	ldr	r1, [r7, #8]
 8003b66:	4618      	mov	r0, r3
 8003b68:	f000 f9d0 	bl	8003f0c <TIM_OC1_SetConfig>
 8003b6c:	68fb      	ldr	r3, [r7, #12]
 8003b6e:	681b      	ldr	r3, [r3, #0]
 8003b70:	699a      	ldr	r2, [r3, #24]
 8003b72:	68fb      	ldr	r3, [r7, #12]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	f042 0208 	orr.w	r2, r2, #8
 8003b7a:	619a      	str	r2, [r3, #24]
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	699a      	ldr	r2, [r3, #24]
 8003b82:	68fb      	ldr	r3, [r7, #12]
 8003b84:	681b      	ldr	r3, [r3, #0]
 8003b86:	f022 0204 	bic.w	r2, r2, #4
 8003b8a:	619a      	str	r2, [r3, #24]
 8003b8c:	68fb      	ldr	r3, [r7, #12]
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	6999      	ldr	r1, [r3, #24]
 8003b92:	68bb      	ldr	r3, [r7, #8]
 8003b94:	691a      	ldr	r2, [r3, #16]
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	430a      	orrs	r2, r1
 8003b9c:	619a      	str	r2, [r3, #24]
 8003b9e:	e062      	b.n	8003c66 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8003ba0:	68fb      	ldr	r3, [r7, #12]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	68b9      	ldr	r1, [r7, #8]
 8003ba6:	4618      	mov	r0, r3
 8003ba8:	f000 fa16 	bl	8003fd8 <TIM_OC2_SetConfig>
 8003bac:	68fb      	ldr	r3, [r7, #12]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	699a      	ldr	r2, [r3, #24]
 8003bb2:	68fb      	ldr	r3, [r7, #12]
 8003bb4:	681b      	ldr	r3, [r3, #0]
 8003bb6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003bba:	619a      	str	r2, [r3, #24]
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	699a      	ldr	r2, [r3, #24]
 8003bc2:	68fb      	ldr	r3, [r7, #12]
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003bca:	619a      	str	r2, [r3, #24]
 8003bcc:	68fb      	ldr	r3, [r7, #12]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	6999      	ldr	r1, [r3, #24]
 8003bd2:	68bb      	ldr	r3, [r7, #8]
 8003bd4:	691b      	ldr	r3, [r3, #16]
 8003bd6:	021a      	lsls	r2, r3, #8
 8003bd8:	68fb      	ldr	r3, [r7, #12]
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	430a      	orrs	r2, r1
 8003bde:	619a      	str	r2, [r3, #24]
 8003be0:	e041      	b.n	8003c66 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8003be2:	68fb      	ldr	r3, [r7, #12]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	68b9      	ldr	r1, [r7, #8]
 8003be8:	4618      	mov	r0, r3
 8003bea:	f000 fa5f 	bl	80040ac <TIM_OC3_SetConfig>
 8003bee:	68fb      	ldr	r3, [r7, #12]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	69da      	ldr	r2, [r3, #28]
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	f042 0208 	orr.w	r2, r2, #8
 8003bfc:	61da      	str	r2, [r3, #28]
 8003bfe:	68fb      	ldr	r3, [r7, #12]
 8003c00:	681b      	ldr	r3, [r3, #0]
 8003c02:	69da      	ldr	r2, [r3, #28]
 8003c04:	68fb      	ldr	r3, [r7, #12]
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	f022 0204 	bic.w	r2, r2, #4
 8003c0c:	61da      	str	r2, [r3, #28]
 8003c0e:	68fb      	ldr	r3, [r7, #12]
 8003c10:	681b      	ldr	r3, [r3, #0]
 8003c12:	69d9      	ldr	r1, [r3, #28]
 8003c14:	68bb      	ldr	r3, [r7, #8]
 8003c16:	691a      	ldr	r2, [r3, #16]
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	430a      	orrs	r2, r1
 8003c1e:	61da      	str	r2, [r3, #28]
 8003c20:	e021      	b.n	8003c66 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8003c22:	68fb      	ldr	r3, [r7, #12]
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	68b9      	ldr	r1, [r7, #8]
 8003c28:	4618      	mov	r0, r3
 8003c2a:	f000 faa9 	bl	8004180 <TIM_OC4_SetConfig>
 8003c2e:	68fb      	ldr	r3, [r7, #12]
 8003c30:	681b      	ldr	r3, [r3, #0]
 8003c32:	69da      	ldr	r2, [r3, #28]
 8003c34:	68fb      	ldr	r3, [r7, #12]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003c3c:	61da      	str	r2, [r3, #28]
 8003c3e:	68fb      	ldr	r3, [r7, #12]
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	69da      	ldr	r2, [r3, #28]
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003c4c:	61da      	str	r2, [r3, #28]
 8003c4e:	68fb      	ldr	r3, [r7, #12]
 8003c50:	681b      	ldr	r3, [r3, #0]
 8003c52:	69d9      	ldr	r1, [r3, #28]
 8003c54:	68bb      	ldr	r3, [r7, #8]
 8003c56:	691b      	ldr	r3, [r3, #16]
 8003c58:	021a      	lsls	r2, r3, #8
 8003c5a:	68fb      	ldr	r3, [r7, #12]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	430a      	orrs	r2, r1
 8003c60:	61da      	str	r2, [r3, #28]
 8003c62:	e000      	b.n	8003c66 <HAL_TIM_PWM_ConfigChannel+0x16a>
 8003c64:	bf00      	nop
 8003c66:	68fb      	ldr	r3, [r7, #12]
 8003c68:	2200      	movs	r2, #0
 8003c6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003c6e:	2300      	movs	r3, #0
 8003c70:	4618      	mov	r0, r3
 8003c72:	3710      	adds	r7, #16
 8003c74:	46bd      	mov	sp, r7
 8003c76:	bd80      	pop	{r7, pc}

08003c78 <HAL_TIM_ConfigClockSource>:
 8003c78:	b580      	push	{r7, lr}
 8003c7a:	b084      	sub	sp, #16
 8003c7c:	af00      	add	r7, sp, #0
 8003c7e:	6078      	str	r0, [r7, #4]
 8003c80:	6039      	str	r1, [r7, #0]
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003c88:	2b01      	cmp	r3, #1
 8003c8a:	d101      	bne.n	8003c90 <HAL_TIM_ConfigClockSource+0x18>
 8003c8c:	2302      	movs	r3, #2
 8003c8e:	e0b3      	b.n	8003df8 <HAL_TIM_ConfigClockSource+0x180>
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	2201      	movs	r2, #1
 8003c94:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	2202      	movs	r2, #2
 8003c9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	681b      	ldr	r3, [r3, #0]
 8003ca4:	689b      	ldr	r3, [r3, #8]
 8003ca6:	60fb      	str	r3, [r7, #12]
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003cae:	60fb      	str	r3, [r7, #12]
 8003cb0:	68fb      	ldr	r3, [r7, #12]
 8003cb2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003cb6:	60fb      	str	r3, [r7, #12]
 8003cb8:	687b      	ldr	r3, [r7, #4]
 8003cba:	681b      	ldr	r3, [r3, #0]
 8003cbc:	68fa      	ldr	r2, [r7, #12]
 8003cbe:	609a      	str	r2, [r3, #8]
 8003cc0:	683b      	ldr	r3, [r7, #0]
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003cc8:	d03e      	beq.n	8003d48 <HAL_TIM_ConfigClockSource+0xd0>
 8003cca:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003cce:	f200 8087 	bhi.w	8003de0 <HAL_TIM_ConfigClockSource+0x168>
 8003cd2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003cd6:	f000 8085 	beq.w	8003de4 <HAL_TIM_ConfigClockSource+0x16c>
 8003cda:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003cde:	d87f      	bhi.n	8003de0 <HAL_TIM_ConfigClockSource+0x168>
 8003ce0:	2b70      	cmp	r3, #112	; 0x70
 8003ce2:	d01a      	beq.n	8003d1a <HAL_TIM_ConfigClockSource+0xa2>
 8003ce4:	2b70      	cmp	r3, #112	; 0x70
 8003ce6:	d87b      	bhi.n	8003de0 <HAL_TIM_ConfigClockSource+0x168>
 8003ce8:	2b60      	cmp	r3, #96	; 0x60
 8003cea:	d050      	beq.n	8003d8e <HAL_TIM_ConfigClockSource+0x116>
 8003cec:	2b60      	cmp	r3, #96	; 0x60
 8003cee:	d877      	bhi.n	8003de0 <HAL_TIM_ConfigClockSource+0x168>
 8003cf0:	2b50      	cmp	r3, #80	; 0x50
 8003cf2:	d03c      	beq.n	8003d6e <HAL_TIM_ConfigClockSource+0xf6>
 8003cf4:	2b50      	cmp	r3, #80	; 0x50
 8003cf6:	d873      	bhi.n	8003de0 <HAL_TIM_ConfigClockSource+0x168>
 8003cf8:	2b40      	cmp	r3, #64	; 0x40
 8003cfa:	d058      	beq.n	8003dae <HAL_TIM_ConfigClockSource+0x136>
 8003cfc:	2b40      	cmp	r3, #64	; 0x40
 8003cfe:	d86f      	bhi.n	8003de0 <HAL_TIM_ConfigClockSource+0x168>
 8003d00:	2b30      	cmp	r3, #48	; 0x30
 8003d02:	d064      	beq.n	8003dce <HAL_TIM_ConfigClockSource+0x156>
 8003d04:	2b30      	cmp	r3, #48	; 0x30
 8003d06:	d86b      	bhi.n	8003de0 <HAL_TIM_ConfigClockSource+0x168>
 8003d08:	2b20      	cmp	r3, #32
 8003d0a:	d060      	beq.n	8003dce <HAL_TIM_ConfigClockSource+0x156>
 8003d0c:	2b20      	cmp	r3, #32
 8003d0e:	d867      	bhi.n	8003de0 <HAL_TIM_ConfigClockSource+0x168>
 8003d10:	2b00      	cmp	r3, #0
 8003d12:	d05c      	beq.n	8003dce <HAL_TIM_ConfigClockSource+0x156>
 8003d14:	2b10      	cmp	r3, #16
 8003d16:	d05a      	beq.n	8003dce <HAL_TIM_ConfigClockSource+0x156>
 8003d18:	e062      	b.n	8003de0 <HAL_TIM_ConfigClockSource+0x168>
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	6818      	ldr	r0, [r3, #0]
 8003d1e:	683b      	ldr	r3, [r7, #0]
 8003d20:	6899      	ldr	r1, [r3, #8]
 8003d22:	683b      	ldr	r3, [r7, #0]
 8003d24:	685a      	ldr	r2, [r3, #4]
 8003d26:	683b      	ldr	r3, [r7, #0]
 8003d28:	68db      	ldr	r3, [r3, #12]
 8003d2a:	f000 faee 	bl	800430a <TIM_ETR_SetConfig>
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	681b      	ldr	r3, [r3, #0]
 8003d32:	689b      	ldr	r3, [r3, #8]
 8003d34:	60fb      	str	r3, [r7, #12]
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003d3c:	60fb      	str	r3, [r7, #12]
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	68fa      	ldr	r2, [r7, #12]
 8003d44:	609a      	str	r2, [r3, #8]
 8003d46:	e04e      	b.n	8003de6 <HAL_TIM_ConfigClockSource+0x16e>
 8003d48:	687b      	ldr	r3, [r7, #4]
 8003d4a:	6818      	ldr	r0, [r3, #0]
 8003d4c:	683b      	ldr	r3, [r7, #0]
 8003d4e:	6899      	ldr	r1, [r3, #8]
 8003d50:	683b      	ldr	r3, [r7, #0]
 8003d52:	685a      	ldr	r2, [r3, #4]
 8003d54:	683b      	ldr	r3, [r7, #0]
 8003d56:	68db      	ldr	r3, [r3, #12]
 8003d58:	f000 fad7 	bl	800430a <TIM_ETR_SetConfig>
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	681b      	ldr	r3, [r3, #0]
 8003d60:	689a      	ldr	r2, [r3, #8]
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003d6a:	609a      	str	r2, [r3, #8]
 8003d6c:	e03b      	b.n	8003de6 <HAL_TIM_ConfigClockSource+0x16e>
 8003d6e:	687b      	ldr	r3, [r7, #4]
 8003d70:	6818      	ldr	r0, [r3, #0]
 8003d72:	683b      	ldr	r3, [r7, #0]
 8003d74:	6859      	ldr	r1, [r3, #4]
 8003d76:	683b      	ldr	r3, [r7, #0]
 8003d78:	68db      	ldr	r3, [r3, #12]
 8003d7a:	461a      	mov	r2, r3
 8003d7c:	f000 fa4e 	bl	800421c <TIM_TI1_ConfigInputStage>
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	2150      	movs	r1, #80	; 0x50
 8003d86:	4618      	mov	r0, r3
 8003d88:	f000 faa5 	bl	80042d6 <TIM_ITRx_SetConfig>
 8003d8c:	e02b      	b.n	8003de6 <HAL_TIM_ConfigClockSource+0x16e>
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	6818      	ldr	r0, [r3, #0]
 8003d92:	683b      	ldr	r3, [r7, #0]
 8003d94:	6859      	ldr	r1, [r3, #4]
 8003d96:	683b      	ldr	r3, [r7, #0]
 8003d98:	68db      	ldr	r3, [r3, #12]
 8003d9a:	461a      	mov	r2, r3
 8003d9c:	f000 fa6c 	bl	8004278 <TIM_TI2_ConfigInputStage>
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	2160      	movs	r1, #96	; 0x60
 8003da6:	4618      	mov	r0, r3
 8003da8:	f000 fa95 	bl	80042d6 <TIM_ITRx_SetConfig>
 8003dac:	e01b      	b.n	8003de6 <HAL_TIM_ConfigClockSource+0x16e>
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	6818      	ldr	r0, [r3, #0]
 8003db2:	683b      	ldr	r3, [r7, #0]
 8003db4:	6859      	ldr	r1, [r3, #4]
 8003db6:	683b      	ldr	r3, [r7, #0]
 8003db8:	68db      	ldr	r3, [r3, #12]
 8003dba:	461a      	mov	r2, r3
 8003dbc:	f000 fa2e 	bl	800421c <TIM_TI1_ConfigInputStage>
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	2140      	movs	r1, #64	; 0x40
 8003dc6:	4618      	mov	r0, r3
 8003dc8:	f000 fa85 	bl	80042d6 <TIM_ITRx_SetConfig>
 8003dcc:	e00b      	b.n	8003de6 <HAL_TIM_ConfigClockSource+0x16e>
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	681a      	ldr	r2, [r3, #0]
 8003dd2:	683b      	ldr	r3, [r7, #0]
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	4619      	mov	r1, r3
 8003dd8:	4610      	mov	r0, r2
 8003dda:	f000 fa7c 	bl	80042d6 <TIM_ITRx_SetConfig>
 8003dde:	e002      	b.n	8003de6 <HAL_TIM_ConfigClockSource+0x16e>
 8003de0:	bf00      	nop
 8003de2:	e000      	b.n	8003de6 <HAL_TIM_ConfigClockSource+0x16e>
 8003de4:	bf00      	nop
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	2201      	movs	r2, #1
 8003dea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	2200      	movs	r2, #0
 8003df2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003df6:	2300      	movs	r3, #0
 8003df8:	4618      	mov	r0, r3
 8003dfa:	3710      	adds	r7, #16
 8003dfc:	46bd      	mov	sp, r7
 8003dfe:	bd80      	pop	{r7, pc}

08003e00 <HAL_TIM_OC_DelayElapsedCallback>:
 8003e00:	b480      	push	{r7}
 8003e02:	b083      	sub	sp, #12
 8003e04:	af00      	add	r7, sp, #0
 8003e06:	6078      	str	r0, [r7, #4]
 8003e08:	bf00      	nop
 8003e0a:	370c      	adds	r7, #12
 8003e0c:	46bd      	mov	sp, r7
 8003e0e:	bc80      	pop	{r7}
 8003e10:	4770      	bx	lr

08003e12 <HAL_TIM_IC_CaptureCallback>:
 8003e12:	b480      	push	{r7}
 8003e14:	b083      	sub	sp, #12
 8003e16:	af00      	add	r7, sp, #0
 8003e18:	6078      	str	r0, [r7, #4]
 8003e1a:	bf00      	nop
 8003e1c:	370c      	adds	r7, #12
 8003e1e:	46bd      	mov	sp, r7
 8003e20:	bc80      	pop	{r7}
 8003e22:	4770      	bx	lr

08003e24 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003e24:	b480      	push	{r7}
 8003e26:	b083      	sub	sp, #12
 8003e28:	af00      	add	r7, sp, #0
 8003e2a:	6078      	str	r0, [r7, #4]
 8003e2c:	bf00      	nop
 8003e2e:	370c      	adds	r7, #12
 8003e30:	46bd      	mov	sp, r7
 8003e32:	bc80      	pop	{r7}
 8003e34:	4770      	bx	lr

08003e36 <HAL_TIM_TriggerCallback>:
 8003e36:	b480      	push	{r7}
 8003e38:	b083      	sub	sp, #12
 8003e3a:	af00      	add	r7, sp, #0
 8003e3c:	6078      	str	r0, [r7, #4]
 8003e3e:	bf00      	nop
 8003e40:	370c      	adds	r7, #12
 8003e42:	46bd      	mov	sp, r7
 8003e44:	bc80      	pop	{r7}
 8003e46:	4770      	bx	lr

08003e48 <TIM_Base_SetConfig>:
 8003e48:	b480      	push	{r7}
 8003e4a:	b085      	sub	sp, #20
 8003e4c:	af00      	add	r7, sp, #0
 8003e4e:	6078      	str	r0, [r7, #4]
 8003e50:	6039      	str	r1, [r7, #0]
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	60fb      	str	r3, [r7, #12]
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	4a29      	ldr	r2, [pc, #164]	; (8003f00 <TIM_Base_SetConfig+0xb8>)
 8003e5c:	4293      	cmp	r3, r2
 8003e5e:	d00b      	beq.n	8003e78 <TIM_Base_SetConfig+0x30>
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003e66:	d007      	beq.n	8003e78 <TIM_Base_SetConfig+0x30>
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	4a26      	ldr	r2, [pc, #152]	; (8003f04 <TIM_Base_SetConfig+0xbc>)
 8003e6c:	4293      	cmp	r3, r2
 8003e6e:	d003      	beq.n	8003e78 <TIM_Base_SetConfig+0x30>
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	4a25      	ldr	r2, [pc, #148]	; (8003f08 <TIM_Base_SetConfig+0xc0>)
 8003e74:	4293      	cmp	r3, r2
 8003e76:	d108      	bne.n	8003e8a <TIM_Base_SetConfig+0x42>
 8003e78:	68fb      	ldr	r3, [r7, #12]
 8003e7a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003e7e:	60fb      	str	r3, [r7, #12]
 8003e80:	683b      	ldr	r3, [r7, #0]
 8003e82:	685b      	ldr	r3, [r3, #4]
 8003e84:	68fa      	ldr	r2, [r7, #12]
 8003e86:	4313      	orrs	r3, r2
 8003e88:	60fb      	str	r3, [r7, #12]
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	4a1c      	ldr	r2, [pc, #112]	; (8003f00 <TIM_Base_SetConfig+0xb8>)
 8003e8e:	4293      	cmp	r3, r2
 8003e90:	d00b      	beq.n	8003eaa <TIM_Base_SetConfig+0x62>
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003e98:	d007      	beq.n	8003eaa <TIM_Base_SetConfig+0x62>
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	4a19      	ldr	r2, [pc, #100]	; (8003f04 <TIM_Base_SetConfig+0xbc>)
 8003e9e:	4293      	cmp	r3, r2
 8003ea0:	d003      	beq.n	8003eaa <TIM_Base_SetConfig+0x62>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	4a18      	ldr	r2, [pc, #96]	; (8003f08 <TIM_Base_SetConfig+0xc0>)
 8003ea6:	4293      	cmp	r3, r2
 8003ea8:	d108      	bne.n	8003ebc <TIM_Base_SetConfig+0x74>
 8003eaa:	68fb      	ldr	r3, [r7, #12]
 8003eac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003eb0:	60fb      	str	r3, [r7, #12]
 8003eb2:	683b      	ldr	r3, [r7, #0]
 8003eb4:	68db      	ldr	r3, [r3, #12]
 8003eb6:	68fa      	ldr	r2, [r7, #12]
 8003eb8:	4313      	orrs	r3, r2
 8003eba:	60fb      	str	r3, [r7, #12]
 8003ebc:	68fb      	ldr	r3, [r7, #12]
 8003ebe:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003ec2:	683b      	ldr	r3, [r7, #0]
 8003ec4:	695b      	ldr	r3, [r3, #20]
 8003ec6:	4313      	orrs	r3, r2
 8003ec8:	60fb      	str	r3, [r7, #12]
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	68fa      	ldr	r2, [r7, #12]
 8003ece:	601a      	str	r2, [r3, #0]
 8003ed0:	683b      	ldr	r3, [r7, #0]
 8003ed2:	689a      	ldr	r2, [r3, #8]
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	62da      	str	r2, [r3, #44]	; 0x2c
 8003ed8:	683b      	ldr	r3, [r7, #0]
 8003eda:	681a      	ldr	r2, [r3, #0]
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	629a      	str	r2, [r3, #40]	; 0x28
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	4a07      	ldr	r2, [pc, #28]	; (8003f00 <TIM_Base_SetConfig+0xb8>)
 8003ee4:	4293      	cmp	r3, r2
 8003ee6:	d103      	bne.n	8003ef0 <TIM_Base_SetConfig+0xa8>
 8003ee8:	683b      	ldr	r3, [r7, #0]
 8003eea:	691a      	ldr	r2, [r3, #16]
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	631a      	str	r2, [r3, #48]	; 0x30
 8003ef0:	687b      	ldr	r3, [r7, #4]
 8003ef2:	2201      	movs	r2, #1
 8003ef4:	615a      	str	r2, [r3, #20]
 8003ef6:	bf00      	nop
 8003ef8:	3714      	adds	r7, #20
 8003efa:	46bd      	mov	sp, r7
 8003efc:	bc80      	pop	{r7}
 8003efe:	4770      	bx	lr
 8003f00:	40012c00 	.word	0x40012c00
 8003f04:	40000400 	.word	0x40000400
 8003f08:	40000800 	.word	0x40000800

08003f0c <TIM_OC1_SetConfig>:
 8003f0c:	b480      	push	{r7}
 8003f0e:	b087      	sub	sp, #28
 8003f10:	af00      	add	r7, sp, #0
 8003f12:	6078      	str	r0, [r7, #4]
 8003f14:	6039      	str	r1, [r7, #0]
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	6a1b      	ldr	r3, [r3, #32]
 8003f1a:	f023 0201 	bic.w	r2, r3, #1
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	621a      	str	r2, [r3, #32]
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	6a1b      	ldr	r3, [r3, #32]
 8003f26:	617b      	str	r3, [r7, #20]
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	685b      	ldr	r3, [r3, #4]
 8003f2c:	613b      	str	r3, [r7, #16]
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	699b      	ldr	r3, [r3, #24]
 8003f32:	60fb      	str	r3, [r7, #12]
 8003f34:	68fb      	ldr	r3, [r7, #12]
 8003f36:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003f3a:	60fb      	str	r3, [r7, #12]
 8003f3c:	68fb      	ldr	r3, [r7, #12]
 8003f3e:	f023 0303 	bic.w	r3, r3, #3
 8003f42:	60fb      	str	r3, [r7, #12]
 8003f44:	683b      	ldr	r3, [r7, #0]
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	68fa      	ldr	r2, [r7, #12]
 8003f4a:	4313      	orrs	r3, r2
 8003f4c:	60fb      	str	r3, [r7, #12]
 8003f4e:	697b      	ldr	r3, [r7, #20]
 8003f50:	f023 0302 	bic.w	r3, r3, #2
 8003f54:	617b      	str	r3, [r7, #20]
 8003f56:	683b      	ldr	r3, [r7, #0]
 8003f58:	689b      	ldr	r3, [r3, #8]
 8003f5a:	697a      	ldr	r2, [r7, #20]
 8003f5c:	4313      	orrs	r3, r2
 8003f5e:	617b      	str	r3, [r7, #20]
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	4a1c      	ldr	r2, [pc, #112]	; (8003fd4 <TIM_OC1_SetConfig+0xc8>)
 8003f64:	4293      	cmp	r3, r2
 8003f66:	d10c      	bne.n	8003f82 <TIM_OC1_SetConfig+0x76>
 8003f68:	697b      	ldr	r3, [r7, #20]
 8003f6a:	f023 0308 	bic.w	r3, r3, #8
 8003f6e:	617b      	str	r3, [r7, #20]
 8003f70:	683b      	ldr	r3, [r7, #0]
 8003f72:	68db      	ldr	r3, [r3, #12]
 8003f74:	697a      	ldr	r2, [r7, #20]
 8003f76:	4313      	orrs	r3, r2
 8003f78:	617b      	str	r3, [r7, #20]
 8003f7a:	697b      	ldr	r3, [r7, #20]
 8003f7c:	f023 0304 	bic.w	r3, r3, #4
 8003f80:	617b      	str	r3, [r7, #20]
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	4a13      	ldr	r2, [pc, #76]	; (8003fd4 <TIM_OC1_SetConfig+0xc8>)
 8003f86:	4293      	cmp	r3, r2
 8003f88:	d111      	bne.n	8003fae <TIM_OC1_SetConfig+0xa2>
 8003f8a:	693b      	ldr	r3, [r7, #16]
 8003f8c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003f90:	613b      	str	r3, [r7, #16]
 8003f92:	693b      	ldr	r3, [r7, #16]
 8003f94:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003f98:	613b      	str	r3, [r7, #16]
 8003f9a:	683b      	ldr	r3, [r7, #0]
 8003f9c:	695b      	ldr	r3, [r3, #20]
 8003f9e:	693a      	ldr	r2, [r7, #16]
 8003fa0:	4313      	orrs	r3, r2
 8003fa2:	613b      	str	r3, [r7, #16]
 8003fa4:	683b      	ldr	r3, [r7, #0]
 8003fa6:	699b      	ldr	r3, [r3, #24]
 8003fa8:	693a      	ldr	r2, [r7, #16]
 8003faa:	4313      	orrs	r3, r2
 8003fac:	613b      	str	r3, [r7, #16]
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	693a      	ldr	r2, [r7, #16]
 8003fb2:	605a      	str	r2, [r3, #4]
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	68fa      	ldr	r2, [r7, #12]
 8003fb8:	619a      	str	r2, [r3, #24]
 8003fba:	683b      	ldr	r3, [r7, #0]
 8003fbc:	685a      	ldr	r2, [r3, #4]
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	635a      	str	r2, [r3, #52]	; 0x34
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	697a      	ldr	r2, [r7, #20]
 8003fc6:	621a      	str	r2, [r3, #32]
 8003fc8:	bf00      	nop
 8003fca:	371c      	adds	r7, #28
 8003fcc:	46bd      	mov	sp, r7
 8003fce:	bc80      	pop	{r7}
 8003fd0:	4770      	bx	lr
 8003fd2:	bf00      	nop
 8003fd4:	40012c00 	.word	0x40012c00

08003fd8 <TIM_OC2_SetConfig>:
 8003fd8:	b480      	push	{r7}
 8003fda:	b087      	sub	sp, #28
 8003fdc:	af00      	add	r7, sp, #0
 8003fde:	6078      	str	r0, [r7, #4]
 8003fe0:	6039      	str	r1, [r7, #0]
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	6a1b      	ldr	r3, [r3, #32]
 8003fe6:	f023 0210 	bic.w	r2, r3, #16
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	621a      	str	r2, [r3, #32]
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	6a1b      	ldr	r3, [r3, #32]
 8003ff2:	617b      	str	r3, [r7, #20]
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	685b      	ldr	r3, [r3, #4]
 8003ff8:	613b      	str	r3, [r7, #16]
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	699b      	ldr	r3, [r3, #24]
 8003ffe:	60fb      	str	r3, [r7, #12]
 8004000:	68fb      	ldr	r3, [r7, #12]
 8004002:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004006:	60fb      	str	r3, [r7, #12]
 8004008:	68fb      	ldr	r3, [r7, #12]
 800400a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800400e:	60fb      	str	r3, [r7, #12]
 8004010:	683b      	ldr	r3, [r7, #0]
 8004012:	681b      	ldr	r3, [r3, #0]
 8004014:	021b      	lsls	r3, r3, #8
 8004016:	68fa      	ldr	r2, [r7, #12]
 8004018:	4313      	orrs	r3, r2
 800401a:	60fb      	str	r3, [r7, #12]
 800401c:	697b      	ldr	r3, [r7, #20]
 800401e:	f023 0320 	bic.w	r3, r3, #32
 8004022:	617b      	str	r3, [r7, #20]
 8004024:	683b      	ldr	r3, [r7, #0]
 8004026:	689b      	ldr	r3, [r3, #8]
 8004028:	011b      	lsls	r3, r3, #4
 800402a:	697a      	ldr	r2, [r7, #20]
 800402c:	4313      	orrs	r3, r2
 800402e:	617b      	str	r3, [r7, #20]
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	4a1d      	ldr	r2, [pc, #116]	; (80040a8 <TIM_OC2_SetConfig+0xd0>)
 8004034:	4293      	cmp	r3, r2
 8004036:	d10d      	bne.n	8004054 <TIM_OC2_SetConfig+0x7c>
 8004038:	697b      	ldr	r3, [r7, #20]
 800403a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800403e:	617b      	str	r3, [r7, #20]
 8004040:	683b      	ldr	r3, [r7, #0]
 8004042:	68db      	ldr	r3, [r3, #12]
 8004044:	011b      	lsls	r3, r3, #4
 8004046:	697a      	ldr	r2, [r7, #20]
 8004048:	4313      	orrs	r3, r2
 800404a:	617b      	str	r3, [r7, #20]
 800404c:	697b      	ldr	r3, [r7, #20]
 800404e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004052:	617b      	str	r3, [r7, #20]
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	4a14      	ldr	r2, [pc, #80]	; (80040a8 <TIM_OC2_SetConfig+0xd0>)
 8004058:	4293      	cmp	r3, r2
 800405a:	d113      	bne.n	8004084 <TIM_OC2_SetConfig+0xac>
 800405c:	693b      	ldr	r3, [r7, #16]
 800405e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004062:	613b      	str	r3, [r7, #16]
 8004064:	693b      	ldr	r3, [r7, #16]
 8004066:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800406a:	613b      	str	r3, [r7, #16]
 800406c:	683b      	ldr	r3, [r7, #0]
 800406e:	695b      	ldr	r3, [r3, #20]
 8004070:	009b      	lsls	r3, r3, #2
 8004072:	693a      	ldr	r2, [r7, #16]
 8004074:	4313      	orrs	r3, r2
 8004076:	613b      	str	r3, [r7, #16]
 8004078:	683b      	ldr	r3, [r7, #0]
 800407a:	699b      	ldr	r3, [r3, #24]
 800407c:	009b      	lsls	r3, r3, #2
 800407e:	693a      	ldr	r2, [r7, #16]
 8004080:	4313      	orrs	r3, r2
 8004082:	613b      	str	r3, [r7, #16]
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	693a      	ldr	r2, [r7, #16]
 8004088:	605a      	str	r2, [r3, #4]
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	68fa      	ldr	r2, [r7, #12]
 800408e:	619a      	str	r2, [r3, #24]
 8004090:	683b      	ldr	r3, [r7, #0]
 8004092:	685a      	ldr	r2, [r3, #4]
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	639a      	str	r2, [r3, #56]	; 0x38
 8004098:	687b      	ldr	r3, [r7, #4]
 800409a:	697a      	ldr	r2, [r7, #20]
 800409c:	621a      	str	r2, [r3, #32]
 800409e:	bf00      	nop
 80040a0:	371c      	adds	r7, #28
 80040a2:	46bd      	mov	sp, r7
 80040a4:	bc80      	pop	{r7}
 80040a6:	4770      	bx	lr
 80040a8:	40012c00 	.word	0x40012c00

080040ac <TIM_OC3_SetConfig>:
 80040ac:	b480      	push	{r7}
 80040ae:	b087      	sub	sp, #28
 80040b0:	af00      	add	r7, sp, #0
 80040b2:	6078      	str	r0, [r7, #4]
 80040b4:	6039      	str	r1, [r7, #0]
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	6a1b      	ldr	r3, [r3, #32]
 80040ba:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80040be:	687b      	ldr	r3, [r7, #4]
 80040c0:	621a      	str	r2, [r3, #32]
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	6a1b      	ldr	r3, [r3, #32]
 80040c6:	617b      	str	r3, [r7, #20]
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	685b      	ldr	r3, [r3, #4]
 80040cc:	613b      	str	r3, [r7, #16]
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	69db      	ldr	r3, [r3, #28]
 80040d2:	60fb      	str	r3, [r7, #12]
 80040d4:	68fb      	ldr	r3, [r7, #12]
 80040d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80040da:	60fb      	str	r3, [r7, #12]
 80040dc:	68fb      	ldr	r3, [r7, #12]
 80040de:	f023 0303 	bic.w	r3, r3, #3
 80040e2:	60fb      	str	r3, [r7, #12]
 80040e4:	683b      	ldr	r3, [r7, #0]
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	68fa      	ldr	r2, [r7, #12]
 80040ea:	4313      	orrs	r3, r2
 80040ec:	60fb      	str	r3, [r7, #12]
 80040ee:	697b      	ldr	r3, [r7, #20]
 80040f0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80040f4:	617b      	str	r3, [r7, #20]
 80040f6:	683b      	ldr	r3, [r7, #0]
 80040f8:	689b      	ldr	r3, [r3, #8]
 80040fa:	021b      	lsls	r3, r3, #8
 80040fc:	697a      	ldr	r2, [r7, #20]
 80040fe:	4313      	orrs	r3, r2
 8004100:	617b      	str	r3, [r7, #20]
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	4a1d      	ldr	r2, [pc, #116]	; (800417c <TIM_OC3_SetConfig+0xd0>)
 8004106:	4293      	cmp	r3, r2
 8004108:	d10d      	bne.n	8004126 <TIM_OC3_SetConfig+0x7a>
 800410a:	697b      	ldr	r3, [r7, #20]
 800410c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004110:	617b      	str	r3, [r7, #20]
 8004112:	683b      	ldr	r3, [r7, #0]
 8004114:	68db      	ldr	r3, [r3, #12]
 8004116:	021b      	lsls	r3, r3, #8
 8004118:	697a      	ldr	r2, [r7, #20]
 800411a:	4313      	orrs	r3, r2
 800411c:	617b      	str	r3, [r7, #20]
 800411e:	697b      	ldr	r3, [r7, #20]
 8004120:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8004124:	617b      	str	r3, [r7, #20]
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	4a14      	ldr	r2, [pc, #80]	; (800417c <TIM_OC3_SetConfig+0xd0>)
 800412a:	4293      	cmp	r3, r2
 800412c:	d113      	bne.n	8004156 <TIM_OC3_SetConfig+0xaa>
 800412e:	693b      	ldr	r3, [r7, #16]
 8004130:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004134:	613b      	str	r3, [r7, #16]
 8004136:	693b      	ldr	r3, [r7, #16]
 8004138:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800413c:	613b      	str	r3, [r7, #16]
 800413e:	683b      	ldr	r3, [r7, #0]
 8004140:	695b      	ldr	r3, [r3, #20]
 8004142:	011b      	lsls	r3, r3, #4
 8004144:	693a      	ldr	r2, [r7, #16]
 8004146:	4313      	orrs	r3, r2
 8004148:	613b      	str	r3, [r7, #16]
 800414a:	683b      	ldr	r3, [r7, #0]
 800414c:	699b      	ldr	r3, [r3, #24]
 800414e:	011b      	lsls	r3, r3, #4
 8004150:	693a      	ldr	r2, [r7, #16]
 8004152:	4313      	orrs	r3, r2
 8004154:	613b      	str	r3, [r7, #16]
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	693a      	ldr	r2, [r7, #16]
 800415a:	605a      	str	r2, [r3, #4]
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	68fa      	ldr	r2, [r7, #12]
 8004160:	61da      	str	r2, [r3, #28]
 8004162:	683b      	ldr	r3, [r7, #0]
 8004164:	685a      	ldr	r2, [r3, #4]
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	63da      	str	r2, [r3, #60]	; 0x3c
 800416a:	687b      	ldr	r3, [r7, #4]
 800416c:	697a      	ldr	r2, [r7, #20]
 800416e:	621a      	str	r2, [r3, #32]
 8004170:	bf00      	nop
 8004172:	371c      	adds	r7, #28
 8004174:	46bd      	mov	sp, r7
 8004176:	bc80      	pop	{r7}
 8004178:	4770      	bx	lr
 800417a:	bf00      	nop
 800417c:	40012c00 	.word	0x40012c00

08004180 <TIM_OC4_SetConfig>:
 8004180:	b480      	push	{r7}
 8004182:	b087      	sub	sp, #28
 8004184:	af00      	add	r7, sp, #0
 8004186:	6078      	str	r0, [r7, #4]
 8004188:	6039      	str	r1, [r7, #0]
 800418a:	687b      	ldr	r3, [r7, #4]
 800418c:	6a1b      	ldr	r3, [r3, #32]
 800418e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	621a      	str	r2, [r3, #32]
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	6a1b      	ldr	r3, [r3, #32]
 800419a:	613b      	str	r3, [r7, #16]
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	685b      	ldr	r3, [r3, #4]
 80041a0:	617b      	str	r3, [r7, #20]
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	69db      	ldr	r3, [r3, #28]
 80041a6:	60fb      	str	r3, [r7, #12]
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80041ae:	60fb      	str	r3, [r7, #12]
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80041b6:	60fb      	str	r3, [r7, #12]
 80041b8:	683b      	ldr	r3, [r7, #0]
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	021b      	lsls	r3, r3, #8
 80041be:	68fa      	ldr	r2, [r7, #12]
 80041c0:	4313      	orrs	r3, r2
 80041c2:	60fb      	str	r3, [r7, #12]
 80041c4:	693b      	ldr	r3, [r7, #16]
 80041c6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80041ca:	613b      	str	r3, [r7, #16]
 80041cc:	683b      	ldr	r3, [r7, #0]
 80041ce:	689b      	ldr	r3, [r3, #8]
 80041d0:	031b      	lsls	r3, r3, #12
 80041d2:	693a      	ldr	r2, [r7, #16]
 80041d4:	4313      	orrs	r3, r2
 80041d6:	613b      	str	r3, [r7, #16]
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	4a0f      	ldr	r2, [pc, #60]	; (8004218 <TIM_OC4_SetConfig+0x98>)
 80041dc:	4293      	cmp	r3, r2
 80041de:	d109      	bne.n	80041f4 <TIM_OC4_SetConfig+0x74>
 80041e0:	697b      	ldr	r3, [r7, #20]
 80041e2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80041e6:	617b      	str	r3, [r7, #20]
 80041e8:	683b      	ldr	r3, [r7, #0]
 80041ea:	695b      	ldr	r3, [r3, #20]
 80041ec:	019b      	lsls	r3, r3, #6
 80041ee:	697a      	ldr	r2, [r7, #20]
 80041f0:	4313      	orrs	r3, r2
 80041f2:	617b      	str	r3, [r7, #20]
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	697a      	ldr	r2, [r7, #20]
 80041f8:	605a      	str	r2, [r3, #4]
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	68fa      	ldr	r2, [r7, #12]
 80041fe:	61da      	str	r2, [r3, #28]
 8004200:	683b      	ldr	r3, [r7, #0]
 8004202:	685a      	ldr	r2, [r3, #4]
 8004204:	687b      	ldr	r3, [r7, #4]
 8004206:	641a      	str	r2, [r3, #64]	; 0x40
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	693a      	ldr	r2, [r7, #16]
 800420c:	621a      	str	r2, [r3, #32]
 800420e:	bf00      	nop
 8004210:	371c      	adds	r7, #28
 8004212:	46bd      	mov	sp, r7
 8004214:	bc80      	pop	{r7}
 8004216:	4770      	bx	lr
 8004218:	40012c00 	.word	0x40012c00

0800421c <TIM_TI1_ConfigInputStage>:
 800421c:	b480      	push	{r7}
 800421e:	b087      	sub	sp, #28
 8004220:	af00      	add	r7, sp, #0
 8004222:	60f8      	str	r0, [r7, #12]
 8004224:	60b9      	str	r1, [r7, #8]
 8004226:	607a      	str	r2, [r7, #4]
 8004228:	68fb      	ldr	r3, [r7, #12]
 800422a:	6a1b      	ldr	r3, [r3, #32]
 800422c:	617b      	str	r3, [r7, #20]
 800422e:	68fb      	ldr	r3, [r7, #12]
 8004230:	6a1b      	ldr	r3, [r3, #32]
 8004232:	f023 0201 	bic.w	r2, r3, #1
 8004236:	68fb      	ldr	r3, [r7, #12]
 8004238:	621a      	str	r2, [r3, #32]
 800423a:	68fb      	ldr	r3, [r7, #12]
 800423c:	699b      	ldr	r3, [r3, #24]
 800423e:	613b      	str	r3, [r7, #16]
 8004240:	693b      	ldr	r3, [r7, #16]
 8004242:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004246:	613b      	str	r3, [r7, #16]
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	011b      	lsls	r3, r3, #4
 800424c:	693a      	ldr	r2, [r7, #16]
 800424e:	4313      	orrs	r3, r2
 8004250:	613b      	str	r3, [r7, #16]
 8004252:	697b      	ldr	r3, [r7, #20]
 8004254:	f023 030a 	bic.w	r3, r3, #10
 8004258:	617b      	str	r3, [r7, #20]
 800425a:	697a      	ldr	r2, [r7, #20]
 800425c:	68bb      	ldr	r3, [r7, #8]
 800425e:	4313      	orrs	r3, r2
 8004260:	617b      	str	r3, [r7, #20]
 8004262:	68fb      	ldr	r3, [r7, #12]
 8004264:	693a      	ldr	r2, [r7, #16]
 8004266:	619a      	str	r2, [r3, #24]
 8004268:	68fb      	ldr	r3, [r7, #12]
 800426a:	697a      	ldr	r2, [r7, #20]
 800426c:	621a      	str	r2, [r3, #32]
 800426e:	bf00      	nop
 8004270:	371c      	adds	r7, #28
 8004272:	46bd      	mov	sp, r7
 8004274:	bc80      	pop	{r7}
 8004276:	4770      	bx	lr

08004278 <TIM_TI2_ConfigInputStage>:
 8004278:	b480      	push	{r7}
 800427a:	b087      	sub	sp, #28
 800427c:	af00      	add	r7, sp, #0
 800427e:	60f8      	str	r0, [r7, #12]
 8004280:	60b9      	str	r1, [r7, #8]
 8004282:	607a      	str	r2, [r7, #4]
 8004284:	68fb      	ldr	r3, [r7, #12]
 8004286:	6a1b      	ldr	r3, [r3, #32]
 8004288:	f023 0210 	bic.w	r2, r3, #16
 800428c:	68fb      	ldr	r3, [r7, #12]
 800428e:	621a      	str	r2, [r3, #32]
 8004290:	68fb      	ldr	r3, [r7, #12]
 8004292:	699b      	ldr	r3, [r3, #24]
 8004294:	617b      	str	r3, [r7, #20]
 8004296:	68fb      	ldr	r3, [r7, #12]
 8004298:	6a1b      	ldr	r3, [r3, #32]
 800429a:	613b      	str	r3, [r7, #16]
 800429c:	697b      	ldr	r3, [r7, #20]
 800429e:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80042a2:	617b      	str	r3, [r7, #20]
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	031b      	lsls	r3, r3, #12
 80042a8:	697a      	ldr	r2, [r7, #20]
 80042aa:	4313      	orrs	r3, r2
 80042ac:	617b      	str	r3, [r7, #20]
 80042ae:	693b      	ldr	r3, [r7, #16]
 80042b0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80042b4:	613b      	str	r3, [r7, #16]
 80042b6:	68bb      	ldr	r3, [r7, #8]
 80042b8:	011b      	lsls	r3, r3, #4
 80042ba:	693a      	ldr	r2, [r7, #16]
 80042bc:	4313      	orrs	r3, r2
 80042be:	613b      	str	r3, [r7, #16]
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	697a      	ldr	r2, [r7, #20]
 80042c4:	619a      	str	r2, [r3, #24]
 80042c6:	68fb      	ldr	r3, [r7, #12]
 80042c8:	693a      	ldr	r2, [r7, #16]
 80042ca:	621a      	str	r2, [r3, #32]
 80042cc:	bf00      	nop
 80042ce:	371c      	adds	r7, #28
 80042d0:	46bd      	mov	sp, r7
 80042d2:	bc80      	pop	{r7}
 80042d4:	4770      	bx	lr

080042d6 <TIM_ITRx_SetConfig>:
 80042d6:	b480      	push	{r7}
 80042d8:	b085      	sub	sp, #20
 80042da:	af00      	add	r7, sp, #0
 80042dc:	6078      	str	r0, [r7, #4]
 80042de:	6039      	str	r1, [r7, #0]
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	689b      	ldr	r3, [r3, #8]
 80042e4:	60fb      	str	r3, [r7, #12]
 80042e6:	68fb      	ldr	r3, [r7, #12]
 80042e8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80042ec:	60fb      	str	r3, [r7, #12]
 80042ee:	683a      	ldr	r2, [r7, #0]
 80042f0:	68fb      	ldr	r3, [r7, #12]
 80042f2:	4313      	orrs	r3, r2
 80042f4:	f043 0307 	orr.w	r3, r3, #7
 80042f8:	60fb      	str	r3, [r7, #12]
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	68fa      	ldr	r2, [r7, #12]
 80042fe:	609a      	str	r2, [r3, #8]
 8004300:	bf00      	nop
 8004302:	3714      	adds	r7, #20
 8004304:	46bd      	mov	sp, r7
 8004306:	bc80      	pop	{r7}
 8004308:	4770      	bx	lr

0800430a <TIM_ETR_SetConfig>:
 800430a:	b480      	push	{r7}
 800430c:	b087      	sub	sp, #28
 800430e:	af00      	add	r7, sp, #0
 8004310:	60f8      	str	r0, [r7, #12]
 8004312:	60b9      	str	r1, [r7, #8]
 8004314:	607a      	str	r2, [r7, #4]
 8004316:	603b      	str	r3, [r7, #0]
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	689b      	ldr	r3, [r3, #8]
 800431c:	617b      	str	r3, [r7, #20]
 800431e:	697b      	ldr	r3, [r7, #20]
 8004320:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004324:	617b      	str	r3, [r7, #20]
 8004326:	683b      	ldr	r3, [r7, #0]
 8004328:	021a      	lsls	r2, r3, #8
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	431a      	orrs	r2, r3
 800432e:	68bb      	ldr	r3, [r7, #8]
 8004330:	4313      	orrs	r3, r2
 8004332:	697a      	ldr	r2, [r7, #20]
 8004334:	4313      	orrs	r3, r2
 8004336:	617b      	str	r3, [r7, #20]
 8004338:	68fb      	ldr	r3, [r7, #12]
 800433a:	697a      	ldr	r2, [r7, #20]
 800433c:	609a      	str	r2, [r3, #8]
 800433e:	bf00      	nop
 8004340:	371c      	adds	r7, #28
 8004342:	46bd      	mov	sp, r7
 8004344:	bc80      	pop	{r7}
 8004346:	4770      	bx	lr

08004348 <TIM_CCxChannelCmd>:
 8004348:	b480      	push	{r7}
 800434a:	b087      	sub	sp, #28
 800434c:	af00      	add	r7, sp, #0
 800434e:	60f8      	str	r0, [r7, #12]
 8004350:	60b9      	str	r1, [r7, #8]
 8004352:	607a      	str	r2, [r7, #4]
 8004354:	68bb      	ldr	r3, [r7, #8]
 8004356:	f003 031f 	and.w	r3, r3, #31
 800435a:	2201      	movs	r2, #1
 800435c:	fa02 f303 	lsl.w	r3, r2, r3
 8004360:	617b      	str	r3, [r7, #20]
 8004362:	68fb      	ldr	r3, [r7, #12]
 8004364:	6a1a      	ldr	r2, [r3, #32]
 8004366:	697b      	ldr	r3, [r7, #20]
 8004368:	43db      	mvns	r3, r3
 800436a:	401a      	ands	r2, r3
 800436c:	68fb      	ldr	r3, [r7, #12]
 800436e:	621a      	str	r2, [r3, #32]
 8004370:	68fb      	ldr	r3, [r7, #12]
 8004372:	6a1a      	ldr	r2, [r3, #32]
 8004374:	68bb      	ldr	r3, [r7, #8]
 8004376:	f003 031f 	and.w	r3, r3, #31
 800437a:	6879      	ldr	r1, [r7, #4]
 800437c:	fa01 f303 	lsl.w	r3, r1, r3
 8004380:	431a      	orrs	r2, r3
 8004382:	68fb      	ldr	r3, [r7, #12]
 8004384:	621a      	str	r2, [r3, #32]
 8004386:	bf00      	nop
 8004388:	371c      	adds	r7, #28
 800438a:	46bd      	mov	sp, r7
 800438c:	bc80      	pop	{r7}
 800438e:	4770      	bx	lr

08004390 <HAL_TIMEx_MasterConfigSynchronization>:
 8004390:	b480      	push	{r7}
 8004392:	b085      	sub	sp, #20
 8004394:	af00      	add	r7, sp, #0
 8004396:	6078      	str	r0, [r7, #4]
 8004398:	6039      	str	r1, [r7, #0]
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80043a0:	2b01      	cmp	r3, #1
 80043a2:	d101      	bne.n	80043a8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80043a4:	2302      	movs	r3, #2
 80043a6:	e046      	b.n	8004436 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	2201      	movs	r2, #1
 80043ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	2202      	movs	r2, #2
 80043b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	685b      	ldr	r3, [r3, #4]
 80043be:	60fb      	str	r3, [r7, #12]
 80043c0:	687b      	ldr	r3, [r7, #4]
 80043c2:	681b      	ldr	r3, [r3, #0]
 80043c4:	689b      	ldr	r3, [r3, #8]
 80043c6:	60bb      	str	r3, [r7, #8]
 80043c8:	68fb      	ldr	r3, [r7, #12]
 80043ca:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80043ce:	60fb      	str	r3, [r7, #12]
 80043d0:	683b      	ldr	r3, [r7, #0]
 80043d2:	681b      	ldr	r3, [r3, #0]
 80043d4:	68fa      	ldr	r2, [r7, #12]
 80043d6:	4313      	orrs	r3, r2
 80043d8:	60fb      	str	r3, [r7, #12]
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	68fa      	ldr	r2, [r7, #12]
 80043e0:	605a      	str	r2, [r3, #4]
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	4a16      	ldr	r2, [pc, #88]	; (8004440 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 80043e8:	4293      	cmp	r3, r2
 80043ea:	d00e      	beq.n	800440a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80043f4:	d009      	beq.n	800440a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	681b      	ldr	r3, [r3, #0]
 80043fa:	4a12      	ldr	r2, [pc, #72]	; (8004444 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 80043fc:	4293      	cmp	r3, r2
 80043fe:	d004      	beq.n	800440a <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	681b      	ldr	r3, [r3, #0]
 8004404:	4a10      	ldr	r2, [pc, #64]	; (8004448 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8004406:	4293      	cmp	r3, r2
 8004408:	d10c      	bne.n	8004424 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 800440a:	68bb      	ldr	r3, [r7, #8]
 800440c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004410:	60bb      	str	r3, [r7, #8]
 8004412:	683b      	ldr	r3, [r7, #0]
 8004414:	685b      	ldr	r3, [r3, #4]
 8004416:	68ba      	ldr	r2, [r7, #8]
 8004418:	4313      	orrs	r3, r2
 800441a:	60bb      	str	r3, [r7, #8]
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	68ba      	ldr	r2, [r7, #8]
 8004422:	609a      	str	r2, [r3, #8]
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	2201      	movs	r2, #1
 8004428:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800442c:	687b      	ldr	r3, [r7, #4]
 800442e:	2200      	movs	r2, #0
 8004430:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004434:	2300      	movs	r3, #0
 8004436:	4618      	mov	r0, r3
 8004438:	3714      	adds	r7, #20
 800443a:	46bd      	mov	sp, r7
 800443c:	bc80      	pop	{r7}
 800443e:	4770      	bx	lr
 8004440:	40012c00 	.word	0x40012c00
 8004444:	40000400 	.word	0x40000400
 8004448:	40000800 	.word	0x40000800

0800444c <HAL_TIMEx_CommutCallback>:
 800444c:	b480      	push	{r7}
 800444e:	b083      	sub	sp, #12
 8004450:	af00      	add	r7, sp, #0
 8004452:	6078      	str	r0, [r7, #4]
 8004454:	bf00      	nop
 8004456:	370c      	adds	r7, #12
 8004458:	46bd      	mov	sp, r7
 800445a:	bc80      	pop	{r7}
 800445c:	4770      	bx	lr

0800445e <HAL_TIMEx_BreakCallback>:
 800445e:	b480      	push	{r7}
 8004460:	b083      	sub	sp, #12
 8004462:	af00      	add	r7, sp, #0
 8004464:	6078      	str	r0, [r7, #4]
 8004466:	bf00      	nop
 8004468:	370c      	adds	r7, #12
 800446a:	46bd      	mov	sp, r7
 800446c:	bc80      	pop	{r7}
 800446e:	4770      	bx	lr

08004470 <HAL_UART_Init>:
 8004470:	b580      	push	{r7, lr}
 8004472:	b082      	sub	sp, #8
 8004474:	af00      	add	r7, sp, #0
 8004476:	6078      	str	r0, [r7, #4]
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	2b00      	cmp	r3, #0
 800447c:	d101      	bne.n	8004482 <HAL_UART_Init+0x12>
 800447e:	2301      	movs	r3, #1
 8004480:	e03f      	b.n	8004502 <HAL_UART_Init+0x92>
 8004482:	687b      	ldr	r3, [r7, #4]
 8004484:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004488:	b2db      	uxtb	r3, r3
 800448a:	2b00      	cmp	r3, #0
 800448c:	d106      	bne.n	800449c <HAL_UART_Init+0x2c>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	2200      	movs	r2, #0
 8004492:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004496:	6878      	ldr	r0, [r7, #4]
 8004498:	f7fd fea8 	bl	80021ec <HAL_UART_MspInit>
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	2224      	movs	r2, #36	; 0x24
 80044a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	68da      	ldr	r2, [r3, #12]
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80044b2:	60da      	str	r2, [r3, #12]
 80044b4:	6878      	ldr	r0, [r7, #4]
 80044b6:	f000 f905 	bl	80046c4 <UART_SetConfig>
 80044ba:	687b      	ldr	r3, [r7, #4]
 80044bc:	681b      	ldr	r3, [r3, #0]
 80044be:	691a      	ldr	r2, [r3, #16]
 80044c0:	687b      	ldr	r3, [r7, #4]
 80044c2:	681b      	ldr	r3, [r3, #0]
 80044c4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80044c8:	611a      	str	r2, [r3, #16]
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	695a      	ldr	r2, [r3, #20]
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80044d8:	615a      	str	r2, [r3, #20]
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	68da      	ldr	r2, [r3, #12]
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	681b      	ldr	r3, [r3, #0]
 80044e4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80044e8:	60da      	str	r2, [r3, #12]
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	2200      	movs	r2, #0
 80044ee:	641a      	str	r2, [r3, #64]	; 0x40
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	2220      	movs	r2, #32
 80044f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	2220      	movs	r2, #32
 80044fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004500:	2300      	movs	r3, #0
 8004502:	4618      	mov	r0, r3
 8004504:	3708      	adds	r7, #8
 8004506:	46bd      	mov	sp, r7
 8004508:	bd80      	pop	{r7, pc}

0800450a <HAL_UART_Transmit>:
 800450a:	b580      	push	{r7, lr}
 800450c:	b08a      	sub	sp, #40	; 0x28
 800450e:	af02      	add	r7, sp, #8
 8004510:	60f8      	str	r0, [r7, #12]
 8004512:	60b9      	str	r1, [r7, #8]
 8004514:	603b      	str	r3, [r7, #0]
 8004516:	4613      	mov	r3, r2
 8004518:	80fb      	strh	r3, [r7, #6]
 800451a:	2300      	movs	r3, #0
 800451c:	617b      	str	r3, [r7, #20]
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004524:	b2db      	uxtb	r3, r3
 8004526:	2b20      	cmp	r3, #32
 8004528:	d17c      	bne.n	8004624 <HAL_UART_Transmit+0x11a>
 800452a:	68bb      	ldr	r3, [r7, #8]
 800452c:	2b00      	cmp	r3, #0
 800452e:	d002      	beq.n	8004536 <HAL_UART_Transmit+0x2c>
 8004530:	88fb      	ldrh	r3, [r7, #6]
 8004532:	2b00      	cmp	r3, #0
 8004534:	d101      	bne.n	800453a <HAL_UART_Transmit+0x30>
 8004536:	2301      	movs	r3, #1
 8004538:	e075      	b.n	8004626 <HAL_UART_Transmit+0x11c>
 800453a:	68fb      	ldr	r3, [r7, #12]
 800453c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004540:	2b01      	cmp	r3, #1
 8004542:	d101      	bne.n	8004548 <HAL_UART_Transmit+0x3e>
 8004544:	2302      	movs	r3, #2
 8004546:	e06e      	b.n	8004626 <HAL_UART_Transmit+0x11c>
 8004548:	68fb      	ldr	r3, [r7, #12]
 800454a:	2201      	movs	r2, #1
 800454c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004550:	68fb      	ldr	r3, [r7, #12]
 8004552:	2200      	movs	r2, #0
 8004554:	641a      	str	r2, [r3, #64]	; 0x40
 8004556:	68fb      	ldr	r3, [r7, #12]
 8004558:	2221      	movs	r2, #33	; 0x21
 800455a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800455e:	f7fe f8b7 	bl	80026d0 <HAL_GetTick>
 8004562:	6178      	str	r0, [r7, #20]
 8004564:	68fb      	ldr	r3, [r7, #12]
 8004566:	88fa      	ldrh	r2, [r7, #6]
 8004568:	849a      	strh	r2, [r3, #36]	; 0x24
 800456a:	68fb      	ldr	r3, [r7, #12]
 800456c:	88fa      	ldrh	r2, [r7, #6]
 800456e:	84da      	strh	r2, [r3, #38]	; 0x26
 8004570:	68fb      	ldr	r3, [r7, #12]
 8004572:	689b      	ldr	r3, [r3, #8]
 8004574:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004578:	d108      	bne.n	800458c <HAL_UART_Transmit+0x82>
 800457a:	68fb      	ldr	r3, [r7, #12]
 800457c:	691b      	ldr	r3, [r3, #16]
 800457e:	2b00      	cmp	r3, #0
 8004580:	d104      	bne.n	800458c <HAL_UART_Transmit+0x82>
 8004582:	2300      	movs	r3, #0
 8004584:	61fb      	str	r3, [r7, #28]
 8004586:	68bb      	ldr	r3, [r7, #8]
 8004588:	61bb      	str	r3, [r7, #24]
 800458a:	e003      	b.n	8004594 <HAL_UART_Transmit+0x8a>
 800458c:	68bb      	ldr	r3, [r7, #8]
 800458e:	61fb      	str	r3, [r7, #28]
 8004590:	2300      	movs	r3, #0
 8004592:	61bb      	str	r3, [r7, #24]
 8004594:	68fb      	ldr	r3, [r7, #12]
 8004596:	2200      	movs	r2, #0
 8004598:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800459c:	e02a      	b.n	80045f4 <HAL_UART_Transmit+0xea>
 800459e:	683b      	ldr	r3, [r7, #0]
 80045a0:	9300      	str	r3, [sp, #0]
 80045a2:	697b      	ldr	r3, [r7, #20]
 80045a4:	2200      	movs	r2, #0
 80045a6:	2180      	movs	r1, #128	; 0x80
 80045a8:	68f8      	ldr	r0, [r7, #12]
 80045aa:	f000 f840 	bl	800462e <UART_WaitOnFlagUntilTimeout>
 80045ae:	4603      	mov	r3, r0
 80045b0:	2b00      	cmp	r3, #0
 80045b2:	d001      	beq.n	80045b8 <HAL_UART_Transmit+0xae>
 80045b4:	2303      	movs	r3, #3
 80045b6:	e036      	b.n	8004626 <HAL_UART_Transmit+0x11c>
 80045b8:	69fb      	ldr	r3, [r7, #28]
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d10b      	bne.n	80045d6 <HAL_UART_Transmit+0xcc>
 80045be:	69bb      	ldr	r3, [r7, #24]
 80045c0:	881b      	ldrh	r3, [r3, #0]
 80045c2:	461a      	mov	r2, r3
 80045c4:	68fb      	ldr	r3, [r7, #12]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80045cc:	605a      	str	r2, [r3, #4]
 80045ce:	69bb      	ldr	r3, [r7, #24]
 80045d0:	3302      	adds	r3, #2
 80045d2:	61bb      	str	r3, [r7, #24]
 80045d4:	e007      	b.n	80045e6 <HAL_UART_Transmit+0xdc>
 80045d6:	69fb      	ldr	r3, [r7, #28]
 80045d8:	781a      	ldrb	r2, [r3, #0]
 80045da:	68fb      	ldr	r3, [r7, #12]
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	605a      	str	r2, [r3, #4]
 80045e0:	69fb      	ldr	r3, [r7, #28]
 80045e2:	3301      	adds	r3, #1
 80045e4:	61fb      	str	r3, [r7, #28]
 80045e6:	68fb      	ldr	r3, [r7, #12]
 80045e8:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80045ea:	b29b      	uxth	r3, r3
 80045ec:	3b01      	subs	r3, #1
 80045ee:	b29a      	uxth	r2, r3
 80045f0:	68fb      	ldr	r3, [r7, #12]
 80045f2:	84da      	strh	r2, [r3, #38]	; 0x26
 80045f4:	68fb      	ldr	r3, [r7, #12]
 80045f6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80045f8:	b29b      	uxth	r3, r3
 80045fa:	2b00      	cmp	r3, #0
 80045fc:	d1cf      	bne.n	800459e <HAL_UART_Transmit+0x94>
 80045fe:	683b      	ldr	r3, [r7, #0]
 8004600:	9300      	str	r3, [sp, #0]
 8004602:	697b      	ldr	r3, [r7, #20]
 8004604:	2200      	movs	r2, #0
 8004606:	2140      	movs	r1, #64	; 0x40
 8004608:	68f8      	ldr	r0, [r7, #12]
 800460a:	f000 f810 	bl	800462e <UART_WaitOnFlagUntilTimeout>
 800460e:	4603      	mov	r3, r0
 8004610:	2b00      	cmp	r3, #0
 8004612:	d001      	beq.n	8004618 <HAL_UART_Transmit+0x10e>
 8004614:	2303      	movs	r3, #3
 8004616:	e006      	b.n	8004626 <HAL_UART_Transmit+0x11c>
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	2220      	movs	r2, #32
 800461c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004620:	2300      	movs	r3, #0
 8004622:	e000      	b.n	8004626 <HAL_UART_Transmit+0x11c>
 8004624:	2302      	movs	r3, #2
 8004626:	4618      	mov	r0, r3
 8004628:	3720      	adds	r7, #32
 800462a:	46bd      	mov	sp, r7
 800462c:	bd80      	pop	{r7, pc}

0800462e <UART_WaitOnFlagUntilTimeout>:
 800462e:	b580      	push	{r7, lr}
 8004630:	b084      	sub	sp, #16
 8004632:	af00      	add	r7, sp, #0
 8004634:	60f8      	str	r0, [r7, #12]
 8004636:	60b9      	str	r1, [r7, #8]
 8004638:	603b      	str	r3, [r7, #0]
 800463a:	4613      	mov	r3, r2
 800463c:	71fb      	strb	r3, [r7, #7]
 800463e:	e02c      	b.n	800469a <UART_WaitOnFlagUntilTimeout+0x6c>
 8004640:	69bb      	ldr	r3, [r7, #24]
 8004642:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004646:	d028      	beq.n	800469a <UART_WaitOnFlagUntilTimeout+0x6c>
 8004648:	69bb      	ldr	r3, [r7, #24]
 800464a:	2b00      	cmp	r3, #0
 800464c:	d007      	beq.n	800465e <UART_WaitOnFlagUntilTimeout+0x30>
 800464e:	f7fe f83f 	bl	80026d0 <HAL_GetTick>
 8004652:	4602      	mov	r2, r0
 8004654:	683b      	ldr	r3, [r7, #0]
 8004656:	1ad3      	subs	r3, r2, r3
 8004658:	69ba      	ldr	r2, [r7, #24]
 800465a:	429a      	cmp	r2, r3
 800465c:	d21d      	bcs.n	800469a <UART_WaitOnFlagUntilTimeout+0x6c>
 800465e:	68fb      	ldr	r3, [r7, #12]
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	68da      	ldr	r2, [r3, #12]
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800466c:	60da      	str	r2, [r3, #12]
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	695a      	ldr	r2, [r3, #20]
 8004674:	68fb      	ldr	r3, [r7, #12]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	f022 0201 	bic.w	r2, r2, #1
 800467c:	615a      	str	r2, [r3, #20]
 800467e:	68fb      	ldr	r3, [r7, #12]
 8004680:	2220      	movs	r2, #32
 8004682:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004686:	68fb      	ldr	r3, [r7, #12]
 8004688:	2220      	movs	r2, #32
 800468a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800468e:	68fb      	ldr	r3, [r7, #12]
 8004690:	2200      	movs	r2, #0
 8004692:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004696:	2303      	movs	r3, #3
 8004698:	e00f      	b.n	80046ba <UART_WaitOnFlagUntilTimeout+0x8c>
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	681a      	ldr	r2, [r3, #0]
 80046a0:	68bb      	ldr	r3, [r7, #8]
 80046a2:	4013      	ands	r3, r2
 80046a4:	68ba      	ldr	r2, [r7, #8]
 80046a6:	429a      	cmp	r2, r3
 80046a8:	bf0c      	ite	eq
 80046aa:	2301      	moveq	r3, #1
 80046ac:	2300      	movne	r3, #0
 80046ae:	b2db      	uxtb	r3, r3
 80046b0:	461a      	mov	r2, r3
 80046b2:	79fb      	ldrb	r3, [r7, #7]
 80046b4:	429a      	cmp	r2, r3
 80046b6:	d0c3      	beq.n	8004640 <UART_WaitOnFlagUntilTimeout+0x12>
 80046b8:	2300      	movs	r3, #0
 80046ba:	4618      	mov	r0, r3
 80046bc:	3710      	adds	r7, #16
 80046be:	46bd      	mov	sp, r7
 80046c0:	bd80      	pop	{r7, pc}
	...

080046c4 <UART_SetConfig>:
 80046c4:	b580      	push	{r7, lr}
 80046c6:	b084      	sub	sp, #16
 80046c8:	af00      	add	r7, sp, #0
 80046ca:	6078      	str	r0, [r7, #4]
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	681b      	ldr	r3, [r3, #0]
 80046d0:	691b      	ldr	r3, [r3, #16]
 80046d2:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	68da      	ldr	r2, [r3, #12]
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	681b      	ldr	r3, [r3, #0]
 80046de:	430a      	orrs	r2, r1
 80046e0:	611a      	str	r2, [r3, #16]
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	689a      	ldr	r2, [r3, #8]
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	691b      	ldr	r3, [r3, #16]
 80046ea:	431a      	orrs	r2, r3
 80046ec:	687b      	ldr	r3, [r7, #4]
 80046ee:	695b      	ldr	r3, [r3, #20]
 80046f0:	4313      	orrs	r3, r2
 80046f2:	60bb      	str	r3, [r7, #8]
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	681b      	ldr	r3, [r3, #0]
 80046f8:	68db      	ldr	r3, [r3, #12]
 80046fa:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80046fe:	f023 030c 	bic.w	r3, r3, #12
 8004702:	687a      	ldr	r2, [r7, #4]
 8004704:	6812      	ldr	r2, [r2, #0]
 8004706:	68b9      	ldr	r1, [r7, #8]
 8004708:	430b      	orrs	r3, r1
 800470a:	60d3      	str	r3, [r2, #12]
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	695b      	ldr	r3, [r3, #20]
 8004712:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	699a      	ldr	r2, [r3, #24]
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	430a      	orrs	r2, r1
 8004720:	615a      	str	r2, [r3, #20]
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	4a2c      	ldr	r2, [pc, #176]	; (80047d8 <UART_SetConfig+0x114>)
 8004728:	4293      	cmp	r3, r2
 800472a:	d103      	bne.n	8004734 <UART_SetConfig+0x70>
 800472c:	f7fe ff10 	bl	8003550 <HAL_RCC_GetPCLK2Freq>
 8004730:	60f8      	str	r0, [r7, #12]
 8004732:	e002      	b.n	800473a <UART_SetConfig+0x76>
 8004734:	f7fe fef8 	bl	8003528 <HAL_RCC_GetPCLK1Freq>
 8004738:	60f8      	str	r0, [r7, #12]
 800473a:	68fa      	ldr	r2, [r7, #12]
 800473c:	4613      	mov	r3, r2
 800473e:	009b      	lsls	r3, r3, #2
 8004740:	4413      	add	r3, r2
 8004742:	009a      	lsls	r2, r3, #2
 8004744:	441a      	add	r2, r3
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	685b      	ldr	r3, [r3, #4]
 800474a:	009b      	lsls	r3, r3, #2
 800474c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004750:	4a22      	ldr	r2, [pc, #136]	; (80047dc <UART_SetConfig+0x118>)
 8004752:	fba2 2303 	umull	r2, r3, r2, r3
 8004756:	095b      	lsrs	r3, r3, #5
 8004758:	0119      	lsls	r1, r3, #4
 800475a:	68fa      	ldr	r2, [r7, #12]
 800475c:	4613      	mov	r3, r2
 800475e:	009b      	lsls	r3, r3, #2
 8004760:	4413      	add	r3, r2
 8004762:	009a      	lsls	r2, r3, #2
 8004764:	441a      	add	r2, r3
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	685b      	ldr	r3, [r3, #4]
 800476a:	009b      	lsls	r3, r3, #2
 800476c:	fbb2 f2f3 	udiv	r2, r2, r3
 8004770:	4b1a      	ldr	r3, [pc, #104]	; (80047dc <UART_SetConfig+0x118>)
 8004772:	fba3 0302 	umull	r0, r3, r3, r2
 8004776:	095b      	lsrs	r3, r3, #5
 8004778:	2064      	movs	r0, #100	; 0x64
 800477a:	fb00 f303 	mul.w	r3, r0, r3
 800477e:	1ad3      	subs	r3, r2, r3
 8004780:	011b      	lsls	r3, r3, #4
 8004782:	3332      	adds	r3, #50	; 0x32
 8004784:	4a15      	ldr	r2, [pc, #84]	; (80047dc <UART_SetConfig+0x118>)
 8004786:	fba2 2303 	umull	r2, r3, r2, r3
 800478a:	095b      	lsrs	r3, r3, #5
 800478c:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004790:	4419      	add	r1, r3
 8004792:	68fa      	ldr	r2, [r7, #12]
 8004794:	4613      	mov	r3, r2
 8004796:	009b      	lsls	r3, r3, #2
 8004798:	4413      	add	r3, r2
 800479a:	009a      	lsls	r2, r3, #2
 800479c:	441a      	add	r2, r3
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	685b      	ldr	r3, [r3, #4]
 80047a2:	009b      	lsls	r3, r3, #2
 80047a4:	fbb2 f2f3 	udiv	r2, r2, r3
 80047a8:	4b0c      	ldr	r3, [pc, #48]	; (80047dc <UART_SetConfig+0x118>)
 80047aa:	fba3 0302 	umull	r0, r3, r3, r2
 80047ae:	095b      	lsrs	r3, r3, #5
 80047b0:	2064      	movs	r0, #100	; 0x64
 80047b2:	fb00 f303 	mul.w	r3, r0, r3
 80047b6:	1ad3      	subs	r3, r2, r3
 80047b8:	011b      	lsls	r3, r3, #4
 80047ba:	3332      	adds	r3, #50	; 0x32
 80047bc:	4a07      	ldr	r2, [pc, #28]	; (80047dc <UART_SetConfig+0x118>)
 80047be:	fba2 2303 	umull	r2, r3, r2, r3
 80047c2:	095b      	lsrs	r3, r3, #5
 80047c4:	f003 020f 	and.w	r2, r3, #15
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	681b      	ldr	r3, [r3, #0]
 80047cc:	440a      	add	r2, r1
 80047ce:	609a      	str	r2, [r3, #8]
 80047d0:	bf00      	nop
 80047d2:	3710      	adds	r7, #16
 80047d4:	46bd      	mov	sp, r7
 80047d6:	bd80      	pop	{r7, pc}
 80047d8:	40013800 	.word	0x40013800
 80047dc:	51eb851f 	.word	0x51eb851f

080047e0 <__errno>:
 80047e0:	4b01      	ldr	r3, [pc, #4]	; (80047e8 <__errno+0x8>)
 80047e2:	6818      	ldr	r0, [r3, #0]
 80047e4:	4770      	bx	lr
 80047e6:	bf00      	nop
 80047e8:	20000058 	.word	0x20000058

080047ec <__libc_init_array>:
 80047ec:	b570      	push	{r4, r5, r6, lr}
 80047ee:	2600      	movs	r6, #0
 80047f0:	4d0c      	ldr	r5, [pc, #48]	; (8004824 <__libc_init_array+0x38>)
 80047f2:	4c0d      	ldr	r4, [pc, #52]	; (8004828 <__libc_init_array+0x3c>)
 80047f4:	1b64      	subs	r4, r4, r5
 80047f6:	10a4      	asrs	r4, r4, #2
 80047f8:	42a6      	cmp	r6, r4
 80047fa:	d109      	bne.n	8004810 <__libc_init_array+0x24>
 80047fc:	f000 fc5c 	bl	80050b8 <_init>
 8004800:	2600      	movs	r6, #0
 8004802:	4d0a      	ldr	r5, [pc, #40]	; (800482c <__libc_init_array+0x40>)
 8004804:	4c0a      	ldr	r4, [pc, #40]	; (8004830 <__libc_init_array+0x44>)
 8004806:	1b64      	subs	r4, r4, r5
 8004808:	10a4      	asrs	r4, r4, #2
 800480a:	42a6      	cmp	r6, r4
 800480c:	d105      	bne.n	800481a <__libc_init_array+0x2e>
 800480e:	bd70      	pop	{r4, r5, r6, pc}
 8004810:	f855 3b04 	ldr.w	r3, [r5], #4
 8004814:	4798      	blx	r3
 8004816:	3601      	adds	r6, #1
 8004818:	e7ee      	b.n	80047f8 <__libc_init_array+0xc>
 800481a:	f855 3b04 	ldr.w	r3, [r5], #4
 800481e:	4798      	blx	r3
 8004820:	3601      	adds	r6, #1
 8004822:	e7f2      	b.n	800480a <__libc_init_array+0x1e>
 8004824:	08005138 	.word	0x08005138
 8004828:	08005138 	.word	0x08005138
 800482c:	08005138 	.word	0x08005138
 8004830:	0800513c 	.word	0x0800513c

08004834 <memset>:
 8004834:	4603      	mov	r3, r0
 8004836:	4402      	add	r2, r0
 8004838:	4293      	cmp	r3, r2
 800483a:	d100      	bne.n	800483e <memset+0xa>
 800483c:	4770      	bx	lr
 800483e:	f803 1b01 	strb.w	r1, [r3], #1
 8004842:	e7f9      	b.n	8004838 <memset+0x4>

08004844 <siprintf>:
 8004844:	b40e      	push	{r1, r2, r3}
 8004846:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800484a:	b500      	push	{lr}
 800484c:	b09c      	sub	sp, #112	; 0x70
 800484e:	ab1d      	add	r3, sp, #116	; 0x74
 8004850:	9002      	str	r0, [sp, #8]
 8004852:	9006      	str	r0, [sp, #24]
 8004854:	9107      	str	r1, [sp, #28]
 8004856:	9104      	str	r1, [sp, #16]
 8004858:	4808      	ldr	r0, [pc, #32]	; (800487c <siprintf+0x38>)
 800485a:	4909      	ldr	r1, [pc, #36]	; (8004880 <siprintf+0x3c>)
 800485c:	f853 2b04 	ldr.w	r2, [r3], #4
 8004860:	9105      	str	r1, [sp, #20]
 8004862:	6800      	ldr	r0, [r0, #0]
 8004864:	a902      	add	r1, sp, #8
 8004866:	9301      	str	r3, [sp, #4]
 8004868:	f000 f868 	bl	800493c <_svfiprintf_r>
 800486c:	2200      	movs	r2, #0
 800486e:	9b02      	ldr	r3, [sp, #8]
 8004870:	701a      	strb	r2, [r3, #0]
 8004872:	b01c      	add	sp, #112	; 0x70
 8004874:	f85d eb04 	ldr.w	lr, [sp], #4
 8004878:	b003      	add	sp, #12
 800487a:	4770      	bx	lr
 800487c:	20000058 	.word	0x20000058
 8004880:	ffff0208 	.word	0xffff0208

08004884 <__ssputs_r>:
 8004884:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004888:	688e      	ldr	r6, [r1, #8]
 800488a:	4682      	mov	sl, r0
 800488c:	429e      	cmp	r6, r3
 800488e:	460c      	mov	r4, r1
 8004890:	4690      	mov	r8, r2
 8004892:	461f      	mov	r7, r3
 8004894:	d838      	bhi.n	8004908 <__ssputs_r+0x84>
 8004896:	898a      	ldrh	r2, [r1, #12]
 8004898:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800489c:	d032      	beq.n	8004904 <__ssputs_r+0x80>
 800489e:	6825      	ldr	r5, [r4, #0]
 80048a0:	6909      	ldr	r1, [r1, #16]
 80048a2:	3301      	adds	r3, #1
 80048a4:	eba5 0901 	sub.w	r9, r5, r1
 80048a8:	6965      	ldr	r5, [r4, #20]
 80048aa:	444b      	add	r3, r9
 80048ac:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80048b0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80048b4:	106d      	asrs	r5, r5, #1
 80048b6:	429d      	cmp	r5, r3
 80048b8:	bf38      	it	cc
 80048ba:	461d      	movcc	r5, r3
 80048bc:	0553      	lsls	r3, r2, #21
 80048be:	d531      	bpl.n	8004924 <__ssputs_r+0xa0>
 80048c0:	4629      	mov	r1, r5
 80048c2:	f000 fb53 	bl	8004f6c <_malloc_r>
 80048c6:	4606      	mov	r6, r0
 80048c8:	b950      	cbnz	r0, 80048e0 <__ssputs_r+0x5c>
 80048ca:	230c      	movs	r3, #12
 80048cc:	f04f 30ff 	mov.w	r0, #4294967295
 80048d0:	f8ca 3000 	str.w	r3, [sl]
 80048d4:	89a3      	ldrh	r3, [r4, #12]
 80048d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80048da:	81a3      	strh	r3, [r4, #12]
 80048dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80048e0:	464a      	mov	r2, r9
 80048e2:	6921      	ldr	r1, [r4, #16]
 80048e4:	f000 face 	bl	8004e84 <memcpy>
 80048e8:	89a3      	ldrh	r3, [r4, #12]
 80048ea:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 80048ee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80048f2:	81a3      	strh	r3, [r4, #12]
 80048f4:	6126      	str	r6, [r4, #16]
 80048f6:	444e      	add	r6, r9
 80048f8:	6026      	str	r6, [r4, #0]
 80048fa:	463e      	mov	r6, r7
 80048fc:	6165      	str	r5, [r4, #20]
 80048fe:	eba5 0509 	sub.w	r5, r5, r9
 8004902:	60a5      	str	r5, [r4, #8]
 8004904:	42be      	cmp	r6, r7
 8004906:	d900      	bls.n	800490a <__ssputs_r+0x86>
 8004908:	463e      	mov	r6, r7
 800490a:	4632      	mov	r2, r6
 800490c:	4641      	mov	r1, r8
 800490e:	6820      	ldr	r0, [r4, #0]
 8004910:	f000 fac6 	bl	8004ea0 <memmove>
 8004914:	68a3      	ldr	r3, [r4, #8]
 8004916:	6822      	ldr	r2, [r4, #0]
 8004918:	1b9b      	subs	r3, r3, r6
 800491a:	4432      	add	r2, r6
 800491c:	2000      	movs	r0, #0
 800491e:	60a3      	str	r3, [r4, #8]
 8004920:	6022      	str	r2, [r4, #0]
 8004922:	e7db      	b.n	80048dc <__ssputs_r+0x58>
 8004924:	462a      	mov	r2, r5
 8004926:	f000 fb7b 	bl	8005020 <_realloc_r>
 800492a:	4606      	mov	r6, r0
 800492c:	2800      	cmp	r0, #0
 800492e:	d1e1      	bne.n	80048f4 <__ssputs_r+0x70>
 8004930:	4650      	mov	r0, sl
 8004932:	6921      	ldr	r1, [r4, #16]
 8004934:	f000 face 	bl	8004ed4 <_free_r>
 8004938:	e7c7      	b.n	80048ca <__ssputs_r+0x46>
	...

0800493c <_svfiprintf_r>:
 800493c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004940:	4698      	mov	r8, r3
 8004942:	898b      	ldrh	r3, [r1, #12]
 8004944:	4607      	mov	r7, r0
 8004946:	061b      	lsls	r3, r3, #24
 8004948:	460d      	mov	r5, r1
 800494a:	4614      	mov	r4, r2
 800494c:	b09d      	sub	sp, #116	; 0x74
 800494e:	d50e      	bpl.n	800496e <_svfiprintf_r+0x32>
 8004950:	690b      	ldr	r3, [r1, #16]
 8004952:	b963      	cbnz	r3, 800496e <_svfiprintf_r+0x32>
 8004954:	2140      	movs	r1, #64	; 0x40
 8004956:	f000 fb09 	bl	8004f6c <_malloc_r>
 800495a:	6028      	str	r0, [r5, #0]
 800495c:	6128      	str	r0, [r5, #16]
 800495e:	b920      	cbnz	r0, 800496a <_svfiprintf_r+0x2e>
 8004960:	230c      	movs	r3, #12
 8004962:	603b      	str	r3, [r7, #0]
 8004964:	f04f 30ff 	mov.w	r0, #4294967295
 8004968:	e0d1      	b.n	8004b0e <_svfiprintf_r+0x1d2>
 800496a:	2340      	movs	r3, #64	; 0x40
 800496c:	616b      	str	r3, [r5, #20]
 800496e:	2300      	movs	r3, #0
 8004970:	9309      	str	r3, [sp, #36]	; 0x24
 8004972:	2320      	movs	r3, #32
 8004974:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004978:	2330      	movs	r3, #48	; 0x30
 800497a:	f04f 0901 	mov.w	r9, #1
 800497e:	f8cd 800c 	str.w	r8, [sp, #12]
 8004982:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004b28 <_svfiprintf_r+0x1ec>
 8004986:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800498a:	4623      	mov	r3, r4
 800498c:	469a      	mov	sl, r3
 800498e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004992:	b10a      	cbz	r2, 8004998 <_svfiprintf_r+0x5c>
 8004994:	2a25      	cmp	r2, #37	; 0x25
 8004996:	d1f9      	bne.n	800498c <_svfiprintf_r+0x50>
 8004998:	ebba 0b04 	subs.w	fp, sl, r4
 800499c:	d00b      	beq.n	80049b6 <_svfiprintf_r+0x7a>
 800499e:	465b      	mov	r3, fp
 80049a0:	4622      	mov	r2, r4
 80049a2:	4629      	mov	r1, r5
 80049a4:	4638      	mov	r0, r7
 80049a6:	f7ff ff6d 	bl	8004884 <__ssputs_r>
 80049aa:	3001      	adds	r0, #1
 80049ac:	f000 80aa 	beq.w	8004b04 <_svfiprintf_r+0x1c8>
 80049b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80049b2:	445a      	add	r2, fp
 80049b4:	9209      	str	r2, [sp, #36]	; 0x24
 80049b6:	f89a 3000 	ldrb.w	r3, [sl]
 80049ba:	2b00      	cmp	r3, #0
 80049bc:	f000 80a2 	beq.w	8004b04 <_svfiprintf_r+0x1c8>
 80049c0:	2300      	movs	r3, #0
 80049c2:	f04f 32ff 	mov.w	r2, #4294967295
 80049c6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80049ca:	f10a 0a01 	add.w	sl, sl, #1
 80049ce:	9304      	str	r3, [sp, #16]
 80049d0:	9307      	str	r3, [sp, #28]
 80049d2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80049d6:	931a      	str	r3, [sp, #104]	; 0x68
 80049d8:	4654      	mov	r4, sl
 80049da:	2205      	movs	r2, #5
 80049dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80049e0:	4851      	ldr	r0, [pc, #324]	; (8004b28 <_svfiprintf_r+0x1ec>)
 80049e2:	f000 fa41 	bl	8004e68 <memchr>
 80049e6:	9a04      	ldr	r2, [sp, #16]
 80049e8:	b9d8      	cbnz	r0, 8004a22 <_svfiprintf_r+0xe6>
 80049ea:	06d0      	lsls	r0, r2, #27
 80049ec:	bf44      	itt	mi
 80049ee:	2320      	movmi	r3, #32
 80049f0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80049f4:	0711      	lsls	r1, r2, #28
 80049f6:	bf44      	itt	mi
 80049f8:	232b      	movmi	r3, #43	; 0x2b
 80049fa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80049fe:	f89a 3000 	ldrb.w	r3, [sl]
 8004a02:	2b2a      	cmp	r3, #42	; 0x2a
 8004a04:	d015      	beq.n	8004a32 <_svfiprintf_r+0xf6>
 8004a06:	4654      	mov	r4, sl
 8004a08:	2000      	movs	r0, #0
 8004a0a:	f04f 0c0a 	mov.w	ip, #10
 8004a0e:	9a07      	ldr	r2, [sp, #28]
 8004a10:	4621      	mov	r1, r4
 8004a12:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004a16:	3b30      	subs	r3, #48	; 0x30
 8004a18:	2b09      	cmp	r3, #9
 8004a1a:	d94e      	bls.n	8004aba <_svfiprintf_r+0x17e>
 8004a1c:	b1b0      	cbz	r0, 8004a4c <_svfiprintf_r+0x110>
 8004a1e:	9207      	str	r2, [sp, #28]
 8004a20:	e014      	b.n	8004a4c <_svfiprintf_r+0x110>
 8004a22:	eba0 0308 	sub.w	r3, r0, r8
 8004a26:	fa09 f303 	lsl.w	r3, r9, r3
 8004a2a:	4313      	orrs	r3, r2
 8004a2c:	46a2      	mov	sl, r4
 8004a2e:	9304      	str	r3, [sp, #16]
 8004a30:	e7d2      	b.n	80049d8 <_svfiprintf_r+0x9c>
 8004a32:	9b03      	ldr	r3, [sp, #12]
 8004a34:	1d19      	adds	r1, r3, #4
 8004a36:	681b      	ldr	r3, [r3, #0]
 8004a38:	9103      	str	r1, [sp, #12]
 8004a3a:	2b00      	cmp	r3, #0
 8004a3c:	bfbb      	ittet	lt
 8004a3e:	425b      	neglt	r3, r3
 8004a40:	f042 0202 	orrlt.w	r2, r2, #2
 8004a44:	9307      	strge	r3, [sp, #28]
 8004a46:	9307      	strlt	r3, [sp, #28]
 8004a48:	bfb8      	it	lt
 8004a4a:	9204      	strlt	r2, [sp, #16]
 8004a4c:	7823      	ldrb	r3, [r4, #0]
 8004a4e:	2b2e      	cmp	r3, #46	; 0x2e
 8004a50:	d10c      	bne.n	8004a6c <_svfiprintf_r+0x130>
 8004a52:	7863      	ldrb	r3, [r4, #1]
 8004a54:	2b2a      	cmp	r3, #42	; 0x2a
 8004a56:	d135      	bne.n	8004ac4 <_svfiprintf_r+0x188>
 8004a58:	9b03      	ldr	r3, [sp, #12]
 8004a5a:	3402      	adds	r4, #2
 8004a5c:	1d1a      	adds	r2, r3, #4
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	9203      	str	r2, [sp, #12]
 8004a62:	2b00      	cmp	r3, #0
 8004a64:	bfb8      	it	lt
 8004a66:	f04f 33ff 	movlt.w	r3, #4294967295
 8004a6a:	9305      	str	r3, [sp, #20]
 8004a6c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8004b38 <_svfiprintf_r+0x1fc>
 8004a70:	2203      	movs	r2, #3
 8004a72:	4650      	mov	r0, sl
 8004a74:	7821      	ldrb	r1, [r4, #0]
 8004a76:	f000 f9f7 	bl	8004e68 <memchr>
 8004a7a:	b140      	cbz	r0, 8004a8e <_svfiprintf_r+0x152>
 8004a7c:	2340      	movs	r3, #64	; 0x40
 8004a7e:	eba0 000a 	sub.w	r0, r0, sl
 8004a82:	fa03 f000 	lsl.w	r0, r3, r0
 8004a86:	9b04      	ldr	r3, [sp, #16]
 8004a88:	3401      	adds	r4, #1
 8004a8a:	4303      	orrs	r3, r0
 8004a8c:	9304      	str	r3, [sp, #16]
 8004a8e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004a92:	2206      	movs	r2, #6
 8004a94:	4825      	ldr	r0, [pc, #148]	; (8004b2c <_svfiprintf_r+0x1f0>)
 8004a96:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004a9a:	f000 f9e5 	bl	8004e68 <memchr>
 8004a9e:	2800      	cmp	r0, #0
 8004aa0:	d038      	beq.n	8004b14 <_svfiprintf_r+0x1d8>
 8004aa2:	4b23      	ldr	r3, [pc, #140]	; (8004b30 <_svfiprintf_r+0x1f4>)
 8004aa4:	bb1b      	cbnz	r3, 8004aee <_svfiprintf_r+0x1b2>
 8004aa6:	9b03      	ldr	r3, [sp, #12]
 8004aa8:	3307      	adds	r3, #7
 8004aaa:	f023 0307 	bic.w	r3, r3, #7
 8004aae:	3308      	adds	r3, #8
 8004ab0:	9303      	str	r3, [sp, #12]
 8004ab2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004ab4:	4433      	add	r3, r6
 8004ab6:	9309      	str	r3, [sp, #36]	; 0x24
 8004ab8:	e767      	b.n	800498a <_svfiprintf_r+0x4e>
 8004aba:	460c      	mov	r4, r1
 8004abc:	2001      	movs	r0, #1
 8004abe:	fb0c 3202 	mla	r2, ip, r2, r3
 8004ac2:	e7a5      	b.n	8004a10 <_svfiprintf_r+0xd4>
 8004ac4:	2300      	movs	r3, #0
 8004ac6:	f04f 0c0a 	mov.w	ip, #10
 8004aca:	4619      	mov	r1, r3
 8004acc:	3401      	adds	r4, #1
 8004ace:	9305      	str	r3, [sp, #20]
 8004ad0:	4620      	mov	r0, r4
 8004ad2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004ad6:	3a30      	subs	r2, #48	; 0x30
 8004ad8:	2a09      	cmp	r2, #9
 8004ada:	d903      	bls.n	8004ae4 <_svfiprintf_r+0x1a8>
 8004adc:	2b00      	cmp	r3, #0
 8004ade:	d0c5      	beq.n	8004a6c <_svfiprintf_r+0x130>
 8004ae0:	9105      	str	r1, [sp, #20]
 8004ae2:	e7c3      	b.n	8004a6c <_svfiprintf_r+0x130>
 8004ae4:	4604      	mov	r4, r0
 8004ae6:	2301      	movs	r3, #1
 8004ae8:	fb0c 2101 	mla	r1, ip, r1, r2
 8004aec:	e7f0      	b.n	8004ad0 <_svfiprintf_r+0x194>
 8004aee:	ab03      	add	r3, sp, #12
 8004af0:	9300      	str	r3, [sp, #0]
 8004af2:	462a      	mov	r2, r5
 8004af4:	4638      	mov	r0, r7
 8004af6:	4b0f      	ldr	r3, [pc, #60]	; (8004b34 <_svfiprintf_r+0x1f8>)
 8004af8:	a904      	add	r1, sp, #16
 8004afa:	f3af 8000 	nop.w
 8004afe:	1c42      	adds	r2, r0, #1
 8004b00:	4606      	mov	r6, r0
 8004b02:	d1d6      	bne.n	8004ab2 <_svfiprintf_r+0x176>
 8004b04:	89ab      	ldrh	r3, [r5, #12]
 8004b06:	065b      	lsls	r3, r3, #25
 8004b08:	f53f af2c 	bmi.w	8004964 <_svfiprintf_r+0x28>
 8004b0c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004b0e:	b01d      	add	sp, #116	; 0x74
 8004b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004b14:	ab03      	add	r3, sp, #12
 8004b16:	9300      	str	r3, [sp, #0]
 8004b18:	462a      	mov	r2, r5
 8004b1a:	4638      	mov	r0, r7
 8004b1c:	4b05      	ldr	r3, [pc, #20]	; (8004b34 <_svfiprintf_r+0x1f8>)
 8004b1e:	a904      	add	r1, sp, #16
 8004b20:	f000 f87c 	bl	8004c1c <_printf_i>
 8004b24:	e7eb      	b.n	8004afe <_svfiprintf_r+0x1c2>
 8004b26:	bf00      	nop
 8004b28:	08005104 	.word	0x08005104
 8004b2c:	0800510e 	.word	0x0800510e
 8004b30:	00000000 	.word	0x00000000
 8004b34:	08004885 	.word	0x08004885
 8004b38:	0800510a 	.word	0x0800510a

08004b3c <_printf_common>:
 8004b3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b40:	4616      	mov	r6, r2
 8004b42:	4699      	mov	r9, r3
 8004b44:	688a      	ldr	r2, [r1, #8]
 8004b46:	690b      	ldr	r3, [r1, #16]
 8004b48:	4607      	mov	r7, r0
 8004b4a:	4293      	cmp	r3, r2
 8004b4c:	bfb8      	it	lt
 8004b4e:	4613      	movlt	r3, r2
 8004b50:	6033      	str	r3, [r6, #0]
 8004b52:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004b56:	460c      	mov	r4, r1
 8004b58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004b5c:	b10a      	cbz	r2, 8004b62 <_printf_common+0x26>
 8004b5e:	3301      	adds	r3, #1
 8004b60:	6033      	str	r3, [r6, #0]
 8004b62:	6823      	ldr	r3, [r4, #0]
 8004b64:	0699      	lsls	r1, r3, #26
 8004b66:	bf42      	ittt	mi
 8004b68:	6833      	ldrmi	r3, [r6, #0]
 8004b6a:	3302      	addmi	r3, #2
 8004b6c:	6033      	strmi	r3, [r6, #0]
 8004b6e:	6825      	ldr	r5, [r4, #0]
 8004b70:	f015 0506 	ands.w	r5, r5, #6
 8004b74:	d106      	bne.n	8004b84 <_printf_common+0x48>
 8004b76:	f104 0a19 	add.w	sl, r4, #25
 8004b7a:	68e3      	ldr	r3, [r4, #12]
 8004b7c:	6832      	ldr	r2, [r6, #0]
 8004b7e:	1a9b      	subs	r3, r3, r2
 8004b80:	42ab      	cmp	r3, r5
 8004b82:	dc28      	bgt.n	8004bd6 <_printf_common+0x9a>
 8004b84:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004b88:	1e13      	subs	r3, r2, #0
 8004b8a:	6822      	ldr	r2, [r4, #0]
 8004b8c:	bf18      	it	ne
 8004b8e:	2301      	movne	r3, #1
 8004b90:	0692      	lsls	r2, r2, #26
 8004b92:	d42d      	bmi.n	8004bf0 <_printf_common+0xb4>
 8004b94:	4649      	mov	r1, r9
 8004b96:	4638      	mov	r0, r7
 8004b98:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004b9c:	47c0      	blx	r8
 8004b9e:	3001      	adds	r0, #1
 8004ba0:	d020      	beq.n	8004be4 <_printf_common+0xa8>
 8004ba2:	6823      	ldr	r3, [r4, #0]
 8004ba4:	68e5      	ldr	r5, [r4, #12]
 8004ba6:	f003 0306 	and.w	r3, r3, #6
 8004baa:	2b04      	cmp	r3, #4
 8004bac:	bf18      	it	ne
 8004bae:	2500      	movne	r5, #0
 8004bb0:	6832      	ldr	r2, [r6, #0]
 8004bb2:	f04f 0600 	mov.w	r6, #0
 8004bb6:	68a3      	ldr	r3, [r4, #8]
 8004bb8:	bf08      	it	eq
 8004bba:	1aad      	subeq	r5, r5, r2
 8004bbc:	6922      	ldr	r2, [r4, #16]
 8004bbe:	bf08      	it	eq
 8004bc0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004bc4:	4293      	cmp	r3, r2
 8004bc6:	bfc4      	itt	gt
 8004bc8:	1a9b      	subgt	r3, r3, r2
 8004bca:	18ed      	addgt	r5, r5, r3
 8004bcc:	341a      	adds	r4, #26
 8004bce:	42b5      	cmp	r5, r6
 8004bd0:	d11a      	bne.n	8004c08 <_printf_common+0xcc>
 8004bd2:	2000      	movs	r0, #0
 8004bd4:	e008      	b.n	8004be8 <_printf_common+0xac>
 8004bd6:	2301      	movs	r3, #1
 8004bd8:	4652      	mov	r2, sl
 8004bda:	4649      	mov	r1, r9
 8004bdc:	4638      	mov	r0, r7
 8004bde:	47c0      	blx	r8
 8004be0:	3001      	adds	r0, #1
 8004be2:	d103      	bne.n	8004bec <_printf_common+0xb0>
 8004be4:	f04f 30ff 	mov.w	r0, #4294967295
 8004be8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004bec:	3501      	adds	r5, #1
 8004bee:	e7c4      	b.n	8004b7a <_printf_common+0x3e>
 8004bf0:	2030      	movs	r0, #48	; 0x30
 8004bf2:	18e1      	adds	r1, r4, r3
 8004bf4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004bf8:	1c5a      	adds	r2, r3, #1
 8004bfa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004bfe:	4422      	add	r2, r4
 8004c00:	3302      	adds	r3, #2
 8004c02:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004c06:	e7c5      	b.n	8004b94 <_printf_common+0x58>
 8004c08:	2301      	movs	r3, #1
 8004c0a:	4622      	mov	r2, r4
 8004c0c:	4649      	mov	r1, r9
 8004c0e:	4638      	mov	r0, r7
 8004c10:	47c0      	blx	r8
 8004c12:	3001      	adds	r0, #1
 8004c14:	d0e6      	beq.n	8004be4 <_printf_common+0xa8>
 8004c16:	3601      	adds	r6, #1
 8004c18:	e7d9      	b.n	8004bce <_printf_common+0x92>
	...

08004c1c <_printf_i>:
 8004c1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004c20:	460c      	mov	r4, r1
 8004c22:	7e27      	ldrb	r7, [r4, #24]
 8004c24:	4691      	mov	r9, r2
 8004c26:	2f78      	cmp	r7, #120	; 0x78
 8004c28:	4680      	mov	r8, r0
 8004c2a:	469a      	mov	sl, r3
 8004c2c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004c2e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004c32:	d807      	bhi.n	8004c44 <_printf_i+0x28>
 8004c34:	2f62      	cmp	r7, #98	; 0x62
 8004c36:	d80a      	bhi.n	8004c4e <_printf_i+0x32>
 8004c38:	2f00      	cmp	r7, #0
 8004c3a:	f000 80d9 	beq.w	8004df0 <_printf_i+0x1d4>
 8004c3e:	2f58      	cmp	r7, #88	; 0x58
 8004c40:	f000 80a4 	beq.w	8004d8c <_printf_i+0x170>
 8004c44:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004c48:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004c4c:	e03a      	b.n	8004cc4 <_printf_i+0xa8>
 8004c4e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004c52:	2b15      	cmp	r3, #21
 8004c54:	d8f6      	bhi.n	8004c44 <_printf_i+0x28>
 8004c56:	a001      	add	r0, pc, #4	; (adr r0, 8004c5c <_printf_i+0x40>)
 8004c58:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8004c5c:	08004cb5 	.word	0x08004cb5
 8004c60:	08004cc9 	.word	0x08004cc9
 8004c64:	08004c45 	.word	0x08004c45
 8004c68:	08004c45 	.word	0x08004c45
 8004c6c:	08004c45 	.word	0x08004c45
 8004c70:	08004c45 	.word	0x08004c45
 8004c74:	08004cc9 	.word	0x08004cc9
 8004c78:	08004c45 	.word	0x08004c45
 8004c7c:	08004c45 	.word	0x08004c45
 8004c80:	08004c45 	.word	0x08004c45
 8004c84:	08004c45 	.word	0x08004c45
 8004c88:	08004dd7 	.word	0x08004dd7
 8004c8c:	08004cf9 	.word	0x08004cf9
 8004c90:	08004db9 	.word	0x08004db9
 8004c94:	08004c45 	.word	0x08004c45
 8004c98:	08004c45 	.word	0x08004c45
 8004c9c:	08004df9 	.word	0x08004df9
 8004ca0:	08004c45 	.word	0x08004c45
 8004ca4:	08004cf9 	.word	0x08004cf9
 8004ca8:	08004c45 	.word	0x08004c45
 8004cac:	08004c45 	.word	0x08004c45
 8004cb0:	08004dc1 	.word	0x08004dc1
 8004cb4:	680b      	ldr	r3, [r1, #0]
 8004cb6:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8004cba:	1d1a      	adds	r2, r3, #4
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	600a      	str	r2, [r1, #0]
 8004cc0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004cc4:	2301      	movs	r3, #1
 8004cc6:	e0a4      	b.n	8004e12 <_printf_i+0x1f6>
 8004cc8:	6825      	ldr	r5, [r4, #0]
 8004cca:	6808      	ldr	r0, [r1, #0]
 8004ccc:	062e      	lsls	r6, r5, #24
 8004cce:	f100 0304 	add.w	r3, r0, #4
 8004cd2:	d50a      	bpl.n	8004cea <_printf_i+0xce>
 8004cd4:	6805      	ldr	r5, [r0, #0]
 8004cd6:	600b      	str	r3, [r1, #0]
 8004cd8:	2d00      	cmp	r5, #0
 8004cda:	da03      	bge.n	8004ce4 <_printf_i+0xc8>
 8004cdc:	232d      	movs	r3, #45	; 0x2d
 8004cde:	426d      	negs	r5, r5
 8004ce0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004ce4:	230a      	movs	r3, #10
 8004ce6:	485e      	ldr	r0, [pc, #376]	; (8004e60 <_printf_i+0x244>)
 8004ce8:	e019      	b.n	8004d1e <_printf_i+0x102>
 8004cea:	f015 0f40 	tst.w	r5, #64	; 0x40
 8004cee:	6805      	ldr	r5, [r0, #0]
 8004cf0:	600b      	str	r3, [r1, #0]
 8004cf2:	bf18      	it	ne
 8004cf4:	b22d      	sxthne	r5, r5
 8004cf6:	e7ef      	b.n	8004cd8 <_printf_i+0xbc>
 8004cf8:	680b      	ldr	r3, [r1, #0]
 8004cfa:	6825      	ldr	r5, [r4, #0]
 8004cfc:	1d18      	adds	r0, r3, #4
 8004cfe:	6008      	str	r0, [r1, #0]
 8004d00:	0628      	lsls	r0, r5, #24
 8004d02:	d501      	bpl.n	8004d08 <_printf_i+0xec>
 8004d04:	681d      	ldr	r5, [r3, #0]
 8004d06:	e002      	b.n	8004d0e <_printf_i+0xf2>
 8004d08:	0669      	lsls	r1, r5, #25
 8004d0a:	d5fb      	bpl.n	8004d04 <_printf_i+0xe8>
 8004d0c:	881d      	ldrh	r5, [r3, #0]
 8004d0e:	2f6f      	cmp	r7, #111	; 0x6f
 8004d10:	bf0c      	ite	eq
 8004d12:	2308      	moveq	r3, #8
 8004d14:	230a      	movne	r3, #10
 8004d16:	4852      	ldr	r0, [pc, #328]	; (8004e60 <_printf_i+0x244>)
 8004d18:	2100      	movs	r1, #0
 8004d1a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004d1e:	6866      	ldr	r6, [r4, #4]
 8004d20:	2e00      	cmp	r6, #0
 8004d22:	bfa8      	it	ge
 8004d24:	6821      	ldrge	r1, [r4, #0]
 8004d26:	60a6      	str	r6, [r4, #8]
 8004d28:	bfa4      	itt	ge
 8004d2a:	f021 0104 	bicge.w	r1, r1, #4
 8004d2e:	6021      	strge	r1, [r4, #0]
 8004d30:	b90d      	cbnz	r5, 8004d36 <_printf_i+0x11a>
 8004d32:	2e00      	cmp	r6, #0
 8004d34:	d04d      	beq.n	8004dd2 <_printf_i+0x1b6>
 8004d36:	4616      	mov	r6, r2
 8004d38:	fbb5 f1f3 	udiv	r1, r5, r3
 8004d3c:	fb03 5711 	mls	r7, r3, r1, r5
 8004d40:	5dc7      	ldrb	r7, [r0, r7]
 8004d42:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8004d46:	462f      	mov	r7, r5
 8004d48:	42bb      	cmp	r3, r7
 8004d4a:	460d      	mov	r5, r1
 8004d4c:	d9f4      	bls.n	8004d38 <_printf_i+0x11c>
 8004d4e:	2b08      	cmp	r3, #8
 8004d50:	d10b      	bne.n	8004d6a <_printf_i+0x14e>
 8004d52:	6823      	ldr	r3, [r4, #0]
 8004d54:	07df      	lsls	r7, r3, #31
 8004d56:	d508      	bpl.n	8004d6a <_printf_i+0x14e>
 8004d58:	6923      	ldr	r3, [r4, #16]
 8004d5a:	6861      	ldr	r1, [r4, #4]
 8004d5c:	4299      	cmp	r1, r3
 8004d5e:	bfde      	ittt	le
 8004d60:	2330      	movle	r3, #48	; 0x30
 8004d62:	f806 3c01 	strble.w	r3, [r6, #-1]
 8004d66:	f106 36ff 	addle.w	r6, r6, #4294967295
 8004d6a:	1b92      	subs	r2, r2, r6
 8004d6c:	6122      	str	r2, [r4, #16]
 8004d6e:	464b      	mov	r3, r9
 8004d70:	4621      	mov	r1, r4
 8004d72:	4640      	mov	r0, r8
 8004d74:	f8cd a000 	str.w	sl, [sp]
 8004d78:	aa03      	add	r2, sp, #12
 8004d7a:	f7ff fedf 	bl	8004b3c <_printf_common>
 8004d7e:	3001      	adds	r0, #1
 8004d80:	d14c      	bne.n	8004e1c <_printf_i+0x200>
 8004d82:	f04f 30ff 	mov.w	r0, #4294967295
 8004d86:	b004      	add	sp, #16
 8004d88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004d8c:	4834      	ldr	r0, [pc, #208]	; (8004e60 <_printf_i+0x244>)
 8004d8e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8004d92:	680e      	ldr	r6, [r1, #0]
 8004d94:	6823      	ldr	r3, [r4, #0]
 8004d96:	f856 5b04 	ldr.w	r5, [r6], #4
 8004d9a:	061f      	lsls	r7, r3, #24
 8004d9c:	600e      	str	r6, [r1, #0]
 8004d9e:	d514      	bpl.n	8004dca <_printf_i+0x1ae>
 8004da0:	07d9      	lsls	r1, r3, #31
 8004da2:	bf44      	itt	mi
 8004da4:	f043 0320 	orrmi.w	r3, r3, #32
 8004da8:	6023      	strmi	r3, [r4, #0]
 8004daa:	b91d      	cbnz	r5, 8004db4 <_printf_i+0x198>
 8004dac:	6823      	ldr	r3, [r4, #0]
 8004dae:	f023 0320 	bic.w	r3, r3, #32
 8004db2:	6023      	str	r3, [r4, #0]
 8004db4:	2310      	movs	r3, #16
 8004db6:	e7af      	b.n	8004d18 <_printf_i+0xfc>
 8004db8:	6823      	ldr	r3, [r4, #0]
 8004dba:	f043 0320 	orr.w	r3, r3, #32
 8004dbe:	6023      	str	r3, [r4, #0]
 8004dc0:	2378      	movs	r3, #120	; 0x78
 8004dc2:	4828      	ldr	r0, [pc, #160]	; (8004e64 <_printf_i+0x248>)
 8004dc4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004dc8:	e7e3      	b.n	8004d92 <_printf_i+0x176>
 8004dca:	065e      	lsls	r6, r3, #25
 8004dcc:	bf48      	it	mi
 8004dce:	b2ad      	uxthmi	r5, r5
 8004dd0:	e7e6      	b.n	8004da0 <_printf_i+0x184>
 8004dd2:	4616      	mov	r6, r2
 8004dd4:	e7bb      	b.n	8004d4e <_printf_i+0x132>
 8004dd6:	680b      	ldr	r3, [r1, #0]
 8004dd8:	6826      	ldr	r6, [r4, #0]
 8004dda:	1d1d      	adds	r5, r3, #4
 8004ddc:	6960      	ldr	r0, [r4, #20]
 8004dde:	600d      	str	r5, [r1, #0]
 8004de0:	0635      	lsls	r5, r6, #24
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	d501      	bpl.n	8004dea <_printf_i+0x1ce>
 8004de6:	6018      	str	r0, [r3, #0]
 8004de8:	e002      	b.n	8004df0 <_printf_i+0x1d4>
 8004dea:	0671      	lsls	r1, r6, #25
 8004dec:	d5fb      	bpl.n	8004de6 <_printf_i+0x1ca>
 8004dee:	8018      	strh	r0, [r3, #0]
 8004df0:	2300      	movs	r3, #0
 8004df2:	4616      	mov	r6, r2
 8004df4:	6123      	str	r3, [r4, #16]
 8004df6:	e7ba      	b.n	8004d6e <_printf_i+0x152>
 8004df8:	680b      	ldr	r3, [r1, #0]
 8004dfa:	1d1a      	adds	r2, r3, #4
 8004dfc:	600a      	str	r2, [r1, #0]
 8004dfe:	681e      	ldr	r6, [r3, #0]
 8004e00:	2100      	movs	r1, #0
 8004e02:	4630      	mov	r0, r6
 8004e04:	6862      	ldr	r2, [r4, #4]
 8004e06:	f000 f82f 	bl	8004e68 <memchr>
 8004e0a:	b108      	cbz	r0, 8004e10 <_printf_i+0x1f4>
 8004e0c:	1b80      	subs	r0, r0, r6
 8004e0e:	6060      	str	r0, [r4, #4]
 8004e10:	6863      	ldr	r3, [r4, #4]
 8004e12:	6123      	str	r3, [r4, #16]
 8004e14:	2300      	movs	r3, #0
 8004e16:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004e1a:	e7a8      	b.n	8004d6e <_printf_i+0x152>
 8004e1c:	4632      	mov	r2, r6
 8004e1e:	4649      	mov	r1, r9
 8004e20:	4640      	mov	r0, r8
 8004e22:	6923      	ldr	r3, [r4, #16]
 8004e24:	47d0      	blx	sl
 8004e26:	3001      	adds	r0, #1
 8004e28:	d0ab      	beq.n	8004d82 <_printf_i+0x166>
 8004e2a:	6823      	ldr	r3, [r4, #0]
 8004e2c:	079b      	lsls	r3, r3, #30
 8004e2e:	d413      	bmi.n	8004e58 <_printf_i+0x23c>
 8004e30:	68e0      	ldr	r0, [r4, #12]
 8004e32:	9b03      	ldr	r3, [sp, #12]
 8004e34:	4298      	cmp	r0, r3
 8004e36:	bfb8      	it	lt
 8004e38:	4618      	movlt	r0, r3
 8004e3a:	e7a4      	b.n	8004d86 <_printf_i+0x16a>
 8004e3c:	2301      	movs	r3, #1
 8004e3e:	4632      	mov	r2, r6
 8004e40:	4649      	mov	r1, r9
 8004e42:	4640      	mov	r0, r8
 8004e44:	47d0      	blx	sl
 8004e46:	3001      	adds	r0, #1
 8004e48:	d09b      	beq.n	8004d82 <_printf_i+0x166>
 8004e4a:	3501      	adds	r5, #1
 8004e4c:	68e3      	ldr	r3, [r4, #12]
 8004e4e:	9903      	ldr	r1, [sp, #12]
 8004e50:	1a5b      	subs	r3, r3, r1
 8004e52:	42ab      	cmp	r3, r5
 8004e54:	dcf2      	bgt.n	8004e3c <_printf_i+0x220>
 8004e56:	e7eb      	b.n	8004e30 <_printf_i+0x214>
 8004e58:	2500      	movs	r5, #0
 8004e5a:	f104 0619 	add.w	r6, r4, #25
 8004e5e:	e7f5      	b.n	8004e4c <_printf_i+0x230>
 8004e60:	08005115 	.word	0x08005115
 8004e64:	08005126 	.word	0x08005126

08004e68 <memchr>:
 8004e68:	4603      	mov	r3, r0
 8004e6a:	b510      	push	{r4, lr}
 8004e6c:	b2c9      	uxtb	r1, r1
 8004e6e:	4402      	add	r2, r0
 8004e70:	4293      	cmp	r3, r2
 8004e72:	4618      	mov	r0, r3
 8004e74:	d101      	bne.n	8004e7a <memchr+0x12>
 8004e76:	2000      	movs	r0, #0
 8004e78:	e003      	b.n	8004e82 <memchr+0x1a>
 8004e7a:	7804      	ldrb	r4, [r0, #0]
 8004e7c:	3301      	adds	r3, #1
 8004e7e:	428c      	cmp	r4, r1
 8004e80:	d1f6      	bne.n	8004e70 <memchr+0x8>
 8004e82:	bd10      	pop	{r4, pc}

08004e84 <memcpy>:
 8004e84:	440a      	add	r2, r1
 8004e86:	4291      	cmp	r1, r2
 8004e88:	f100 33ff 	add.w	r3, r0, #4294967295
 8004e8c:	d100      	bne.n	8004e90 <memcpy+0xc>
 8004e8e:	4770      	bx	lr
 8004e90:	b510      	push	{r4, lr}
 8004e92:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004e96:	4291      	cmp	r1, r2
 8004e98:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004e9c:	d1f9      	bne.n	8004e92 <memcpy+0xe>
 8004e9e:	bd10      	pop	{r4, pc}

08004ea0 <memmove>:
 8004ea0:	4288      	cmp	r0, r1
 8004ea2:	b510      	push	{r4, lr}
 8004ea4:	eb01 0402 	add.w	r4, r1, r2
 8004ea8:	d902      	bls.n	8004eb0 <memmove+0x10>
 8004eaa:	4284      	cmp	r4, r0
 8004eac:	4623      	mov	r3, r4
 8004eae:	d807      	bhi.n	8004ec0 <memmove+0x20>
 8004eb0:	1e43      	subs	r3, r0, #1
 8004eb2:	42a1      	cmp	r1, r4
 8004eb4:	d008      	beq.n	8004ec8 <memmove+0x28>
 8004eb6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004eba:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004ebe:	e7f8      	b.n	8004eb2 <memmove+0x12>
 8004ec0:	4601      	mov	r1, r0
 8004ec2:	4402      	add	r2, r0
 8004ec4:	428a      	cmp	r2, r1
 8004ec6:	d100      	bne.n	8004eca <memmove+0x2a>
 8004ec8:	bd10      	pop	{r4, pc}
 8004eca:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004ece:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004ed2:	e7f7      	b.n	8004ec4 <memmove+0x24>

08004ed4 <_free_r>:
 8004ed4:	b538      	push	{r3, r4, r5, lr}
 8004ed6:	4605      	mov	r5, r0
 8004ed8:	2900      	cmp	r1, #0
 8004eda:	d043      	beq.n	8004f64 <_free_r+0x90>
 8004edc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004ee0:	1f0c      	subs	r4, r1, #4
 8004ee2:	2b00      	cmp	r3, #0
 8004ee4:	bfb8      	it	lt
 8004ee6:	18e4      	addlt	r4, r4, r3
 8004ee8:	f000 f8d0 	bl	800508c <__malloc_lock>
 8004eec:	4a1e      	ldr	r2, [pc, #120]	; (8004f68 <_free_r+0x94>)
 8004eee:	6813      	ldr	r3, [r2, #0]
 8004ef0:	4610      	mov	r0, r2
 8004ef2:	b933      	cbnz	r3, 8004f02 <_free_r+0x2e>
 8004ef4:	6063      	str	r3, [r4, #4]
 8004ef6:	6014      	str	r4, [r2, #0]
 8004ef8:	4628      	mov	r0, r5
 8004efa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004efe:	f000 b8cb 	b.w	8005098 <__malloc_unlock>
 8004f02:	42a3      	cmp	r3, r4
 8004f04:	d90a      	bls.n	8004f1c <_free_r+0x48>
 8004f06:	6821      	ldr	r1, [r4, #0]
 8004f08:	1862      	adds	r2, r4, r1
 8004f0a:	4293      	cmp	r3, r2
 8004f0c:	bf01      	itttt	eq
 8004f0e:	681a      	ldreq	r2, [r3, #0]
 8004f10:	685b      	ldreq	r3, [r3, #4]
 8004f12:	1852      	addeq	r2, r2, r1
 8004f14:	6022      	streq	r2, [r4, #0]
 8004f16:	6063      	str	r3, [r4, #4]
 8004f18:	6004      	str	r4, [r0, #0]
 8004f1a:	e7ed      	b.n	8004ef8 <_free_r+0x24>
 8004f1c:	461a      	mov	r2, r3
 8004f1e:	685b      	ldr	r3, [r3, #4]
 8004f20:	b10b      	cbz	r3, 8004f26 <_free_r+0x52>
 8004f22:	42a3      	cmp	r3, r4
 8004f24:	d9fa      	bls.n	8004f1c <_free_r+0x48>
 8004f26:	6811      	ldr	r1, [r2, #0]
 8004f28:	1850      	adds	r0, r2, r1
 8004f2a:	42a0      	cmp	r0, r4
 8004f2c:	d10b      	bne.n	8004f46 <_free_r+0x72>
 8004f2e:	6820      	ldr	r0, [r4, #0]
 8004f30:	4401      	add	r1, r0
 8004f32:	1850      	adds	r0, r2, r1
 8004f34:	4283      	cmp	r3, r0
 8004f36:	6011      	str	r1, [r2, #0]
 8004f38:	d1de      	bne.n	8004ef8 <_free_r+0x24>
 8004f3a:	6818      	ldr	r0, [r3, #0]
 8004f3c:	685b      	ldr	r3, [r3, #4]
 8004f3e:	4401      	add	r1, r0
 8004f40:	6011      	str	r1, [r2, #0]
 8004f42:	6053      	str	r3, [r2, #4]
 8004f44:	e7d8      	b.n	8004ef8 <_free_r+0x24>
 8004f46:	d902      	bls.n	8004f4e <_free_r+0x7a>
 8004f48:	230c      	movs	r3, #12
 8004f4a:	602b      	str	r3, [r5, #0]
 8004f4c:	e7d4      	b.n	8004ef8 <_free_r+0x24>
 8004f4e:	6820      	ldr	r0, [r4, #0]
 8004f50:	1821      	adds	r1, r4, r0
 8004f52:	428b      	cmp	r3, r1
 8004f54:	bf01      	itttt	eq
 8004f56:	6819      	ldreq	r1, [r3, #0]
 8004f58:	685b      	ldreq	r3, [r3, #4]
 8004f5a:	1809      	addeq	r1, r1, r0
 8004f5c:	6021      	streq	r1, [r4, #0]
 8004f5e:	6063      	str	r3, [r4, #4]
 8004f60:	6054      	str	r4, [r2, #4]
 8004f62:	e7c9      	b.n	8004ef8 <_free_r+0x24>
 8004f64:	bd38      	pop	{r3, r4, r5, pc}
 8004f66:	bf00      	nop
 8004f68:	20000174 	.word	0x20000174

08004f6c <_malloc_r>:
 8004f6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f6e:	1ccd      	adds	r5, r1, #3
 8004f70:	f025 0503 	bic.w	r5, r5, #3
 8004f74:	3508      	adds	r5, #8
 8004f76:	2d0c      	cmp	r5, #12
 8004f78:	bf38      	it	cc
 8004f7a:	250c      	movcc	r5, #12
 8004f7c:	2d00      	cmp	r5, #0
 8004f7e:	4606      	mov	r6, r0
 8004f80:	db01      	blt.n	8004f86 <_malloc_r+0x1a>
 8004f82:	42a9      	cmp	r1, r5
 8004f84:	d903      	bls.n	8004f8e <_malloc_r+0x22>
 8004f86:	230c      	movs	r3, #12
 8004f88:	6033      	str	r3, [r6, #0]
 8004f8a:	2000      	movs	r0, #0
 8004f8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f8e:	f000 f87d 	bl	800508c <__malloc_lock>
 8004f92:	4921      	ldr	r1, [pc, #132]	; (8005018 <_malloc_r+0xac>)
 8004f94:	680a      	ldr	r2, [r1, #0]
 8004f96:	4614      	mov	r4, r2
 8004f98:	b99c      	cbnz	r4, 8004fc2 <_malloc_r+0x56>
 8004f9a:	4f20      	ldr	r7, [pc, #128]	; (800501c <_malloc_r+0xb0>)
 8004f9c:	683b      	ldr	r3, [r7, #0]
 8004f9e:	b923      	cbnz	r3, 8004faa <_malloc_r+0x3e>
 8004fa0:	4621      	mov	r1, r4
 8004fa2:	4630      	mov	r0, r6
 8004fa4:	f000 f862 	bl	800506c <_sbrk_r>
 8004fa8:	6038      	str	r0, [r7, #0]
 8004faa:	4629      	mov	r1, r5
 8004fac:	4630      	mov	r0, r6
 8004fae:	f000 f85d 	bl	800506c <_sbrk_r>
 8004fb2:	1c43      	adds	r3, r0, #1
 8004fb4:	d123      	bne.n	8004ffe <_malloc_r+0x92>
 8004fb6:	230c      	movs	r3, #12
 8004fb8:	4630      	mov	r0, r6
 8004fba:	6033      	str	r3, [r6, #0]
 8004fbc:	f000 f86c 	bl	8005098 <__malloc_unlock>
 8004fc0:	e7e3      	b.n	8004f8a <_malloc_r+0x1e>
 8004fc2:	6823      	ldr	r3, [r4, #0]
 8004fc4:	1b5b      	subs	r3, r3, r5
 8004fc6:	d417      	bmi.n	8004ff8 <_malloc_r+0x8c>
 8004fc8:	2b0b      	cmp	r3, #11
 8004fca:	d903      	bls.n	8004fd4 <_malloc_r+0x68>
 8004fcc:	6023      	str	r3, [r4, #0]
 8004fce:	441c      	add	r4, r3
 8004fd0:	6025      	str	r5, [r4, #0]
 8004fd2:	e004      	b.n	8004fde <_malloc_r+0x72>
 8004fd4:	6863      	ldr	r3, [r4, #4]
 8004fd6:	42a2      	cmp	r2, r4
 8004fd8:	bf0c      	ite	eq
 8004fda:	600b      	streq	r3, [r1, #0]
 8004fdc:	6053      	strne	r3, [r2, #4]
 8004fde:	4630      	mov	r0, r6
 8004fe0:	f000 f85a 	bl	8005098 <__malloc_unlock>
 8004fe4:	f104 000b 	add.w	r0, r4, #11
 8004fe8:	1d23      	adds	r3, r4, #4
 8004fea:	f020 0007 	bic.w	r0, r0, #7
 8004fee:	1ac2      	subs	r2, r0, r3
 8004ff0:	d0cc      	beq.n	8004f8c <_malloc_r+0x20>
 8004ff2:	1a1b      	subs	r3, r3, r0
 8004ff4:	50a3      	str	r3, [r4, r2]
 8004ff6:	e7c9      	b.n	8004f8c <_malloc_r+0x20>
 8004ff8:	4622      	mov	r2, r4
 8004ffa:	6864      	ldr	r4, [r4, #4]
 8004ffc:	e7cc      	b.n	8004f98 <_malloc_r+0x2c>
 8004ffe:	1cc4      	adds	r4, r0, #3
 8005000:	f024 0403 	bic.w	r4, r4, #3
 8005004:	42a0      	cmp	r0, r4
 8005006:	d0e3      	beq.n	8004fd0 <_malloc_r+0x64>
 8005008:	1a21      	subs	r1, r4, r0
 800500a:	4630      	mov	r0, r6
 800500c:	f000 f82e 	bl	800506c <_sbrk_r>
 8005010:	3001      	adds	r0, #1
 8005012:	d1dd      	bne.n	8004fd0 <_malloc_r+0x64>
 8005014:	e7cf      	b.n	8004fb6 <_malloc_r+0x4a>
 8005016:	bf00      	nop
 8005018:	20000174 	.word	0x20000174
 800501c:	20000178 	.word	0x20000178

08005020 <_realloc_r>:
 8005020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005022:	4607      	mov	r7, r0
 8005024:	4614      	mov	r4, r2
 8005026:	460e      	mov	r6, r1
 8005028:	b921      	cbnz	r1, 8005034 <_realloc_r+0x14>
 800502a:	4611      	mov	r1, r2
 800502c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005030:	f7ff bf9c 	b.w	8004f6c <_malloc_r>
 8005034:	b922      	cbnz	r2, 8005040 <_realloc_r+0x20>
 8005036:	f7ff ff4d 	bl	8004ed4 <_free_r>
 800503a:	4625      	mov	r5, r4
 800503c:	4628      	mov	r0, r5
 800503e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005040:	f000 f830 	bl	80050a4 <_malloc_usable_size_r>
 8005044:	42a0      	cmp	r0, r4
 8005046:	d20f      	bcs.n	8005068 <_realloc_r+0x48>
 8005048:	4621      	mov	r1, r4
 800504a:	4638      	mov	r0, r7
 800504c:	f7ff ff8e 	bl	8004f6c <_malloc_r>
 8005050:	4605      	mov	r5, r0
 8005052:	2800      	cmp	r0, #0
 8005054:	d0f2      	beq.n	800503c <_realloc_r+0x1c>
 8005056:	4631      	mov	r1, r6
 8005058:	4622      	mov	r2, r4
 800505a:	f7ff ff13 	bl	8004e84 <memcpy>
 800505e:	4631      	mov	r1, r6
 8005060:	4638      	mov	r0, r7
 8005062:	f7ff ff37 	bl	8004ed4 <_free_r>
 8005066:	e7e9      	b.n	800503c <_realloc_r+0x1c>
 8005068:	4635      	mov	r5, r6
 800506a:	e7e7      	b.n	800503c <_realloc_r+0x1c>

0800506c <_sbrk_r>:
 800506c:	b538      	push	{r3, r4, r5, lr}
 800506e:	2300      	movs	r3, #0
 8005070:	4d05      	ldr	r5, [pc, #20]	; (8005088 <_sbrk_r+0x1c>)
 8005072:	4604      	mov	r4, r0
 8005074:	4608      	mov	r0, r1
 8005076:	602b      	str	r3, [r5, #0]
 8005078:	f7fd f946 	bl	8002308 <_sbrk>
 800507c:	1c43      	adds	r3, r0, #1
 800507e:	d102      	bne.n	8005086 <_sbrk_r+0x1a>
 8005080:	682b      	ldr	r3, [r5, #0]
 8005082:	b103      	cbz	r3, 8005086 <_sbrk_r+0x1a>
 8005084:	6023      	str	r3, [r4, #0]
 8005086:	bd38      	pop	{r3, r4, r5, pc}
 8005088:	200005a8 	.word	0x200005a8

0800508c <__malloc_lock>:
 800508c:	4801      	ldr	r0, [pc, #4]	; (8005094 <__malloc_lock+0x8>)
 800508e:	f000 b811 	b.w	80050b4 <__retarget_lock_acquire_recursive>
 8005092:	bf00      	nop
 8005094:	200005b0 	.word	0x200005b0

08005098 <__malloc_unlock>:
 8005098:	4801      	ldr	r0, [pc, #4]	; (80050a0 <__malloc_unlock+0x8>)
 800509a:	f000 b80c 	b.w	80050b6 <__retarget_lock_release_recursive>
 800509e:	bf00      	nop
 80050a0:	200005b0 	.word	0x200005b0

080050a4 <_malloc_usable_size_r>:
 80050a4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80050a8:	1f18      	subs	r0, r3, #4
 80050aa:	2b00      	cmp	r3, #0
 80050ac:	bfbc      	itt	lt
 80050ae:	580b      	ldrlt	r3, [r1, r0]
 80050b0:	18c0      	addlt	r0, r0, r3
 80050b2:	4770      	bx	lr

080050b4 <__retarget_lock_acquire_recursive>:
 80050b4:	4770      	bx	lr

080050b6 <__retarget_lock_release_recursive>:
 80050b6:	4770      	bx	lr

080050b8 <_init>:
 80050b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050ba:	bf00      	nop
 80050bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050be:	bc08      	pop	{r3}
 80050c0:	469e      	mov	lr, r3
 80050c2:	4770      	bx	lr

080050c4 <_fini>:
 80050c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050c6:	bf00      	nop
 80050c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050ca:	bc08      	pop	{r3}
 80050cc:	469e      	mov	lr, r3
 80050ce:	4770      	bx	lr
