ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB65:
  26              		.file 1 "./Core/Src/stm32f1xx_it.c"
   1:./Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:./Core/Src/stm32f1xx_it.c **** /**
   3:./Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:./Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:./Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:./Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:./Core/Src/stm32f1xx_it.c ****   * @attention
   8:./Core/Src/stm32f1xx_it.c ****   *
   9:./Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:./Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:./Core/Src/stm32f1xx_it.c ****   *
  12:./Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:./Core/Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:./Core/Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:./Core/Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:./Core/Src/stm32f1xx_it.c ****   *
  17:./Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:./Core/Src/stm32f1xx_it.c ****   */
  19:./Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:./Core/Src/stm32f1xx_it.c **** 
  21:./Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:./Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:./Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:./Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:./Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:./Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:./Core/Src/stm32f1xx_it.c **** 
  28:./Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:./Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:./Core/Src/stm32f1xx_it.c **** 
  31:./Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:./Core/Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 2


  33:./Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:./Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:./Core/Src/stm32f1xx_it.c **** 
  36:./Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:./Core/Src/stm32f1xx_it.c **** 
  38:./Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:./Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:./Core/Src/stm32f1xx_it.c **** 
  41:./Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:./Core/Src/stm32f1xx_it.c **** 
  43:./Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:./Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:./Core/Src/stm32f1xx_it.c **** 
  46:./Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:./Core/Src/stm32f1xx_it.c **** 
  48:./Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:./Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:./Core/Src/stm32f1xx_it.c **** 
  51:./Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:./Core/Src/stm32f1xx_it.c **** 
  53:./Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:./Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:./Core/Src/stm32f1xx_it.c **** 
  56:./Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:./Core/Src/stm32f1xx_it.c **** 
  58:./Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:./Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim2;
  60:./Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim3;
  61:./Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  62:./Core/Src/stm32f1xx_it.c **** 
  63:./Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  64:./Core/Src/stm32f1xx_it.c **** 
  65:./Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  66:./Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  67:./Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  68:./Core/Src/stm32f1xx_it.c **** /**
  69:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:./Core/Src/stm32f1xx_it.c ****   */
  71:./Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  72:./Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 72 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  37              	.L2:
  73:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:./Core/Src/stm32f1xx_it.c **** 
  75:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:./Core/Src/stm32f1xx_it.c ****   while (1)
  38              		.loc 1 77 9 discriminator 1
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 3


  39 0004 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE65:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  51              	HardFault_Handler:
  52              	.LFB66:
  78:./Core/Src/stm32f1xx_it.c ****   {
  79:./Core/Src/stm32f1xx_it.c ****   }
  80:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:./Core/Src/stm32f1xx_it.c **** }
  82:./Core/Src/stm32f1xx_it.c **** 
  83:./Core/Src/stm32f1xx_it.c **** /**
  84:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:./Core/Src/stm32f1xx_it.c ****   */
  86:./Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  87:./Core/Src/stm32f1xx_it.c **** {
  53              		.loc 1 87 1
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 1, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58 0000 80B4     		push	{r7}
  59              		.cfi_def_cfa_offset 4
  60              		.cfi_offset 7, -4
  61 0002 00AF     		add	r7, sp, #0
  62              		.cfi_def_cfa_register 7
  63              	.L4:
  88:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:./Core/Src/stm32f1xx_it.c **** 
  90:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:./Core/Src/stm32f1xx_it.c ****   while (1)
  64              		.loc 1 91 9 discriminator 1
  65 0004 FEE7     		b	.L4
  66              		.cfi_endproc
  67              	.LFE66:
  69              		.section	.text.MemManage_Handler,"ax",%progbits
  70              		.align	1
  71              		.global	MemManage_Handler
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu softvfp
  77              	MemManage_Handler:
  78              	.LFB67:
  92:./Core/Src/stm32f1xx_it.c ****   {
  93:./Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:./Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:./Core/Src/stm32f1xx_it.c ****   }
  96:./Core/Src/stm32f1xx_it.c **** }
  97:./Core/Src/stm32f1xx_it.c **** 
  98:./Core/Src/stm32f1xx_it.c **** /**
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 4


  99:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 100:./Core/Src/stm32f1xx_it.c ****   */
 101:./Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 102:./Core/Src/stm32f1xx_it.c **** {
  79              		.loc 1 102 1
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  89              	.L6:
 103:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:./Core/Src/stm32f1xx_it.c **** 
 105:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:./Core/Src/stm32f1xx_it.c ****   while (1)
  90              		.loc 1 106 9 discriminator 1
  91 0004 FEE7     		b	.L6
  92              		.cfi_endproc
  93              	.LFE67:
  95              		.section	.text.BusFault_Handler,"ax",%progbits
  96              		.align	1
  97              		.global	BusFault_Handler
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu softvfp
 103              	BusFault_Handler:
 104              	.LFB68:
 107:./Core/Src/stm32f1xx_it.c ****   {
 108:./Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:./Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:./Core/Src/stm32f1xx_it.c ****   }
 111:./Core/Src/stm32f1xx_it.c **** }
 112:./Core/Src/stm32f1xx_it.c **** 
 113:./Core/Src/stm32f1xx_it.c **** /**
 114:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 115:./Core/Src/stm32f1xx_it.c ****   */
 116:./Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 117:./Core/Src/stm32f1xx_it.c **** {
 105              		.loc 1 117 1
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110 0000 80B4     		push	{r7}
 111              		.cfi_def_cfa_offset 4
 112              		.cfi_offset 7, -4
 113 0002 00AF     		add	r7, sp, #0
 114              		.cfi_def_cfa_register 7
 115              	.L8:
 118:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:./Core/Src/stm32f1xx_it.c **** 
 120:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 5


 121:./Core/Src/stm32f1xx_it.c ****   while (1)
 116              		.loc 1 121 9 discriminator 1
 117 0004 FEE7     		b	.L8
 118              		.cfi_endproc
 119              	.LFE68:
 121              		.section	.text.UsageFault_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	UsageFault_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	UsageFault_Handler:
 130              	.LFB69:
 122:./Core/Src/stm32f1xx_it.c ****   {
 123:./Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:./Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:./Core/Src/stm32f1xx_it.c ****   }
 126:./Core/Src/stm32f1xx_it.c **** }
 127:./Core/Src/stm32f1xx_it.c **** 
 128:./Core/Src/stm32f1xx_it.c **** /**
 129:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:./Core/Src/stm32f1xx_it.c ****   */
 131:./Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 132:./Core/Src/stm32f1xx_it.c **** {
 131              		.loc 1 132 1
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 80B4     		push	{r7}
 137              		.cfi_def_cfa_offset 4
 138              		.cfi_offset 7, -4
 139 0002 00AF     		add	r7, sp, #0
 140              		.cfi_def_cfa_register 7
 141              	.L10:
 133:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:./Core/Src/stm32f1xx_it.c **** 
 135:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:./Core/Src/stm32f1xx_it.c ****   while (1)
 142              		.loc 1 136 9 discriminator 1
 143 0004 FEE7     		b	.L10
 144              		.cfi_endproc
 145              	.LFE69:
 147              		.section	.text.SVC_Handler,"ax",%progbits
 148              		.align	1
 149              		.global	SVC_Handler
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu softvfp
 155              	SVC_Handler:
 156              	.LFB70:
 137:./Core/Src/stm32f1xx_it.c ****   {
 138:./Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:./Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:./Core/Src/stm32f1xx_it.c ****   }
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 6


 141:./Core/Src/stm32f1xx_it.c **** }
 142:./Core/Src/stm32f1xx_it.c **** 
 143:./Core/Src/stm32f1xx_it.c **** /**
 144:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 145:./Core/Src/stm32f1xx_it.c ****   */
 146:./Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 147:./Core/Src/stm32f1xx_it.c **** {
 157              		.loc 1 147 1
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162 0000 80B4     		push	{r7}
 163              		.cfi_def_cfa_offset 4
 164              		.cfi_offset 7, -4
 165 0002 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
 148:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 149:./Core/Src/stm32f1xx_it.c **** 
 150:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 151:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 152:./Core/Src/stm32f1xx_it.c **** 
 153:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 154:./Core/Src/stm32f1xx_it.c **** }
 167              		.loc 1 154 1
 168 0004 00BF     		nop
 169 0006 BD46     		mov	sp, r7
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 0008 80BC     		pop	{r7}
 173              		.cfi_restore 7
 174              		.cfi_def_cfa_offset 0
 175 000a 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE70:
 179              		.section	.text.DebugMon_Handler,"ax",%progbits
 180              		.align	1
 181              		.global	DebugMon_Handler
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu softvfp
 187              	DebugMon_Handler:
 188              	.LFB71:
 155:./Core/Src/stm32f1xx_it.c **** 
 156:./Core/Src/stm32f1xx_it.c **** /**
 157:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 158:./Core/Src/stm32f1xx_it.c ****   */
 159:./Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 160:./Core/Src/stm32f1xx_it.c **** {
 189              		.loc 1 160 1
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 7


 196              		.cfi_offset 7, -4
 197 0002 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 161:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:./Core/Src/stm32f1xx_it.c **** 
 163:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:./Core/Src/stm32f1xx_it.c **** 
 166:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:./Core/Src/stm32f1xx_it.c **** }
 199              		.loc 1 167 1
 200 0004 00BF     		nop
 201 0006 BD46     		mov	sp, r7
 202              		.cfi_def_cfa_register 13
 203              		@ sp needed
 204 0008 80BC     		pop	{r7}
 205              		.cfi_restore 7
 206              		.cfi_def_cfa_offset 0
 207 000a 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE71:
 211              		.section	.text.PendSV_Handler,"ax",%progbits
 212              		.align	1
 213              		.global	PendSV_Handler
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu softvfp
 219              	PendSV_Handler:
 220              	.LFB72:
 168:./Core/Src/stm32f1xx_it.c **** 
 169:./Core/Src/stm32f1xx_it.c **** /**
 170:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 171:./Core/Src/stm32f1xx_it.c ****   */
 172:./Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 173:./Core/Src/stm32f1xx_it.c **** {
 221              		.loc 1 173 1
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226 0000 80B4     		push	{r7}
 227              		.cfi_def_cfa_offset 4
 228              		.cfi_offset 7, -4
 229 0002 00AF     		add	r7, sp, #0
 230              		.cfi_def_cfa_register 7
 174:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 175:./Core/Src/stm32f1xx_it.c **** 
 176:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 177:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 178:./Core/Src/stm32f1xx_it.c **** 
 179:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 180:./Core/Src/stm32f1xx_it.c **** }
 231              		.loc 1 180 1
 232 0004 00BF     		nop
 233 0006 BD46     		mov	sp, r7
 234              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 8


 235              		@ sp needed
 236 0008 80BC     		pop	{r7}
 237              		.cfi_restore 7
 238              		.cfi_def_cfa_offset 0
 239 000a 7047     		bx	lr
 240              		.cfi_endproc
 241              	.LFE72:
 243              		.section	.text.SysTick_Handler,"ax",%progbits
 244              		.align	1
 245              		.global	SysTick_Handler
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu softvfp
 251              	SysTick_Handler:
 252              	.LFB73:
 181:./Core/Src/stm32f1xx_it.c **** 
 182:./Core/Src/stm32f1xx_it.c **** /**
 183:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 184:./Core/Src/stm32f1xx_it.c ****   */
 185:./Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 186:./Core/Src/stm32f1xx_it.c **** {
 253              		.loc 1 186 1
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 187:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 188:./Core/Src/stm32f1xx_it.c **** 
 189:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 190:./Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 263              		.loc 1 190 3
 264 0004 FFF7FEFF 		bl	HAL_IncTick
 191:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 192:./Core/Src/stm32f1xx_it.c **** 
 193:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 194:./Core/Src/stm32f1xx_it.c **** }
 265              		.loc 1 194 1
 266 0008 00BF     		nop
 267 000a 80BD     		pop	{r7, pc}
 268              		.cfi_endproc
 269              	.LFE73:
 271              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 272              		.align	1
 273              		.global	TIM2_IRQHandler
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu softvfp
 279              	TIM2_IRQHandler:
 280              	.LFB74:
 195:./Core/Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 9


 196:./Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 197:./Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 198:./Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 199:./Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 200:./Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 201:./Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 202:./Core/Src/stm32f1xx_it.c **** 
 203:./Core/Src/stm32f1xx_it.c **** /**
 204:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 205:./Core/Src/stm32f1xx_it.c ****   */
 206:./Core/Src/stm32f1xx_it.c **** void TIM2_IRQHandler(void)
 207:./Core/Src/stm32f1xx_it.c **** {
 281              		.loc 1 207 1
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285 0000 80B5     		push	{r7, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 7, -8
 288              		.cfi_offset 14, -4
 289 0002 00AF     		add	r7, sp, #0
 290              		.cfi_def_cfa_register 7
 208:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 209:./Core/Src/stm32f1xx_it.c **** 
 210:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 211:./Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 291              		.loc 1 211 3
 292 0004 0248     		ldr	r0, .L16
 293 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 212:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 213:./Core/Src/stm32f1xx_it.c **** 
 214:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 215:./Core/Src/stm32f1xx_it.c **** }
 294              		.loc 1 215 1
 295 000a 00BF     		nop
 296 000c 80BD     		pop	{r7, pc}
 297              	.L17:
 298 000e 00BF     		.align	2
 299              	.L16:
 300 0010 00000000 		.word	htim2
 301              		.cfi_endproc
 302              	.LFE74:
 304              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 305              		.align	1
 306              		.global	TIM3_IRQHandler
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu softvfp
 312              	TIM3_IRQHandler:
 313              	.LFB75:
 216:./Core/Src/stm32f1xx_it.c **** 
 217:./Core/Src/stm32f1xx_it.c **** /**
 218:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 219:./Core/Src/stm32f1xx_it.c ****   */
 220:./Core/Src/stm32f1xx_it.c **** void TIM3_IRQHandler(void)
 221:./Core/Src/stm32f1xx_it.c **** {
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 10


 314              		.loc 1 221 1
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318 0000 80B5     		push	{r7, lr}
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 7, -8
 321              		.cfi_offset 14, -4
 322 0002 00AF     		add	r7, sp, #0
 323              		.cfi_def_cfa_register 7
 222:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 223:./Core/Src/stm32f1xx_it.c **** 
 224:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 225:./Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 324              		.loc 1 225 3
 325 0004 0248     		ldr	r0, .L19
 326 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 226:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 227:./Core/Src/stm32f1xx_it.c **** 
 228:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 229:./Core/Src/stm32f1xx_it.c **** }
 327              		.loc 1 229 1
 328 000a 00BF     		nop
 329 000c 80BD     		pop	{r7, pc}
 330              	.L20:
 331 000e 00BF     		.align	2
 332              	.L19:
 333 0010 00000000 		.word	htim3
 334              		.cfi_endproc
 335              	.LFE75:
 337              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 338              		.align	1
 339              		.global	EXTI15_10_IRQHandler
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu softvfp
 345              	EXTI15_10_IRQHandler:
 346              	.LFB76:
 230:./Core/Src/stm32f1xx_it.c **** 
 231:./Core/Src/stm32f1xx_it.c **** /**
 232:./Core/Src/stm32f1xx_it.c ****   * @brief This function handles EXTI line[15:10] interrupts.
 233:./Core/Src/stm32f1xx_it.c ****   */
 234:./Core/Src/stm32f1xx_it.c **** void EXTI15_10_IRQHandler(void)
 235:./Core/Src/stm32f1xx_it.c **** {
 347              		.loc 1 235 1
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 80B5     		push	{r7, lr}
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 7, -8
 354              		.cfi_offset 14, -4
 355 0002 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 236:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 237:./Core/Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 11


 238:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 239:./Core/Src/stm32f1xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 357              		.loc 1 239 3
 358 0004 4FF40050 		mov	r0, #8192
 359 0008 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 240:./Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 241:./Core/Src/stm32f1xx_it.c **** 
 242:./Core/Src/stm32f1xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 1 */
 243:./Core/Src/stm32f1xx_it.c **** }
 360              		.loc 1 243 1
 361 000c 00BF     		nop
 362 000e 80BD     		pop	{r7, pc}
 363              		.cfi_endproc
 364              	.LFE76:
 366              		.text
 367              	.Letext0:
 368              		.file 2 "c:\\st\\stm32cubeide_1.7.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externaltools
 369              		.file 3 "c:\\st\\stm32cubeide_1.7.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externaltools
 370              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 371              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 372              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 373              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 374              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 375              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 376              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:16     .text.NMI_Handler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:44     .text.HardFault_Handler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:70     .text.MemManage_Handler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:77     .text.MemManage_Handler:0000000000000000 MemManage_Handler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:96     .text.BusFault_Handler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:103    .text.BusFault_Handler:0000000000000000 BusFault_Handler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:122    .text.UsageFault_Handler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:129    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:148    .text.SVC_Handler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:155    .text.SVC_Handler:0000000000000000 SVC_Handler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:180    .text.DebugMon_Handler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:187    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:212    .text.PendSV_Handler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:219    .text.PendSV_Handler:0000000000000000 PendSV_Handler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:244    .text.SysTick_Handler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:251    .text.SysTick_Handler:0000000000000000 SysTick_Handler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:272    .text.TIM2_IRQHandler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:279    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:300    .text.TIM2_IRQHandler:0000000000000010 $d
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:305    .text.TIM3_IRQHandler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:312    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:333    .text.TIM3_IRQHandler:0000000000000010 $d
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:338    .text.EXTI15_10_IRQHandler:0000000000000000 $t
C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s:345    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
                           .group:0000000000000000 wm4.0.e890922d021f7fff2fbf219cb2b38f03
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.21.185fa7e4004c86f1f34627ab1091dd60
                           .group:0000000000000000 wm4.stm32f1xx.h.39.208bb8a61c892b7c37d899c49a031330
                           .group:0000000000000000 wm4.stm32f103xb.h.38.ec967d5ad9d3269cb0788eebda048e38
                           .group:0000000000000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.225e4f5469716fdeef823d1102f5b23e
                           .group:0000000000000000 wm4.core_cm3.h.127.f4474120f1a7524deb56f9d74ff175da
                           .group:0000000000000000 wm4.stm32f103xb.h.573.10249aa7473ca93be896fed94046a725
                           .group:0000000000000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.91ba5b544a4c2be2620a1e7ff0049e10
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.57.18d01ce1aa74e9fb44dbf16f821a574a
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.95.21591bbc513aaa813c0b8640c3b32517
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.22.8763f99bc1e3e2dcf0febe9161d81b37
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1202.f8e5f9e0cf4eef7840facf5396029056
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.22.fa638d688dcc57ca806fe6a7831b0d04
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.22.51a50ef3512cd78017ce666a32d364bf
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.263.f5ebf2f545ade59412ab9261c8e35dc4
                           .group:0000000000000000 wm4.stm32f1xx_hal_exti.h.22.e26491d042c8079c3ca67eca341af862
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.22.3c14338534886827bf3aeaa2a7f412a1
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.22.001ac4d7f81ccbdcae49bd65c13858c8
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.409.cafcd2cfe701091535636be537c18293
ARM GAS  C:\Users\nguye\AppData\Local\Temp\cccrdr4t.s 			page 13


                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.22.b5f4174bb6a50d95405567b8f50e0900
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.22.5cea9a7210e6315b41724b47b5fdf203
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.22.d4e19c21f2a86fa2f8ec2c2d5f1ab2af
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.22.3438c476faafc3240bf146f143df3fcd
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.22.a16e206564e97dbace9faae59a0d6008
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.22.5f7992e497faa36aa98f09f7214f4dbb
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.88.91065c0692bed6019c34f1e9c00589fd
                           .group:0000000000000000 wm4.main.h.63.92fcc8d3cbb1d835d8ee363312eb2117

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
htim2
htim3
HAL_GPIO_EXTI_IRQHandler
